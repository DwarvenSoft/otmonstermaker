{"version":3,"sources":["js/MonsterData.js","js/FlagsData.js","js/ScriptData.js","js/AttacksData.js","js/DefensesData.js","js/ElementsData.js","js/ImmunitiesData.js","js/SummonsData.js","js/VoicesData.js","js/LootData.js","js/IOData.js","js/AppData.js","components/MonsterMakerMenuItem.js","components/MonsterMakerLabel.js","components/MonsterMakerInput.js","components/MonsterMakerInputSelect.js","components/MonsterMakerTabMonster.js","components/MonsterMakerTabFlags.js","components/MonsterMakerTabScript.js","components/MonsterMakerItemsTableTr.js","components/MonsterMakerItemsTable.js","components/MonsterMakerButton.js","components/MonsterMakerTabAttacks.js","components/MonsterMakerTabDefenses.js","components/MonsterMakerTabElements.js","components/MonsterMakerTabImmunities.js","components/MonsterMakerTabSummons.js","components/MonsterMakerTabVoices.js","components/MonsterMakerTabLoot.js","components/MonsterMakerCode.js","components/MonsterMakerTabIO.js","components/MonsterMakerTabDefault.js","components/MonsterMakerMenu.js","App.js","serviceWorker.js","index.js"],"names":["MonsterData","_this","this","Object","classCallCheck","setName","value","name","setValueToLocalStorage","getName","setNameDescription","nameDescription","getNameDescription","setRace","race","getRace","setExperience","experience","getExperience","setSkull","skull","getSkull","setSpeed","speed","getSpeed","setManaCost","manaCost","getManaCost","setHealthNow","healthNow","getHealthNow","setHealthMax","healthMax","getHealthMax","setLookType","lookType","getLookType","setLookTypeValue","lookTypeValue","getLookTypeValue","setHead","head","getHead","setBody","body","getBody","setLegs","legs","getLegs","setFeet","feet","getFeet","setAddons","addons","getAddons","setMount","mount","getMount","setCorpse","corpse","getCorpse","setTargetchangeInterval","targetchangeInterval","getTargetchangeInterval","setTargetchangeChance","targetchangeChance","getTargetchangeChance","setStrategy","strategy","getStrategy","setAttack","attack","getAttack","setDefense","defense","getDefense","getDataIndex","dataIndex","getXML","indentation","arguments","length","undefined","fileXMLString","lookTypeFormat","setDefaultValue","loadXMLVariableMonster","variableName","variableValue","loadXMLVariableHealth","loadXMLVariableLook","loadXMLVariableTargetchange","loadXMLVariableStrategy","Number","key","localStorage","setItem","getValueFromLocalStorage","getItem","loadValuesFromLocalStorage","FlagsData","setSummonable","summonable","getSummonable","setAttackable","attackable","getAttackable","setHostile","hostile","getHostile","setIllusionable","illusionable","getIllusionable","setConvinceable","convinceable","getConvinceable","setPushable","pushable","getPushable","setCanpushitems","canpushitems","getCanpushitems","setCanpushcreatures","canpushcreatures","getCanpushcreatures","setTargetdistance","targetdistance","getTargetdistance","setStaticattack","staticattack","getStaticattack","setHidehealth","hidehealth","getHidehealth","setLightcolor","lightcolor","getLightcolor","setLightlevel","lightlevel","getLightlevel","setRunonhealth","runonhealth","getRunonhealth","loadXMLVariableFlag","ScriptData","setChecked","checked","getChecked","setScript","script","getScript","loadXMLVariableEvent","AttacksData","setType","type","setIndexType","index","allAttacks","setTableToLocalStorage","getType","setElementalType","elementalType","setIndexElementalType","getElementalType","setConditionsType","conditionsType","setIndexConditionsType","getConditionsType","setFieldsType","fieldsType","setIndexFieldsType","getFieldsType","setRunesType","runesType","setIndexRunesType","getRunesType","setSpellsType","spellsType","setIndexSpellsType","getSpellsType","setOtherType","otherType","setIndexOtherType","getOtherType","setMin","min","setIndexMin","getMin","setMax","max","setIndexMax","getMax","setSkillCheckbox","skillCheckbox","setIndexSkillCheckbox","getSkillCheckbox","setSkill","skill","setIndexSkill","getSkill","setIndexAttack","setInterval","interval","setIndexInterval","getInterval","setChance","chance","setIndexChance","getChance","setLengthCheckbox","lengthCheckbox","setIndexLengthCheckbox","getLengthCheckbox","setLength","setIndexLength","getLength","setSpreadCheckbox","spreadCheckbox","setIndexSpreadCheckbox","getSpreadCheckbox","setSpread","spread","setIndexSpread","getSpread","setRadiusCheckbox","radiusCheckbox","setIndexRadiusCheckbox","getRadiusCheckbox","setRadius","radius","setIndexRadius","getRadius","setPoisonCheckbox","poisonCheckbox","setIndexPoisonCheckbox","getPoisonCheckbox","setPoison","poison","setIndexPoison","getPoison","setTarget","target","setIndexTarget","getTarget","setRange","range","setIndexRange","getRange","setAreaeffectCheckbox","areaeffectCheckbox","setIndexAreaeffectCheckbox","getAreaeffectCheckbox","setAreaeffect","areaeffect","setIndexAreaeffect","getAreaeffect","setShooteffectCheckbox","shooteffectCheckbox","setIndexShooteffectCheckbox","getShooteffectCheckbox","setShooteffect","shooteffect","setIndexShooteffect","getShooteffect","getAttackTypeArray","attackTypeArray","getElementalTypeArray","elementalTypeArray","getConditionsTypeArray","conditionsTypeArray","getFieldsTypeArray","fieldsTypeArray","getRunesTypeArray","runesTypeArray","getSpellsTypeArray","spellsTypeArray","addToAttacks","allItems","push","deleteFromAttacks","splice","getFromAttacks","showAttacks","updateAttacks","getAttackFromData","attackTable","areaEffect","shootEffect","generateXMLattack","firstIndentation","attackData","getAllXMLattacks","returnAttacks","forEach","variable","allXMLattacks","map","setDefaultTableValue","compareValueToAttactType","item","i","loadXMLVariableAttack","attackType","loadXMLVariableAttribute","JSON","stringify","getTableFromLocalStorage","parse","DefensesData","setArmor","armor","getArmor","setDefenseName","defenseName","setIndexDefenseName","allDefenses","getDefenseName","setDuration","duration","setIndexDuration","getDuration","setSpeedChange","speedChange","setIndexSpeedChange","getSpeedChange","addToDefenses","deleteFromDefenses","getFromDefenses","showDefenses","updateDefenses","getDefenseFromData","defenseTable","generateXMLdefense","defenseData","getAllXMLdefenses","returnDefenses","allXMLdefenses","loadXMLVariableDefenses","loadXMLVariableDefense","ElementsData","setHoly","holy","getHoly","setDeath","death","getDeath","setIce","ice","getIce","setFire","fire","getFire","setEarth","earth","getEarth","setEnergy","energy","getEnergy","setPhysical","physical","getPhysical","setLifeDrain","lifeDrain","getLifeDrain","setDrown","drown","getDrown","loadXMLVariableElement","ImmunitiesData","setParalyze","paralyze","getParalyze","setDrunk","drunk","getDrunk","setInvisible","invisible","getInvisible","setOutfit","outfit","getOutfit","loadXMLVariableImmunity","SummonsData","setMaxSummons","maxSummons","getMaxSummons","setSummonName","summonName","setIndexSummonName","allSummons","getSummonName","addToSummons","deleteFromSummons","getFromSummons","showSummons","updateSummons","getSummonFromData","summonTable","generateXMLSummon","summonData","summon","getAllXMLSummons","returnSummons","allXMLsummons","loadXMLVariableSummons","loadXMLVariableSummon","VoicesData","setSentence","sentence","setIndexSentence","allVoices","getSentence","setYell","yell","setIndexYell","getYell","addToVoices","deleteFromVoices","getFromVoices","showVoices","updateVoices","getVoiceFromData","voiceTable","generateXMLVoice","voiceData","voice","getAllXMLVoices","returnVoices","allXMLvoices","loadXMLVariableVoices","loadXMLVariableVoice","LootData","setId","id","setIndexId","allLoot","getId","setNameCheckbox","nameCheckbox","setIndexNameCheckbox","getNameCheckbox","setIndexName","setCountMaxCheckbox","countMaxCheckbox","setIndexCountMaxCheckbox","getCountMaxCheckbox","setCountMax","countMax","setIndexCountMax","getCountMax","setSubtypeCheckbox","subtypeCheckbox","setIndexSubtypeCheckbox","getSubtypeCheckbox","setSubtype","subtype","setIndexSubtype","getSubtype","setActionIdCheckbox","actionIdCheckbox","setIndexActionIdCheckbox","getActionIdCheckbox","setActionId","actionId","setIndexActionId","getActionId","setUniqueIdCheckbox","uniqueIdCheckbox","setIndexUniqueIdCheckbox","getUniqueIdCheckbox","setUniqueId","uniqueId","setIndexUniqueId","getUniqueId","setTextCheckbox","textCheckbox","setIndexTextCheckbox","getTextCheckbox","setText","text","setIndexText","getText","setCommentCheckbox","commentCheckbox","setIndexCommentCheckbox","getCommentCheckbox","setComment","comment","setIndexComment","getComment","addToLoot","deleteFromLoot","getFromLoot","showLoot","updateLoot","getLootFromData","lootTable","countmax","actionid","uniqueid","getLootSubtype","water","blood","beer","slime","lemonade","milk","manafluid","lifefluid","oil","urine","coconut milk","wine","mud","fruit juice","lava","rum","swamp","tea","mead","getLootSubtypeId","1","2","3","4","5","6","7","10","11","13","14","15","19","21","26","27","28","35","43","translateLootSubtype","subType","lootSubtype","translateLootSubtypeIdToText","lootSubtypeId","generateXMLLoot","lootData","loot","getAllXMLLoot","returnLoot","allXMLloot","loadXMLVariableItem","IOData","setOwnNameCheckbox","ownNameCheckbox","getOwnNameCheckbox","setOwnName","ownName","getOwnName","setFileText","fileText","getFileText","loadFile","file","reader","FileReader","addEventListener","e","result","readAsBinaryString","AppData","getMonster","monsterData","getFlags","flagsData","scriptData","getAttacks","attacksData","getDefenses","defensesData","getElements","elementsData","getImmunities","immunitiesData","getSummons","summonsData","getVoices","voicesData","getLoot","getIO","ioData","downloadFile","a","document","createElement","href","btoa","textContent","download","click","loadDataFromXMLToTable","sector","preSector","parseXMLFile","itemsXMLString","split","line","replace","parseSectors","startSign","search","substring","endSign","nextSign","isStartComment","isEndComment","prePreparedText","preparedText","startNewString","findNextValue","firstQuote","secondQuote","getLineMonstersXML","monsterMakerMenuItemStyleLiDis","float","marginTop","marginBottom","marginLeft","monsterMakerMenuItemStyleLiAct","monsterMakerMenuItemStyleSpanDis","textAlign","padding","align","monsterMakerMenuItemStyleSpanAct","boxShadow","borderRadius","monsterMakerMenuItemStyleUl","listStyleType","paddingInlineStart","MonsterMakerMenuItem","props","possibleConstructorReturn","getPrototypeOf","call","toggleHover","setState","hover","state","changeClick","onClick","menuItemColorHover","myclassName","active","color","react_default","style","className","onMouseEnter","onMouseLeave","icon","React","Component","MonsterMakerLabelStyle","fontSize","MonsterMakerLabel","objectSpread","disabled","opacity","MonsterMakerInput","defaultValue","defaultChecked","onChange","step","MonsterMakerInputSelect","rows","selectItems","tabStyle","width","margin","backgroundColor","raceSelect","skullSelect","MonsterMakerTabMonster","onChangeName","event","appData","onChangeNameDescription","onChangeRace","onChangeExperience","onChangeSkull","onChangeSpeed","onChangeManaCost","onChangeHealthMin","setHealthMin","onChangeHealthMax","onChangeLookTypeValue","onChangeHead","onChangeBody","onChangeLegs","onChangeFeet","onChangeAddons","onChangeMount","onChangeCorpse","onChangeTargetchangeInterval","onChangeTargetchangeChance","onChangeStrategy","strategyCheckbox","onChangeStrategyValue","strategyValue","onChangeLookType","radioLookType","currentTarget","components_MonsterMakerLabel","components_MonsterMakerInput","components_MonsterMakerInputSelect","onChangeHealthNow","display","MonsterMakerTabFlags","onChangeSummonable","onChangeAttackable","onChangeHostile","onChangeIllusionable","onChangeConvinceable","onChangePushable","onChangeCanpushitems","onChangeCanpushcreatures","onChangeTargetdistance","onChangeStaticattack","onChangeHidehealth","onChangeLightcolor","lightcolorChange","onChangeLightlevel","onChangeRunonhealth","MonsterMakerTabScript","onChangeChecked","check","onChangeScript","trStyle","whiteSpace","trStyleHover","selectedItem","MonsterMakerItemsTableTr","changeActiveItem","activeItem","containerStyle","maxHeight","overflow","tableStyle","MonsterMakerItemsTable","data","components_MonsterMakerItemsTableTr","buttonStyle","height","borderColor","marginRight","outline","buttonStyleHover","iconStyle","MonsterMakerButton","data-tip","tooltip","dist_default","place","effect","MonsterMakerTabAttacks","onChangeAttackType","onChangeElementalType","onChangeConditionsType","onChangeFieldsType","onChangeRunesType","onChangeSpellsType","onChangeOtherType","onChangeMin","onChangeMax","onChangeSkillCheckbox","skillChange","onChangeSkill","onChangeAttack","onChangeInterval","onChangeChance","onChangeLengthCheckbox","onChangeLength","onChangeSpreadCheckbox","onChangeSpread","onChangeRadiusCheckbox","onChangeRadius","onChangePoisonCheckbox","onChangePoison","onChangeTarget","onChangeRange","onChangeAreaeffectCheckbox","onChangeAreaeffect","onChangeShooteffectCheckbox","onChangeShooteffect","clickAddButton","forceUpdate","clickDeleteButton","refreshItems","setActiveItem","components_MonsterMakerItemsTable","components_MonsterMakerButton","MonsterMakerTabDefenses","onChangeArmor","onChangeDefense","onChangeDefenseName","onChangeDuration","onChangeSpeedChange","MonsterMakerTabElements","onChangeHoly","onChangeDeath","onChangeIce","onChangeFire","onChangeEarth","onChangeEnergy","onChangePhysical","onChangeLifeDrain","onChangeDrown","MonsterMakerTabImmunities","onChangeParalyze","onChangeDrunk","onChangeInvisible","onChangeOutfit","MonsterMakerTabSummons","onChangeMaxSummons","onChangeSummonName","MonsterMakerTabVoices","onChangeSentence","onChangeYell","MonsterMakerTabLoot","onChangeId","onChangeNameCheckbox","onChangeCountMaxCheckbox","onChangeCountMax","onChangeSubtypeCheckbox","onChangeSubtype","onChangeActionIdCheckbox","onChangeActionId","onChangeUniqueIdCheckbox","onChangeUniqueId","onChangeTextCheckbox","onChangeText","onChangeCommentCheckbox","onChangeComment","textContainerStyle","MonsterMakerCode","MonsterMakerTabIO","onChangeOwnNameCheckbox","onChangeOwnName","onChangePath","files","newName","fileOwnName","uploadFile","window","confirm","minWidth","components_MonsterMakerCode","monsterMakerDefaultH1","MonsterMakerTabDefault","monsterMakerMenuStyle","mainWindowStyle","minHeight","backgroundImage","MonsterMakerMenu","handleItemClick","changeState","changeAttacksActiveItem","attacksActiveItem","changeDefensesActiveItem","defensesActiveItem","changeSummonsActiveItem","summonsActiveItem","changeVoicesActiveItem","voicesActiveItem","changeLootActiveItem","lootActiveItem","components_MonsterMakerMenuItem","components_MonsterMakerTabMonster","components_MonsterMakerTabFlags","components_MonsterMakerTabScript","components_MonsterMakerTabAttacks","components_MonsterMakerTabDefenses","components_MonsterMakerTabElements","components_MonsterMakerTabImmunities","components_MonsterMakerTabSummons","components_MonsterMakerTabVoices","components_MonsterMakerTabLoot","components_MonsterMakerTabIO","components_MonsterMakerTabDefault","App","components_MonsterMakerMenu","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.874bc728.chunk.js","sourcesContent":["class MonsterData {\r\n    constructor() {\r\n        this.name = \"\";\r\n        this.nameDescription = \"\";\r\n        this.race = \"blood\";\r\n        this.experience = 1000;\r\n        this.skull = \"none\";\r\n        this.speed = 100;\r\n        this.manaCost = 0;\r\n        this.healthNow = 100;\r\n        this.healthMax = 100;\r\n        this.lookType = \"0\";\r\n        this.lookTypeValue = 1;\r\n        this.head = 0;\r\n        this.body = 0;\r\n        this.legs = 0;\r\n        this.feet = 0;\r\n        this.addons = 0;\r\n        this.mount = 0;\r\n        this.corpse = 1;\r\n        this.targetchangeInterval = 2000;\r\n        this.targetchangeChance = 5;\r\n        this.strategy = false;\r\n        this.attack = 50;\r\n        this.defense = 50;\r\n\r\n        this.dataIndex = \"MONSTER_\";\r\n    }\r\n\r\n    setName = (value) => {\r\n        this.name = value;\r\n        this.setValueToLocalStorage('name', value);\r\n    }\r\n\r\n    getName = () => {\r\n        return this.name;\r\n    }\r\n\r\n    setNameDescription = (value) => {\r\n        this.nameDescription = value;\r\n        this.setValueToLocalStorage('nameDescription', value);\r\n    }\r\n\r\n    getNameDescription = () => {\r\n        return this.nameDescription;\r\n    }\r\n\r\n    setRace = (value) => {\r\n        this.race = value;\r\n        this.setValueToLocalStorage('race', value);\r\n    }\r\n\r\n    getRace = () => {\r\n        return this.race;\r\n    }\r\n\r\n    setExperience = (value) => {\r\n        this.experience = value;\r\n        this.setValueToLocalStorage('experience', value);\r\n    }\r\n\r\n    getExperience = () => {\r\n        return this.experience;\r\n    }\r\n\r\n    setSkull = (value) => {\r\n        this.skull = value;\r\n        this.setValueToLocalStorage('skull', value);\r\n    }\r\n\r\n    getSkull = () => {\r\n        return this.skull;\r\n    }\r\n\r\n    setSpeed = (value) => {\r\n        this.speed = value;\r\n        this.setValueToLocalStorage('speed', value);\r\n    }\r\n\r\n    getSpeed = () => {\r\n        return this.speed;\r\n    }\r\n\r\n    setManaCost = (value) => {\r\n        this.manaCost = value;\r\n        this.setValueToLocalStorage('manaCost', value);\r\n    }\r\n\r\n    getManaCost = () => {\r\n        return this.manaCost;\r\n    }\r\n\r\n    setHealthNow = (value) => {\r\n        this.healthNow = value;\r\n        this.setValueToLocalStorage('healthNow', value);\r\n    }\r\n\r\n    getHealthNow = () => {\r\n        return this.healthNow;\r\n    }\r\n\r\n    setHealthMax = (value) => {\r\n        this.healthMax = value;\r\n        this.setValueToLocalStorage('healthMax', value);\r\n    }\r\n\r\n    getHealthMax = () => {\r\n        return this.healthMax;\r\n    }\r\n\r\n    setLookType = (value) => {\r\n        this.lookType = value;\r\n        this.setValueToLocalStorage('lookType', value);\r\n    }\r\n\r\n    getLookType = () => {\r\n        return this.lookType;\r\n    }\r\n\r\n    setLookTypeValue = (value) => {\r\n        this.lookTypeValue = value;\r\n        this.setValueToLocalStorage('lookTypeValue', value);\r\n    }\r\n\r\n    getLookTypeValue = () => {\r\n        return this.lookTypeValue;\r\n    }\r\n\r\n    setHead = (value) => {\r\n        this.head = value;\r\n        this.setValueToLocalStorage('head', value);\r\n    }\r\n\r\n    getHead = () => {\r\n        return this.head;\r\n    }\r\n\r\n    setBody = (value) => {\r\n        this.body = value;\r\n        this.setValueToLocalStorage('body', value);\r\n    }\r\n\r\n    getBody = () => {\r\n        return this.body;\r\n    }\r\n\r\n    setLegs = (value) => {\r\n        this.legs = value;\r\n        this.setValueToLocalStorage('legs', value);\r\n    }\r\n    \r\n    getLegs = () => {\r\n        return this.legs;\r\n    }\r\n\r\n    setFeet = (value) => {\r\n        this.feet = value;\r\n        this.setValueToLocalStorage('feet', value);\r\n    }\r\n\r\n    getFeet = () => {\r\n        return this.feet;\r\n    }\r\n\r\n    setAddons = (value) => {\r\n        this.addons = value;\r\n        this.setValueToLocalStorage('addons', value);\r\n    }\r\n\r\n    getAddons = () => {\r\n        return this.addons;\r\n    }\r\n\r\n    setMount = (value) => {\r\n        this.mount = value;\r\n        this.setValueToLocalStorage('mount', value);\r\n    }\r\n\r\n    getMount = () => {\r\n        return this.mount;\r\n    }\r\n\r\n    setCorpse = (value) => {\r\n        this.corpse = value;\r\n        this.setValueToLocalStorage('corpse', value);\r\n    }\r\n\r\n    getCorpse = () => {\r\n        return this.corpse;\r\n    }\r\n\r\n    setTargetchangeInterval = (value) => {\r\n        this.targetchangeInterval = value;\r\n        this.setValueToLocalStorage('targetchangeInterval', value);\r\n    }\r\n\r\n    getTargetchangeInterval = () => {\r\n        return this.targetchangeInterval;\r\n    }\r\n\r\n    setTargetchangeChance = (value) => {\r\n        this.targetchangeChance = value;\r\n        this.setValueToLocalStorage('targetchangeChance', value);\r\n    }\r\n\r\n    getTargetchangeChance = () => {\r\n        return this.targetchangeChance;\r\n    }\r\n\r\n    setStrategy = (value) => {\r\n        this.strategy = value;\r\n        this.setValueToLocalStorage('strategy', value);\r\n    }\r\n\r\n    getStrategy = () => {\r\n        return this.strategy;\r\n    }\r\n\r\n    setAttack = (value) => {\r\n        this.attack = value;\r\n        this.setValueToLocalStorage('attack', value);\r\n    }\r\n\r\n    getAttack = () => {\r\n        return this.attack;\r\n    }\r\n\r\n    setDefense = (value) => {\r\n        this.defense = value;\r\n        this.setValueToLocalStorage('defense', value);\r\n    }\r\n\r\n    getDefense = () => {\r\n        return this.defense;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t') => {\r\n        var fileXMLString = '';\r\n        \r\n        fileXMLString += '\\n' + '<monster name=\"' + this.getName() + '\" nameDescription=\"' + this.getNameDescription() +\r\n        '\" race=\"' + this.getRace() + '\" experience=\"' + this.getExperience() + '\" skull=\"' + this.getSkull() +\r\n        '\" speed=\"' + this.getSpeed() + '\" manacost=\"' + this.getManaCost() + '\">';\r\n        \r\n        fileXMLString += '\\n' + indentation + '<health now=\"' + this.getHealthNow() + '\" max=\"' + this.getHealthMax() + '\"/>';\r\n        \r\n        var lookTypeFormat = null;\r\n        if (this.getLookType() === \"0\") {\r\n            lookTypeFormat = 'type';\r\n        } else if (this.getLookType() === \"1\") {\r\n            lookTypeFormat = 'typeEx';\r\n        }\r\n        \r\n        fileXMLString += '\\n' + indentation + '<look ' + lookTypeFormat + '=\"' + this.getLookTypeValue() + '\" head=\"' + this.getHead() +\r\n        '\" body=\"' + this.getBody() + '\" legs=\"' + this.getLegs() + '\" feet=\"' + this.getFeet() + '\" addons=\"' +\r\n        this.getAddons() + '\" mount=\"' + this.getMount() + '\" corpse=\"' + this.getCorpse() + '\"/>';\r\n        \r\n        fileXMLString += '\\n' + indentation + '<targetchange interval=\"' + this.getTargetchangeInterval() + '\" chance=\"' + this.getTargetchangeChance() + '\"/>';\r\n        \r\n        if (this.getStrategy()) {\r\n            fileXMLString += '\\n' + indentation + '<strategy attack=\"' + this.getAttack() + '\" defense=\"' + this.getDefense() + '\"/>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setName(\"\");\r\n        this.setNameDescription(\"\");\r\n        this.setRace(\"blood\");\r\n        this.setExperience(1000);\r\n        this.setSkull(\"none\");\r\n        this.setSpeed(100);\r\n        this.setManaCost(0);\r\n        this.setHealthNow(100);\r\n        this.setHealthMax(100);\r\n        this.setLookType(\"0\");\r\n        this.setLookTypeValue(1);\r\n        this.setHead(0);\r\n        this.setBody(0);\r\n        this.setLegs(0);\r\n        this.setFeet(0);\r\n        this.setAddons(0);\r\n        this.setMount(0);\r\n        this.setCorpse(1);\r\n        this.setTargetchangeInterval(2000);\r\n        this.setTargetchangeChance(5);\r\n        this.setStrategy(false);\r\n        this.setAttack(50);\r\n        this.setDefense(50);\r\n    }\r\n\r\n    loadXMLVariableMonster = (variableName, variableValue) => {\r\n        if (variableName === 'name') {\r\n            this.setName(variableValue);\r\n        } else if (variableName === 'nameDescription') {\r\n            this.setNameDescription(variableValue);\r\n        } else if (variableName === 'race') {\r\n            this.setRace(variableValue);\r\n        } else if (variableName === 'experience') {\r\n            this.setExperience(variableValue);\r\n        } else if (variableName === 'skull') {\r\n            this.setSkull(variableValue);\r\n        } else if (variableName === 'speed') {\r\n            this.setSpeed(variableValue);\r\n        } else if (variableName === 'manacost') {\r\n            this.setManaCost(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableHealth = (variableName, variableValue) => {\r\n        if (variableName === 'now') {\r\n            this.setHealthNow(variableValue);\r\n        } else if (variableName === 'max') {\r\n            this.setHealthMax(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableLook = (variableName, variableValue) => {\r\n        if (variableName === 'type') {\r\n            this.setLookType(\"0\");\r\n            this.setLookTypeValue(variableValue);\r\n        } else if (variableName === 'typeEx') {\r\n            this.setLookType(\"1\");\r\n            this.setLookTypeValue(variableValue);\r\n        } else if (variableName === 'head') {\r\n            this.setHead(variableValue);\r\n        } else if (variableName === 'body') {\r\n            this.setBody(variableValue);\r\n        } else if (variableName === 'legs') {\r\n            this.setLegs(variableValue);\r\n        } else if (variableName === 'feet') {\r\n            this.setFeet(variableValue);\r\n        } else if (variableName === 'addons') {\r\n            this.setAddons(variableValue);\r\n        } else if (variableName === 'mount') {\r\n            this.setMount(variableValue);\r\n        } else if (variableName === 'corpse') {\r\n            this.setCorpse(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableTargetchange = (variableName, variableValue) => {\r\n        if (variableName === 'interval') {\r\n            this.setTargetchangeInterval(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setTargetchangeChance(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableStrategy = (variableName, variableValue) => {\r\n        this.setStrategy(true);\r\n        if (variableName === 'attack') {\r\n            this.setAttack(Number(variableValue));\r\n            this.setDefense(100 - Number(variableValue));\r\n        //} else if (variableName === 'defense') {\r\n            //  Ignore\r\n            //this.setDefense(100 - Number(variableValue));\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('name') !== null) {\r\n            this.setName(this.getValueFromLocalStorage('name'));\r\n        }\r\n        if (this.getValueFromLocalStorage('nameDescription') !== null) {\r\n            this.setNameDescription(this.getValueFromLocalStorage('nameDescription'));\r\n        }\r\n        if (this.getValueFromLocalStorage('race') !== null) {\r\n            this.setRace(this.getValueFromLocalStorage('race'));\r\n        }\r\n        if (this.getValueFromLocalStorage('experience') !== null) {\r\n            this.setExperience(this.getValueFromLocalStorage('experience'));\r\n        }\r\n        if (this.getValueFromLocalStorage('skull') !== null) {\r\n            this.setSkull(this.getValueFromLocalStorage('skull'));\r\n        }\r\n        if (this.getValueFromLocalStorage('speed') !== null) {\r\n            this.setSpeed(this.getValueFromLocalStorage('speed'));\r\n        }\r\n        if (this.getValueFromLocalStorage('manaCost') !== null) {\r\n            this.setManaCost(this.getValueFromLocalStorage('manaCost'));\r\n        }\r\n        if (this.getValueFromLocalStorage('healthNow') !== null) {\r\n            this.setHealthNow(this.getValueFromLocalStorage('healthNow'));\r\n        }\r\n        if (this.getValueFromLocalStorage('healthMax') !== null) {\r\n            this.setHealthMax(this.getValueFromLocalStorage('healthMax'));\r\n        }\r\n        if (this.getValueFromLocalStorage('lookType') !== null) {\r\n            this.setLookType(this.getValueFromLocalStorage('lookType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('lookTypeValue') !== null) {\r\n            this.setLookTypeValue(this.getValueFromLocalStorage('lookTypeValue'));\r\n        }\r\n        if (this.getValueFromLocalStorage('head') !== null) {\r\n            this.setHead(this.getValueFromLocalStorage('head'));\r\n        }\r\n        if (this.getValueFromLocalStorage('body') !== null) {\r\n            this.setBody(this.getValueFromLocalStorage('body'));\r\n        }\r\n        if (this.getValueFromLocalStorage('legs') !== null) {\r\n            this.setLegs(this.getValueFromLocalStorage('legs'));\r\n        }\r\n        if (this.getValueFromLocalStorage('feet') !== null) {\r\n            this.setFeet(this.getValueFromLocalStorage('feet'));\r\n        }\r\n        if (this.getValueFromLocalStorage('addons') !== null) {\r\n            this.setAddons(this.getValueFromLocalStorage('addons'));\r\n        }\r\n        if (this.getValueFromLocalStorage('mount') !== null) {\r\n            this.setMount(this.getValueFromLocalStorage('mount'));\r\n        }\r\n        if (this.getValueFromLocalStorage('corpse') !== null) {\r\n            this.setCorpse(this.getValueFromLocalStorage('corpse'));\r\n        }\r\n        if (this.getValueFromLocalStorage('targetchangeInterval') !== null) {\r\n            this.setTargetchangeInterval(this.getValueFromLocalStorage('targetchangeInterval'));\r\n        }\r\n        if (this.getValueFromLocalStorage('targetchangeChance') !== null) {\r\n            this.setTargetchangeChance(this.getValueFromLocalStorage('targetchangeChance'));\r\n        }\r\n        if (this.getValueFromLocalStorage('strategy') !== null) {\r\n            if (this.getValueFromLocalStorage('strategy') === 'true') {\r\n                this.setStrategy(true);\r\n            } else if (this.getValueFromLocalStorage('strategy') === 'false') {\r\n                this.setStrategy(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('attack') !== null) {\r\n            this.setAttack(this.getValueFromLocalStorage('attack'));\r\n        }\r\n        if (this.getValueFromLocalStorage('defense') !== null) {\r\n            this.setDefense(this.getValueFromLocalStorage('defense'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default MonsterData;\r\n","class FlagsData {\r\n    constructor() {\r\n        this.summonable = false;\r\n        this.attackable = false;\r\n        this.hostile = false;\r\n        this.illusionable = false;\r\n        this.convinceable = false;\r\n        this.pushable = false;\r\n        this.canpushitems = false;\r\n        this.canpushcreatures = false;\r\n        this.targetdistance = 1;\r\n        this.staticattack = 90;\r\n        this.hidehealth = false;\r\n        this.lightcolor = \"0\";\r\n        this.lightlevel = 1;\r\n        this.runonhealth = 25;\r\n\r\n        this.dataIndex = \"FLAGS_\";\r\n    }\r\n\r\n    setSummonable = (value) => {\r\n        this.summonable = value;\r\n        this.setValueToLocalStorage('summonable', value);\r\n    }\r\n\r\n    getSummonable = () => {\r\n        return this.summonable;\r\n    }\r\n\r\n    setAttackable = (value) => {\r\n        this.attackable = value;\r\n        this.setValueToLocalStorage('attackable', value);\r\n    }\r\n\r\n    getAttackable = () => {\r\n        return this.attackable;\r\n    }\r\n\r\n    setHostile = (value) => {\r\n        this.hostile = value;\r\n        this.setValueToLocalStorage('hostile', value);\r\n    }\r\n\r\n    getHostile = () => {\r\n        return this.hostile;\r\n    }\r\n\r\n    setIllusionable = (value) => {\r\n        this.illusionable = value;\r\n        this.setValueToLocalStorage('illusionable', value);\r\n    }\r\n\r\n    getIllusionable = () => {\r\n        return this.illusionable;\r\n    }\r\n\r\n    setConvinceable = (value) => {\r\n        this.convinceable = value;\r\n        this.setValueToLocalStorage('convinceable', value);\r\n    }\r\n\r\n    getConvinceable = () => {\r\n        return this.convinceable;\r\n    }\r\n\r\n    setPushable = (value) => {\r\n        this.pushable = value;\r\n        this.setValueToLocalStorage('pushable', value);\r\n    }\r\n\r\n    getPushable = () => {\r\n        return this.pushable;\r\n    }\r\n\r\n    setCanpushitems = (value) => {\r\n        this.canpushitems = value;\r\n        this.setValueToLocalStorage('canpushitems', value);\r\n    }\r\n\r\n    getCanpushitems = () => {\r\n        return this.canpushitems;\r\n    }\r\n\r\n    setCanpushcreatures = (value) => {\r\n        this.canpushcreatures = value;\r\n        this.setValueToLocalStorage('canpushcreatures', value);\r\n    }\r\n\r\n    getCanpushcreatures = () => {\r\n        return this.canpushcreatures;\r\n    }\r\n\r\n    setTargetdistance = (value) => {\r\n        this.targetdistance = value;\r\n        this.setValueToLocalStorage('targetdistance', value);\r\n    }\r\n\r\n    getTargetdistance = () => {\r\n        return this.targetdistance;\r\n    }\r\n\r\n    setStaticattack = (value) => {\r\n        this.staticattack = value;\r\n        this.setValueToLocalStorage('staticattack', value);\r\n    }\r\n\r\n    getStaticattack = () => {\r\n        return this.staticattack;\r\n    }\r\n\r\n    setHidehealth = (value) => {\r\n        this.hidehealth = value;\r\n        this.setValueToLocalStorage('hidehealth', value);\r\n    }\r\n\r\n    getHidehealth = () => {\r\n        return this.hidehealth;\r\n    }\r\n\r\n    setLightcolor = (value) => {\r\n        this.lightcolor = value;\r\n        this.setValueToLocalStorage('lightcolor', value);\r\n    }\r\n\r\n    getLightcolor = () => {\r\n        return this.lightcolor;\r\n    }\r\n\r\n    setLightlevel = (value) => {\r\n        this.lightlevel = value;\r\n        this.setValueToLocalStorage('lightlevel', value);\r\n    }\r\n\r\n    getLightlevel = () => {\r\n        return this.lightlevel;\r\n    }\r\n\r\n    setRunonhealth = (value) => {\r\n        this.runonhealth = value;\r\n        this.setValueToLocalStorage('runonhealth', value);\r\n    }\r\n\r\n    getRunonhealth = () => {\r\n        return this.runonhealth;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t') => {\r\n        var fileXMLString = '';\r\n\r\n        fileXMLString += '\\n' + indentation + '<flags>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag summonable=\"' + Number(this.getSummonable()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag attackable=\"' + Number(this.getAttackable()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag hostile=\"' + Number(this.getHostile()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag illusionable=\"' + Number(this.getIllusionable()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag convinceable=\"' + Number(this.getConvinceable()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag pushable=\"' + Number(this.getPushable()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag canpushitems=\"' + Number(this.getCanpushitems()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag canpushcreatures=\"' + Number(this.getCanpushcreatures()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag targetdistance=\"' + this.getTargetdistance() + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag staticattack=\"' + this.getStaticattack() + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag hidehealth=\"' + Number(this.getHidehealth()) + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag lightcolor=\"' + this.getLightcolor() + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag lightlevel=\"' + this.getLightlevel() + '\"/>';\r\n        fileXMLString += '\\n' + indentation + indentation + '<flag runonhealth=\"' + this.getRunonhealth() + '\"/>';\r\n        fileXMLString += '\\n' + indentation + '</flags>';\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setSummonable(false);\r\n        this.setAttackable(false);\r\n        this.setHostile(false);\r\n        this.setIllusionable(false);\r\n        this.setConvinceable(false);\r\n        this.setPushable(false);\r\n        this.setCanpushitems(false);\r\n        this.setCanpushcreatures(false);\r\n        this.setTargetdistance(1);\r\n        this.setStaticattack(90);\r\n        this.setHidehealth(false);\r\n        this.setLightcolor(\"0\");\r\n        this.setLightlevel(1);\r\n        this.setRunonhealth(25);\r\n    }\r\n\r\n    loadXMLVariableFlag = (variableName, variableValue) => {\r\n        if (variableName === 'summonable') {\r\n            if (variableValue === '1') {\r\n                this.setSummonable(true);\r\n            } else {\r\n                this.setSummonable(false);\r\n            }\r\n        } else if (variableName === 'attackable') {\r\n            if (variableValue === '1') {\r\n                this.setAttackable(true);\r\n            } else {\r\n                this.setAttackable(false);\r\n            }\r\n        } else if (variableName === 'hostile') {\r\n            if (variableValue === '1') {\r\n                this.setHostile(true);\r\n            } else {\r\n                this.setHostile(false);\r\n            }\r\n        } else if (variableName === 'illusionable') {\r\n            if (variableValue === '1') {\r\n                this.setIllusionable(true);\r\n            } else {\r\n                this.setIllusionable(false);\r\n            }\r\n        } else if (variableName === 'convinceable') {\r\n            if (variableValue === '1') {\r\n                this.setConvinceable(true);\r\n            } else {\r\n                this.setConvinceable(false);\r\n            }\r\n        } else if (variableName === 'pushable') {\r\n            if (variableValue === '1') {\r\n                this.setPushable(true);\r\n            } else {\r\n                this.setPushable(false);\r\n            }\r\n        } else if (variableName === 'canpushitems') {\r\n            if (variableValue === '1') {\r\n                this.setCanpushitems(true);\r\n            } else {\r\n                this.setCanpushitems(false);\r\n            }\r\n        } else if (variableName === 'canpushcreatures') {\r\n            if (variableValue === '1') {\r\n                this.setCanpushcreatures(true);\r\n            } else {\r\n                this.setCanpushcreatures(false);\r\n            }\r\n        } else if (variableName === 'targetdistance') {\r\n            this.setTargetdistance(variableValue);\r\n        } else if (variableName === 'staticattack') {\r\n            this.setStaticattack(variableValue);\r\n        } else if (variableName === 'hidehealth') {\r\n            if (variableValue === '1') {\r\n                this.setHidehealth(true);\r\n            } else {\r\n                this.setHidehealth(false);\r\n            }\r\n        } else if (variableName === 'lightcolor') {\r\n            this.setLightcolor(variableValue);\r\n        } else if (variableName === 'lightlevel') {\r\n            this.setLightlevel(variableValue);\r\n        } else if (variableName === 'runonhealth') {\r\n            this.setRunonhealth(variableValue);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('summonable') !== null) {\r\n            if (this.getValueFromLocalStorage('summonable') === 'true') {\r\n                this.setSummonable(true);\r\n            } else if (this.getValueFromLocalStorage('summonable') === 'false') {\r\n                this.setSummonable(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('attackable') !== null) {\r\n            if (this.getValueFromLocalStorage('attackable') === 'true') {\r\n                this.setAttackable(true);\r\n            } else if (this.getValueFromLocalStorage('attackable') === 'false') {\r\n                this.setAttackable(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('hostile') !== null) {\r\n            if (this.getValueFromLocalStorage('hostile') === 'true') {\r\n                this.setHostile(true);\r\n            } else if (this.getValueFromLocalStorage('hostile') === 'false') {\r\n                this.setHostile(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('illusionable') !== null) {\r\n            if (this.getValueFromLocalStorage('illusionable') === 'true') {\r\n                this.setIllusionable(true);\r\n            } else if (this.getValueFromLocalStorage('illusionable') === 'false') {\r\n                this.setIllusionable(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('convinceable') !== null) {\r\n            if (this.getValueFromLocalStorage('convinceable') === 'true') {\r\n                this.setConvinceable(true);\r\n            } else if (this.getValueFromLocalStorage('convinceable') === 'false') {\r\n                this.setConvinceable(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('pushable') !== null) {\r\n            if (this.getValueFromLocalStorage('pushable') === 'true') {\r\n                this.setPushable(true);\r\n            } else if (this.getValueFromLocalStorage('pushable') === 'false') {\r\n                this.setPushable(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('canpushitems') !== null) {\r\n            if (this.getValueFromLocalStorage('canpushitems') === 'true') {\r\n                this.setCanpushitems(true);\r\n            } else if (this.getValueFromLocalStorage('canpushitems') === 'false') {\r\n                this.setCanpushitems(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('canpushcreatures') !== null) {\r\n            if (this.getValueFromLocalStorage('canpushcreatures') === 'true') {\r\n                this.setCanpushcreatures(true);\r\n            } else if (this.getValueFromLocalStorage('canpushcreatures') === 'false') {\r\n                this.setCanpushcreatures(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('targetdistance') !== null) {\r\n            this.setTargetdistance(this.getValueFromLocalStorage('targetdistance'));\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('staticattack') !== null) {\r\n            this.setStaticattack(this.getValueFromLocalStorage('staticattack'));\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('hidehealth') !== null) {\r\n            if (this.getValueFromLocalStorage('hidehealth') === 'true') {\r\n                this.setHidehealth(true);\r\n            } else if (this.getValueFromLocalStorage('hidehealth') === 'false') {\r\n                this.setHidehealth(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('lightcolor') !== null) {\r\n            this.setLightcolor(this.getValueFromLocalStorage('lightcolor'));\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('lightlevel') !== null) {\r\n            this.setLightlevel(this.getValueFromLocalStorage('lightlevel'));\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('runonhealth') !== null) {\r\n            this.setRunonhealth(this.getValueFromLocalStorage('runonhealth'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default FlagsData;\r\n","class ScriptData {\r\n    constructor() {\r\n        this.checked = false;\r\n        this.script = \"\";\r\n\r\n        this.dataIndex = \"SCRIPT_\";\r\n    }\r\n\r\n    setChecked = (value) => {\r\n        this.checked = value;\r\n        this.setValueToLocalStorage('checked', value);\r\n    }\r\n\r\n    getChecked = () => {\r\n        return this.checked;\r\n    }\r\n\r\n    setScript = (value) => {\r\n        this.script = value;\r\n        this.setValueToLocalStorage('script', value);\r\n    }\r\n\r\n    getScript = () => {\r\n        return this.script;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t') => {\r\n        var fileXMLString = '';\r\n\r\n        if (this.getChecked()) {\r\n            fileXMLString += '\\n' + indentation + '<script>';\r\n            fileXMLString += '\\n' + indentation + indentation + '<event name=\"' + this.getScript() + '\"/>';\r\n            fileXMLString += '\\n' + indentation + '</script>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setChecked(false);\r\n        this.setScript(\"\");\r\n    }\r\n\r\n    loadXMLVariableEvent = (variableName, variableValue) => {\r\n        if (variableName === 'name') {\r\n            this.setChecked(true);\r\n            this.setScript(variableValue);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('checked') !== null) {\r\n            if (this.getValueFromLocalStorage('checked') === 'true') {\r\n                this.setChecked(true);\r\n            } else if (this.getValueFromLocalStorage('checked') === 'false') {\r\n                this.setChecked(false);\r\n            }\r\n        }\r\n\r\n        if (this.getValueFromLocalStorage('script') !== null) {\r\n            this.setScript(this.getValueFromLocalStorage('script'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScriptData;\r\n","class AttacksData {\r\n    constructor() {\r\n        this.allAttacks = [];\r\n\r\n        this.type = \"melee\";\r\n        this.elementalType = \"physical\";\r\n        this.conditionsType = \"physicalcondition\";\r\n        this.fieldsType = \"firefield\";\r\n        this.runesType = \"sudden death\";\r\n        this.spellsType = \"great energy beam\";\r\n        this.otherType = \"\";\r\n        this.min = -5;\r\n        this.max = -10;\r\n        this.skillCheckbox = false;\r\n        this.skill = 1;\r\n        this.attack = 1;\r\n        this.interval = 1000;\r\n        this.chance = 1;\r\n        this.lengthCheckbox = false;\r\n        this.length = 0;\r\n        this.spreadCheckbox = false;\r\n        this.spread = 1;\r\n        this.radiusCheckbox = false;\r\n        this.radius = 1;\r\n        this.poisonCheckbox = false;\r\n        this.poison = 1;\r\n        this.target = false;\r\n        this.range = 1;\r\n        this.areaeffectCheckbox = false;\r\n        this.areaeffect = \"redspark\";\r\n        this.shooteffectCheckbox = false;\r\n        this.shooteffect = \"spear\";\r\n\r\n        this.dataIndex = \"ATTACKS_\";\r\n\r\n        this.attackTypeArray = ['melee', 'elemental', 'conditions', 'fields', 'runes', 'spells', 'other'];\r\n        this.elementalTypeArray = ['physical', 'energy', 'earth', 'fire', 'lifedrain', 'manadrain', 'healing', 'drown', 'ice', 'holy', 'death'];\r\n        this.conditionsTypeArray = ['physicalcondition', 'firecondition', 'energycondition', 'earthcondition', 'icecondition', 'deathcondition', 'holycondition', 'drowncondition'];\r\n        this.fieldsTypeArray = ['firefield', 'poisonfield', 'energyfield'];\r\n        this.runesTypeArray = ['sudden death'];\r\n        this.spellsTypeArray = ['great energy beam'];\r\n    }\r\n\r\n    setType = (value) => {\r\n        this.type = value;\r\n        this.setValueToLocalStorage('type', value);\r\n    }\r\n\r\n    setIndexType = (index, value) => {\r\n        this.allAttacks[index].type = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getType = () => {\r\n        return this.type;\r\n    }\r\n\r\n    setElementalType = (value) => {\r\n        this.elementalType = value;\r\n        this.setValueToLocalStorage('elementalType', value);\r\n    }\r\n\r\n    setIndexElementalType = (index, value) => {\r\n        this.allAttacks[index].elementalType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getElementalType = () => {\r\n        return this.elementalType;\r\n    }\r\n\r\n    setConditionsType = (value) => {\r\n        this.conditionsType = value;\r\n        this.setValueToLocalStorage('conditionsType', value);\r\n    }\r\n\r\n    setIndexConditionsType = (index, value) => {\r\n        this.allAttacks[index].conditionsType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getConditionsType = () => {\r\n        return this.conditionsType;\r\n    }\r\n\r\n    setFieldsType = (value) => {\r\n        this.fieldsType = value;\r\n        this.setValueToLocalStorage('fieldsType', value);\r\n    }\r\n\r\n    setIndexFieldsType = (index, value) => {\r\n        this.allAttacks[index].fieldsType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFieldsType = () => {\r\n        return this.fieldsType;\r\n    }\r\n\r\n    setRunesType = (value) => {\r\n        this.runesType = value;\r\n        this.setValueToLocalStorage('runesType', value);\r\n    }\r\n\r\n    setIndexRunesType = (index, value) => {\r\n        this.allAttacks[index].runesType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRunesType = () => {\r\n        return this.runesType;\r\n    }\r\n\r\n    setSpellsType = (value) => {\r\n        this.spellsType = value;\r\n        this.setValueToLocalStorage('spellsType', value);\r\n    }\r\n\r\n    setIndexSpellsType = (index, value) => {\r\n        this.allAttacks[index].spellsType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSpellsType = () => {\r\n        return this.spellsType;\r\n    }\r\n\r\n    setOtherType = (value) => {\r\n        this.otherType = value;\r\n        this.setValueToLocalStorage('otherType', value);\r\n    }\r\n\r\n    setIndexOtherType = (index, value) => {\r\n        this.allAttacks[index].otherType = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getOtherType = () => {\r\n        return this.otherType;\r\n    }\r\n\r\n    setMin = (value) => {\r\n        this.min = value;\r\n        this.setValueToLocalStorage('min', value);\r\n    }\r\n\r\n    setIndexMin = (index, value) => {\r\n        this.allAttacks[index].min = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getMin = () => {\r\n        return this.min;\r\n    }\r\n\r\n    setMax = (value) => {\r\n        this.max = value;\r\n        this.setValueToLocalStorage('max', value);\r\n    }\r\n\r\n    setIndexMax = (index, value) => {\r\n        this.allAttacks[index].max = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getMax = () => {\r\n        return this.max;\r\n    }\r\n\r\n    setSkillCheckbox = (value) => {\r\n        this.skillCheckbox = value;\r\n        this.setValueToLocalStorage('skillCheckbox', value);\r\n    }\r\n\r\n    setIndexSkillCheckbox = (index, value) => {\r\n        this.allAttacks[index].skillCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSkillCheckbox = () => {\r\n        return this.skillCheckbox;\r\n    }\r\n\r\n    setSkill = (value) => {\r\n        this.skill = value;\r\n        this.setValueToLocalStorage('skill', value);\r\n    }\r\n\r\n    setIndexSkill = (index, value) => {\r\n        this.allAttacks[index].skill = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSkill = () => {\r\n        return this.skill;\r\n    }\r\n\r\n    setAttack = (value) => {\r\n        this.attack = value;\r\n        this.setValueToLocalStorage('attack', value);\r\n    }\r\n\r\n    setIndexAttack = (index, value) => {\r\n        this.allAttacks[index].attack = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getAttack = () => {\r\n        return this.attack;\r\n    }\r\n\r\n    setInterval = (value) => {\r\n        this.interval = value;\r\n        this.setValueToLocalStorage('interval', value);\r\n    }\r\n\r\n    setIndexInterval = (index, value) => {\r\n        this.allAttacks[index].interval = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getInterval = () => {\r\n        return this.interval;\r\n    }\r\n\r\n    setChance = (value) => {\r\n        this.chance = value;\r\n        this.setValueToLocalStorage('chance', value);\r\n    }\r\n\r\n    setIndexChance = (index, value) => {\r\n        this.allAttacks[index].chance = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getChance = () => {\r\n        return this.chance;\r\n    }\r\n\r\n    setLengthCheckbox = (value) => {\r\n        this.lengthCheckbox = value;\r\n        this.setValueToLocalStorage('lengthCheckbox', value);\r\n    }\r\n\r\n    setIndexLengthCheckbox = (index, value) => {\r\n        this.allAttacks[index].lengthCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getLengthCheckbox = () => {\r\n        return this.lengthCheckbox;\r\n    }\r\n\r\n    setLength = (value) => {\r\n        this.length = value;\r\n        this.setValueToLocalStorage('length', value);\r\n    }\r\n\r\n    setIndexLength = (index, value) => {\r\n        this.allAttacks[index].length = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getLength = () => {\r\n        return this.length;\r\n    }\r\n\r\n    setSpreadCheckbox = (value) => {\r\n        this.spreadCheckbox = value;\r\n        this.setValueToLocalStorage('spreadCheckbox', value);\r\n    }\r\n\r\n    setIndexSpreadCheckbox = (index, value) => {\r\n        this.allAttacks[index].spreadCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSpreadCheckbox = () => {\r\n        return this.spreadCheckbox;\r\n    }\r\n\r\n    setSpread = (value) => {\r\n        this.spread = value;\r\n        this.setValueToLocalStorage('spread', value);\r\n    }\r\n\r\n    setIndexSpread = (index, value) => {\r\n        this.allAttacks[index].spread = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSpread = () => {\r\n        return this.spread;\r\n    }\r\n\r\n    setRadiusCheckbox = (value) => {\r\n        this.radiusCheckbox = value;\r\n        this.setValueToLocalStorage('radiusCheckbox', value);\r\n    }\r\n\r\n    setIndexRadiusCheckbox = (index, value) => {\r\n        this.allAttacks[index].radiusCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRadiusCheckbox = () => {\r\n        return this.radiusCheckbox;\r\n    }\r\n\r\n    setRadius = (value) => {\r\n        this.radius = value;\r\n        this.setValueToLocalStorage('radius', value);\r\n    }\r\n\r\n    setIndexRadius = (index, value) => {\r\n        this.allAttacks[index].radius = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRadius = () => {\r\n        return this.radius;\r\n    }\r\n\r\n    setPoisonCheckbox = (value) => {\r\n        this.poisonCheckbox = value;\r\n        this.setValueToLocalStorage('poisonCheckbox', value);\r\n    }\r\n\r\n    setIndexPoisonCheckbox = (index, value) => {\r\n        this.allAttacks[index].poisonCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getPoisonCheckbox = () => {\r\n        return this.poisonCheckbox;\r\n    }\r\n\r\n    setPoison = (value) => {\r\n        this.poison = value;\r\n        this.setValueToLocalStorage('poison', value);\r\n    }\r\n\r\n    setIndexPoison = (index, value) => {\r\n        this.allAttacks[index].poison = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getPoison = () => {\r\n        return this.poison;\r\n    }\r\n\r\n    setTarget = (value) => {\r\n        this.target = value;\r\n        this.setValueToLocalStorage('target', value);\r\n    }\r\n\r\n    setIndexTarget = (index, value) => {\r\n        this.allAttacks[index].target = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getTarget = () => {\r\n        return this.target;\r\n    }\r\n\r\n    setRange = (value) => {\r\n        this.range = value;\r\n        this.setValueToLocalStorage('range', value);\r\n    }\r\n\r\n    setIndexRange = (index, value) => {\r\n        this.allAttacks[index].range = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRange = () => {\r\n        return this.range;\r\n    }\r\n\r\n    setAreaeffectCheckbox = (value) => {\r\n        this.areaeffectCheckbox = value;\r\n        this.setValueToLocalStorage('areaeffectCheckbox', value);\r\n    }\r\n\r\n    setIndexAreaeffectCheckbox = (index, value) => {\r\n        this.allAttacks[index].areaeffectCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getAreaeffectCheckbox = () => {\r\n        return this.areaeffectCheckbox;\r\n    }\r\n\r\n    setAreaeffect = (value) => {\r\n        this.areaeffect = value;\r\n        this.setValueToLocalStorage('areaeffect', value);\r\n    }\r\n\r\n    setIndexAreaeffect = (index, value) => {\r\n        this.allAttacks[index].areaeffect = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getAreaeffect = () => {\r\n        return this.areaeffect;\r\n    }\r\n\r\n    setShooteffectCheckbox = (value) => {\r\n        this.shooteffectCheckbox = value;\r\n        this.setValueToLocalStorage('shooteffectCheckbox', value);\r\n    }\r\n\r\n    setIndexShooteffectCheckbox = (index, value) => {\r\n        this.allAttacks[index].shooteffectCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getShooteffectCheckbox = () => {\r\n        return this.shooteffectCheckbox;\r\n    }\r\n\r\n    setShooteffect = (value) => {\r\n        this.shooteffect = value;\r\n        this.setValueToLocalStorage('shooteffect', value);\r\n    }\r\n\r\n    setIndexShooteffect = (index, value) => {\r\n        this.allAttacks[index].shooteffect = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getShooteffect = () => {\r\n        return this.shooteffect;\r\n    }\r\n\r\n    //Arrays\r\n\r\n    getAttackTypeArray = () => {\r\n        return this.attackTypeArray;\r\n    }\r\n\r\n    getElementalTypeArray = () => {\r\n        return this.elementalTypeArray;\r\n    }\r\n\r\n    getConditionsTypeArray = () => {\r\n        return this.conditionsTypeArray;\r\n    }\r\n\r\n    getFieldsTypeArray = () => {\r\n        return this.fieldsTypeArray;\r\n    }\r\n\r\n    getRunesTypeArray = () => {\r\n        return this.runesTypeArray;\r\n    }\r\n\r\n    getSpellsTypeArray = () => {\r\n        return this.spellsTypeArray;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Actions\r\n\r\n    addToAttacks = () => {\r\n        var allItems = {\r\n            type: this.type,\r\n            elementalType: this.elementalType,\r\n            conditionsType: this.conditionsType,\r\n            fieldsType: this.fieldsType,\r\n            runesType: this.runesType,\r\n            spellsType: this.spellsType,\r\n            otherType: this.otherType,\r\n            min: this.min,\r\n            max: this.max,\r\n            skillCheckbox: this.skillCheckbox,\r\n            skill: this.skill,\r\n            attack: this.attack,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            lengthCheckbox: this.lengthCheckbox,\r\n            length: this.length,\r\n            spreadCheckbox: this.spreadCheckbox,\r\n            spread: this.spread,\r\n            radiusCheckbox: this.radiusCheckbox,\r\n            radius: this.radius,\r\n            poisonCheckbox: this.poisonCheckbox,\r\n            poison: this.poison,\r\n            target: this.target,\r\n            range: this.range,\r\n            areaeffectCheckbox: this.areaeffectCheckbox,\r\n            areaeffect: this.areaeffect,\r\n            shooteffectCheckbox: this.shooteffectCheckbox,\r\n            shooteffect: this.shooteffect\r\n        }\r\n\r\n        this.allAttacks.push(allItems);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    deleteFromAttacks = (index) => {\r\n        this.allAttacks.splice(index, 1);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFromAttacks = (index) => {\r\n        return this.allAttacks[index];\r\n    }\r\n\r\n    showAttacks = (index) => {\r\n        this.type = this.allAttacks[index].type;\r\n        this.elementalType = this.allAttacks[index].elementalType;\r\n        this.conditionsType = this.allAttacks[index].conditionsType;\r\n        this.fieldsType = this.allAttacks[index].fieldsType;\r\n        this.runesType = this.allAttacks[index].runesType;\r\n        this.spellsType = this.allAttacks[index].spellsType;\r\n        this.otherType = this.allAttacks[index].otherType;\r\n        this.min = this.allAttacks[index].min;\r\n        this.max = this.allAttacks[index].max;\r\n        this.skillCheckbox = this.allAttacks[index].skillCheckbox;\r\n        this.skill = this.allAttacks[index].skill;\r\n        this.attack = this.allAttacks[index].attack;\r\n        this.interval = this.allAttacks[index].interval;\r\n        this.chance = this.allAttacks[index].chance;\r\n        this.lengthCheckbox = this.allAttacks[index].lengthCheckbox;\r\n        this.length = this.allAttacks[index].length;\r\n        this.spreadCheckbox = this.allAttacks[index].spreadCheckbox;\r\n        this.spread = this.allAttacks[index].spread;\r\n        this.radiusCheckbox = this.allAttacks[index].radiusCheckbox;\r\n        this.radius = this.allAttacks[index].radius;\r\n        this.poisonCheckbox = this.allAttacks[index].poisonCheckbox;\r\n        this.poison = this.allAttacks[index].poison;\r\n        this.target = this.allAttacks[index].target;\r\n        this.range = this.allAttacks[index].range;\r\n        this.areaeffectCheckbox = this.allAttacks[index].areaeffectCheckbox;\r\n        this.areaeffect = this.allAttacks[index].areaeffect;\r\n        this.shooteffectCheckbox = this.allAttacks[index].shooteffectCheckbox;\r\n        this.shooteffect = this.allAttacks[index].shooteffect;\r\n    }\r\n\r\n    updateAttacks = (index) => {\r\n        this.allAttacks[index] = {\r\n            type: this.type,\r\n            elementalType: this.elementalType,\r\n            conditionsType: this.conditionsType,\r\n            fieldsType: this.fieldsType,\r\n            runesType: this.runesType,\r\n            spellsType: this.spellsType,\r\n            otherType: this.otherType,\r\n            min: this.min,\r\n            max: this.max,\r\n            skillCheckbox: this.skillCheckbox,\r\n            skill: this.skill,\r\n            attack: this.attack,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            lengthCheckbox: this.lengthCheckbox,\r\n            length: this.length,\r\n            spreadCheckbox: this.spreadCheckbox,\r\n            spread: this.spread,\r\n            radiusCheckbox: this.radiusCheckbox,\r\n            radius: this.radius,\r\n            poisonCheckbox: this.poisonCheckbox,\r\n            poison: this.poison,\r\n            target: this.target,\r\n            range: this.range,\r\n            areaeffectCheckbox: this.areaeffectCheckbox,\r\n            areaeffect: this.areaeffect,\r\n            shooteffectCheckbox: this.shooteffectCheckbox,\r\n            shooteffect: this.shooteffect\r\n        }\r\n    }\r\n\r\n    getAttackFromData = (index) => {\r\n        var attackTable = [];\r\n\r\n        //name\r\n        if (this.allAttacks[index].type === 'melee') {\r\n            attackTable.name = 'melee';\r\n        } else if (this.allAttacks[index].type === 'elemental') {\r\n            attackTable.name = this.allAttacks[index].elementalType;\r\n        } else if (this.allAttacks[index].type === 'conditions') {\r\n            attackTable.name = this.allAttacks[index].conditionsType;\r\n        } else if (this.allAttacks[index].type === 'fields') {\r\n            attackTable.name = this.allAttacks[index].fieldsType;\r\n        } else if (this.allAttacks[index].type === 'runes') {\r\n            attackTable.name = this.allAttacks[index].runesType;\r\n        } else if (this.allAttacks[index].type === 'spells') {\r\n            attackTable.name = this.allAttacks[index].spellsType;\r\n        } else if (this.allAttacks[index].type === 'other') {\r\n            attackTable.name = this.allAttacks[index].otherType;\r\n        }\r\n\r\n        //min/max/skill/attack\r\n        if (!this.allAttacks[index].skillCheckbox) {\r\n            attackTable.min = Number(this.allAttacks[index].min);\r\n            attackTable.max = Number(this.allAttacks[index].max);\r\n        } else {\r\n            attackTable.skill = Number(this.allAttacks[index].skill);\r\n            attackTable.attack = Number(this.allAttacks[index].attack);\r\n        }\r\n\r\n        //interval/chance\r\n        attackTable.interval = Number(this.allAttacks[index].interval);\r\n        attackTable.chance = Number(this.allAttacks[index].chance);\r\n        \r\n        //length/spread/radius/poison\r\n        if (this.allAttacks[index].lengthCheckbox) {\r\n            attackTable.length = Number(this.allAttacks[index].length);\r\n        }\r\n        if (this.allAttacks[index].spreadCheckbox) {\r\n            attackTable.spread = Number(this.allAttacks[index].spread);\r\n        }\r\n        if (this.allAttacks[index].radiusCheckbox) {\r\n            attackTable.radius = Number(this.allAttacks[index].radius);\r\n        }\r\n        if (this.allAttacks[index].poisonCheckbox) {\r\n            attackTable.poison = Number(this.allAttacks[index].poison);\r\n        }\r\n        \r\n        //target/range\r\n        if (this.allAttacks[index].target) {\r\n            attackTable.target = 1;\r\n            attackTable.range = Number(this.allAttacks[index].range);\r\n        }\r\n\r\n        //area/shoot effect\r\n        if (this.allAttacks[index].areaeffectCheckbox) {\r\n            attackTable.areaEffect = this.allAttacks[index].areaeffect;\r\n        }\r\n        if (this.allAttacks[index].shooteffectCheckbox) {\r\n            attackTable.shootEffect = this.allAttacks[index].shooteffect;\r\n        }\r\n\r\n        return attackTable;\r\n    }\r\n\r\n    generateXMLattack = (index, indentation = '\\t', firstIndentation = '') => {\r\n        var attackData = this.getAttackFromData(index);\r\n\r\n        var attack = '';\r\n\r\n        attack = firstIndentation + '<attack name=\"' + attackData.name + '\" interval=\"' + attackData.interval + '\"';\r\n        if (attackData.chance != null) {\r\n            attack = attack + ' chance=\"' + attackData.chance + '\"';\r\n        }\r\n        if (attackData.length != null) {\r\n            attack = attack + ' length=\"' + attackData.length + '\"';\r\n        }\r\n        if (attackData.spread != null) {\r\n            attack = attack + ' spread=\"' + attackData.spread + '\"';\r\n        }\r\n        if (attackData.radius != null) {\r\n            attack = attack + ' radius=\"' + attackData.radius + '\"';\r\n        }\r\n        if (attackData.range != null) {\r\n            attack = attack + ' range=\"' + attackData.range + '\"';\r\n        }\r\n        if (attackData.target != null) {\r\n            attack = attack + ' target=\"' + attackData.target + '\"';\r\n        }\r\n        if (attackData.min != null && attackData.max != null) {\r\n            attack = attack + ' min=\"' + attackData.min + '\" max=\"' + attackData.max + '\"';\r\n        } else if (attackData.skill != null && attackData.attack != null) {\r\n            attack = attack + ' skill=\"' + attackData.skill + '\" attack=\"' + attackData.attack + '\"';\r\n        }\r\n        if (attackData.poison != null) {\r\n            attack = attack + ' poison=\"' + attackData.poison + '\"';\r\n        }\r\n        if (!(attackData.areaEffect != null || attackData.shootEffect != null)) {\r\n            attack = attack + '/>';\r\n        } else {\r\n            attack = attack + '>';\r\n\r\n            if (attackData.areaEffect != null) {\r\n                attack = attack + '\\n' + firstIndentation + indentation + '<attribute key=\"areaEffect\" value=\"' + attackData.areaEffect + '\"/>';\r\n            }\r\n\r\n            if (attackData.shootEffect != null) {\r\n                attack = attack + '\\n' + firstIndentation + indentation + '<attribute key=\"shootEffect\" value=\"' + attackData.shootEffect + '\"/>';\r\n            }\r\n\r\n            attack = attack + '\\n' + firstIndentation + '</attack>';\r\n        }\r\n\r\n        return attack;\r\n    }\r\n\r\n    getAllXMLattacks = (indentation = '\\t', firstIndentation = '') => {\r\n        var returnAttacks = [];\r\n\r\n        this.allAttacks.forEach((variable, index) => {\r\n            returnAttacks.push(this.generateXMLattack(index, indentation, firstIndentation));\r\n        });\r\n\r\n        return returnAttacks;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t', firstIndentation = '') => {\r\n        var fileXMLString = '';\r\n        \r\n        var allXMLattacks = this.getAllXMLattacks(indentation, firstIndentation);\r\n\r\n        if (allXMLattacks.length > 0) {\r\n            fileXMLString += '\\n' + indentation + '<attacks>';\r\n\r\n            allXMLattacks.map((variable, index) => {\r\n                fileXMLString += '\\n' + variable;\r\n            });\r\n\r\n            fileXMLString += '\\n' + indentation + '</attacks>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.allAttacks = [];\r\n        this.setTableToLocalStorage();\r\n\r\n        this.setType(\"melee\");\r\n        this.setElementalType(\"physical\");\r\n        this.setConditionsType(\"physicalcondition\");\r\n        this.setFieldsType(\"firefield\");\r\n        this.setRunesType(\"sudden death\");\r\n        this.setSpellsType(\"great energy beam\");\r\n        this.setOtherType(\"\");\r\n        this.setMin(-5);\r\n        this.setMax(-10);\r\n        this.setSkillCheckbox(false);\r\n        this.setSkill(1);\r\n        this.setAttack(1);\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setLengthCheckbox(false);\r\n        this.setLength(0);\r\n        this.setSpreadCheckbox(false);\r\n        this.setSpread(1);\r\n        this.setRadiusCheckbox(false);\r\n        this.setRadius(1);\r\n        this.setPoisonCheckbox(false);\r\n        this.setPoison(1);\r\n        this.setTarget(false);\r\n        this.setRange(1);\r\n        this.setAreaeffectCheckbox(false);\r\n        this.setAreaeffect(\"redspark\");\r\n        this.setShooteffectCheckbox(false);\r\n        this.setShooteffect(\"spear\");\r\n    }\r\n\r\n    setDefaultTableValue = () => {\r\n        this.setType(\"melee\");\r\n        this.setElementalType(\"physical\");\r\n        this.setConditionsType(\"physicalcondition\");\r\n        this.setFieldsType(\"firefield\");\r\n        this.setRunesType(\"sudden death\");\r\n        this.setSpellsType(\"great energy beam\");\r\n        this.setOtherType(\"\");\r\n        this.setMin(-5);\r\n        this.setMax(-10);\r\n        this.setSkillCheckbox(false);\r\n        this.setSkill(1);\r\n        this.setAttack(1);\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setLengthCheckbox(false);\r\n        this.setLength(0);\r\n        this.setSpreadCheckbox(false);\r\n        this.setSpread(1);\r\n        this.setRadiusCheckbox(false);\r\n        this.setRadius(1);\r\n        this.setPoisonCheckbox(false);\r\n        this.setPoison(1);\r\n        this.setTarget(false);\r\n        this.setRange(1);\r\n        this.setAreaeffectCheckbox(false);\r\n        this.setAreaeffect(\"redspark\");\r\n        this.setShooteffectCheckbox(false);\r\n        this.setShooteffect(\"spear\");\r\n    }\r\n\r\n    compareValueToAttactType = (value) => {\r\n        if (value === 'melee') {\r\n            return 'melee';\r\n        }\r\n\r\n        this.getElementalTypeArray().forEach(function (item, i) {\r\n            if (item === value) {\r\n                return 'elemental';\r\n            }\r\n        });\r\n\r\n        this.getConditionsTypeArray().forEach(function (item, i) {\r\n            if (item === value) {\r\n                return 'conditions';\r\n            }\r\n        });\r\n    \r\n        this.getFieldsTypeArray().forEach(function (item, i) {\r\n            if (item === value) {\r\n                return 'fields';\r\n            }\r\n        });\r\n    \r\n        this.getRunesTypeArray().forEach(function (item, i) {\r\n            if (item === value) {\r\n                return 'runes';\r\n            }\r\n        });\r\n    \r\n        this.getSpellsTypeArray().forEach(function (item, i) {\r\n            if (item === value) {\r\n                return 'spells';\r\n            }\r\n        });\r\n\r\n        return 'other';\r\n    }\r\n\r\n    loadXMLVariableAttack = (variableName, variableValue) => {\r\n        if (variableName === 'name') {\r\n            let attackType = this.compareValueToAttactType(variableValue);\r\n            this.setType(attackType);\r\n\r\n            if (attackType === 'elemental') {\r\n                this.setElementalType(variableValue);\r\n            } else if (attackType === 'conditions') {\r\n                this.setConditionsType(variableValue);\r\n            } else if (attackType === 'fields') {\r\n                this.setFieldsType(variableValue);\r\n            } else if (attackType === 'runes') {\r\n                this.setRunesType(variableValue);\r\n            } else if (attackType === 'spells') {\r\n                this.setSpellsType(variableValue);\r\n            } else if (attackType === 'other') {\r\n                this.setOtherType(variableValue);\r\n            }\r\n        } else if (variableName === 'min') {\r\n            if (this.getSkillCheckbox()) {\r\n                //TODO Check parse errors\r\n            }\r\n            this.setMin(variableValue);\r\n            this.setSkillCheckbox(false);\r\n        } else if (variableName === 'max') {\r\n            if (this.getSkillCheckbox()) {\r\n                //TODO Check parse errors\r\n            }\r\n            this.setMax(variableValue);\r\n            this.setSkillCheckbox(false);\r\n        } else if (variableName === 'skill') {\r\n            this.setSkill(variableValue);\r\n            this.setSkillCheckbox(true);\r\n        } else if (variableName === 'attack') {\r\n            this.setAttack(variableValue);\r\n            this.setSkillCheckbox(true);\r\n        } else if (variableName === 'interval') {\r\n            this.setInterval(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setChance(variableValue);\r\n        } else if (variableName === 'length') {\r\n            if (this.getRadiusCheckbox()) {\r\n                //TODO Check parse errors\r\n            }\r\n            this.setLength(variableValue);\r\n            this.setLengthCheckbox(true);\r\n        } else if (variableName === 'spread') {\r\n            if (this.getRadiusCheckbox()) {\r\n                //TODO Check parse errors\r\n            }\r\n            this.setSpread(variableValue);\r\n            this.setSpreadCheckbox(true);\r\n        } else if (variableName === 'radius') {\r\n            if (this.getLengthCheckbox() || this.getRadiusCheckbox()) {\r\n                //TODO Check parse errors\r\n            }\r\n            this.setRadius(variableValue);\r\n            this.setRadiusCheckbox(true);\r\n        } else if (variableName === 'poison') {\r\n            this.setPoison(variableValue);\r\n            this.setPoisonCheckbox(true);\r\n        } else if (variableName === 'target') {\r\n            this.setTarget(true);\r\n        } else if (variableName === 'range') {\r\n            this.setRange(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableAttribute = (variableName, variableValue) => {\r\n        if (variableName === 'key') {\r\n            if (variableValue === 'areaEffect') {\r\n                this.setAreaeffectCheckbox(true);\r\n            } else if (variableValue === 'shootEffect') {\r\n                this.setShooteffectCheckbox(true);\r\n            }\r\n        } else if (variableName === 'value') {\r\n            if (this.getAreaeffectCheckbox()) {\r\n                this.setAreaeffect(variableValue);\r\n            } else if (this.getShooteffectCheckbox()) {\r\n                this.setShooteffect(variableValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    setTableToLocalStorage = () => {\r\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allAttacks));\r\n    }\r\n\r\n    getTableFromLocalStorage = () => {\r\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\r\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        this.allAttacks = this.getTableFromLocalStorage();\r\n\r\n        if (this.getValueFromLocalStorage('type') !== null) {\r\n            this.setType(this.getValueFromLocalStorage('type'));\r\n        }\r\n        if (this.getValueFromLocalStorage('elementalType') !== null) {\r\n            this.setElementalType(this.getValueFromLocalStorage('elementalType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('conditionsType') !== null) {\r\n            this.setConditionsType(this.getValueFromLocalStorage('conditionsType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('fieldsType') !== null) {\r\n            this.setFieldsType(this.getValueFromLocalStorage('fieldsType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('runesType') !== null) {\r\n            this.setRunesType(this.getValueFromLocalStorage('runesType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('spellsType') !== null) {\r\n            this.setSpellsType(this.getValueFromLocalStorage('spellsType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('otherType') !== null) {\r\n            this.setOtherType(this.getValueFromLocalStorage('otherType'));\r\n        }\r\n        if (this.getValueFromLocalStorage('min') !== null) {\r\n            this.setMin(this.getValueFromLocalStorage('min'));\r\n        }\r\n        if (this.getValueFromLocalStorage('max') !== null) {\r\n            this.setMax(this.getValueFromLocalStorage('max'));\r\n        }\r\n        if (this.getValueFromLocalStorage('skillCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('skillCheckbox') === 'true') {\r\n                this.setSkillCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('skillCheckbox') === 'false') {\r\n                this.setSkillCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('skill') !== null) {\r\n            this.setSkill(this.getValueFromLocalStorage('skill'));\r\n        }\r\n        if (this.getValueFromLocalStorage('attack') !== null) {\r\n            this.setAttack(this.getValueFromLocalStorage('attack'));\r\n        }\r\n        if (this.getValueFromLocalStorage('interval') !== null) {\r\n            this.setInterval(this.getValueFromLocalStorage('interval'));\r\n        }\r\n        if (this.getValueFromLocalStorage('chance') !== null) {\r\n            this.setChance(this.getValueFromLocalStorage('chance'));\r\n        }\r\n        if (this.getValueFromLocalStorage('lengthCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('lengthCheckbox') === 'true') {\r\n                this.setLengthCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('lengthCheckbox') === 'false') {\r\n                this.setLengthCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('length') !== null) {\r\n            this.setLength(this.getValueFromLocalStorage('length'));\r\n        }\r\n        if (this.getValueFromLocalStorage('spreadCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('spreadCheckbox') === 'true') {\r\n                this.setSpreadCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('spreadCheckbox') === 'false') {\r\n                this.setSpreadCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('spread') !== null) {\r\n            this.setSpread(this.getValueFromLocalStorage('spread'));\r\n        }\r\n        if (this.getValueFromLocalStorage('radiusCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('radiusCheckbox') === 'true') {\r\n                this.setRadiusCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('radiusCheckbox') === 'false') {\r\n                this.setRadiusCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('radius') !== null) {\r\n            this.setRadius(this.getValueFromLocalStorage('radius'));\r\n        }\r\n        if (this.getValueFromLocalStorage('poisonCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('poisonCheckbox') === 'true') {\r\n                this.setPoisonCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('poisonCheckbox') === 'false') {\r\n                this.setPoisonCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('poison') !== null) {\r\n            this.setPoison(this.getValueFromLocalStorage('poison'));\r\n        }\r\n        if (this.getValueFromLocalStorage('target') !== null) {\r\n            if (this.getValueFromLocalStorage('target') === 'true') {\r\n                this.setTarget(true);\r\n            } else if (this.getValueFromLocalStorage('target') === 'false') {\r\n                this.setTarget(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('range') !== null) {\r\n            this.setRange(this.getValueFromLocalStorage('range'));\r\n        }\r\n        if (this.getValueFromLocalStorage('areaeffectCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('areaeffectCheckbox') === 'true') {\r\n                this.setAreaeffectCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('areaeffectCheckbox') === 'false') {\r\n                this.setAreaeffectCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('areaeffect') !== null) {\r\n            this.setAreaeffect(this.getValueFromLocalStorage('areaeffect'));\r\n        }\r\n        if (this.getValueFromLocalStorage('shooteffectCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('shooteffectCheckbox') === 'true') {\r\n                this.setShooteffectCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('shooteffectCheckbox') === 'false') {\r\n                this.setShooteffectCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('shooteffect') !== null) {\r\n            this.setShooteffect(this.getValueFromLocalStorage('shooteffect'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AttacksData;\r\n","class DefensesData {\r\n    constructor() {\r\n        this.armor = 1;\r\n        this.defense = 1;\r\n\r\n        this.allDefenses = [];\r\n\r\n        this.defenseName = \"healing\";\r\n        this.interval = 1000;\r\n        this.chance = 1;\r\n        this.min = 1;\r\n        this.max = 1;\r\n        this.radiusCheckbox = false;\r\n        this.radius = 1;\r\n        this.areaeffect = \"redspark\";\r\n        this.duration = 4000;\r\n        this.speedChange = 300;\r\n\r\n        this.dataIndex = \"DEFENSES_\";\r\n    }\r\n\r\n    setArmor = (value) => {\r\n        this.armor = value;\r\n        this.setValueToLocalStorage('armor', value);\r\n    }\r\n\r\n    getArmor = () => {\r\n        return this.armor;\r\n    }\r\n\r\n    setDefense = (value) => {\r\n        this.defense = value;\r\n        this.setValueToLocalStorage('defense', value);\r\n    }\r\n\r\n    getDefense = () => {\r\n        return this.defense;\r\n    }\r\n\r\n    setDefenseName = (value) => {\r\n        this.defenseName = value;\r\n        this.setValueToLocalStorage('defenseName', value);\r\n    }\r\n\r\n    setIndexDefenseName = (index, value) => {\r\n        this.allDefenses[index].defenseName = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getDefenseName = () => {\r\n        return this.defenseName;\r\n    }\r\n\r\n    setInterval = (value) => {\r\n        this.interval = value;\r\n        this.setValueToLocalStorage('interval', value);\r\n    }\r\n\r\n    setIndexInterval = (index, value) => {\r\n        this.allDefenses[index].interval = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getInterval = () => {\r\n        return this.interval;\r\n    }\r\n\r\n    setChance = (value) => {\r\n        this.chance = value;\r\n        this.setValueToLocalStorage('chance', value);\r\n    }\r\n\r\n    setIndexChance = (index, value) => {\r\n        this.allDefenses[index].chance = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getChance = () => {\r\n        return this.chance;\r\n    }\r\n\r\n    setMin = (value) => {\r\n        this.min = value;\r\n        this.setValueToLocalStorage('min', value);\r\n    }\r\n\r\n    setIndexMin = (index, value) => {\r\n        this.allDefenses[index].min = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getMin = () => {\r\n        return this.min;\r\n    }\r\n\r\n    setMax = (value) => {\r\n        this.max = value;\r\n        this.setValueToLocalStorage('max', value);\r\n    }\r\n\r\n    setIndexMax = (index, value) => {\r\n        this.allDefenses[index].max = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getMax = () => {\r\n        return this.max;\r\n    }\r\n\r\n    setRadiusCheckbox = (value) => {\r\n        this.radiusCheckbox = value;\r\n        this.setValueToLocalStorage('radiusCheckbox', value);\r\n    }\r\n\r\n    setIndexRadiusCheckbox = (index, value) => {\r\n        this.allDefenses[index].radiusCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRadiusCheckbox = () => {\r\n        return this.radiusCheckbox;\r\n    }\r\n\r\n    setRadius = (value) => {\r\n        this.radius = value;\r\n        this.setValueToLocalStorage('radius', value);\r\n    }\r\n\r\n    setIndexRadius = (index, value) => {\r\n        this.allDefenses[index].radius = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getRadius = () => {\r\n        return this.radius;\r\n    }\r\n\r\n    setAreaeffect = (value) => {\r\n        this.areaeffect = value;\r\n        this.setValueToLocalStorage('areaeffect', value);\r\n    }\r\n\r\n    setIndexAreaeffect = (index, value) => {\r\n        this.allDefenses[index].areaeffect = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getAreaeffect = () => {\r\n        return this.areaeffect;\r\n    }\r\n\r\n    setDuration = (value) => {\r\n        this.duration = value;\r\n        this.setValueToLocalStorage('duration', value);\r\n    }\r\n\r\n    setIndexDuration = (index, value) => {\r\n        this.allDefenses[index].duration = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getDuration = () => {\r\n        return this.duration;\r\n    }\r\n\r\n    setSpeedChange = (value) => {\r\n        this.speedChange = value;\r\n        this.setValueToLocalStorage('speedChange', value);\r\n    }\r\n\r\n    setIndexSpeedChange = (index, value) => {\r\n        this.allDefenses[index].speedChange = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSpeedChange = () => {\r\n        return this.speedChange;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Actions\r\n    \r\n    addToDefenses = () => {\r\n        var allItems = {\r\n            defenseName: this.defenseName,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            min: this.min,\r\n            max: this.max,\r\n            radiusCheckbox: this.radiusCheckbox,\r\n            radius: this.radius,\r\n            areaeffect: this.areaeffect,\r\n            duration: this.duration,\r\n            speedChange: this.speedChange\r\n        }\r\n\r\n        this.allDefenses.push(allItems);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    deleteFromDefenses = (index) => {\r\n        this.allDefenses.splice(index, 1);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFromDefenses = (index) => {\r\n        return this.allDefenses[index];\r\n    }\r\n\r\n    showDefenses = (index) => {\r\n        this.defenseName = this.allDefenses[index].defenseName;\r\n        this.interval = this.allDefenses[index].interval;\r\n        this.chance = this.allDefenses[index].chance;\r\n        this.min = this.allDefenses[index].min;\r\n        this.max = this.allDefenses[index].max;\r\n        this.radiusCheckbox = this.allDefenses[index].radiusCheckbox;\r\n        this.radius = this.allDefenses[index].radius;\r\n        this.areaeffect = this.allDefenses[index].areaeffect;\r\n        this.duration = this.allDefenses[index].duration;\r\n        this.speedChange = this.allDefenses[index].speedChange;\r\n    }\r\n\r\n    updateDefenses = (index) => {\r\n        this.allDefenses[index] = {\r\n            defenseName: this.defenseName,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            min: this.min,\r\n            max: this.max,\r\n            radiusCheckbox: this.radiusCheckbox,\r\n            radius: this.radius,\r\n            areaeffect: this.areaeffect,\r\n            duration: this.duration,\r\n            speedChange: this.speedChange\r\n        }\r\n    }\r\n\r\n    getDefenseFromData = (index) => {\r\n        var defenseTable = [];\r\n\r\n        //name\r\n        if (this.allDefenses[index].defenseName === 'healing') {\r\n            defenseTable.defenseName = 'healing';\r\n            defenseTable.interval = this.allDefenses[index].interval;\r\n            defenseTable.chance = this.allDefenses[index].chance;\r\n            defenseTable.min = this.allDefenses[index].min;\r\n            defenseTable.max = this.allDefenses[index].max;\r\n            if (this.allDefenses[index].radiusCheckbox) {\r\n                defenseTable.radius = this.allDefenses[index].radius;\r\n            }\r\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\r\n        } else if (this.allDefenses[index].defenseName === 'speed') {\r\n            defenseTable.defenseName = 'speed';\r\n            defenseTable.interval = this.allDefenses[index].interval;\r\n            defenseTable.chance = this.allDefenses[index].chance;\r\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\r\n            defenseTable.duration = this.allDefenses[index].duration;\r\n            defenseTable.speedChange = this.allDefenses[index].speedChange;\r\n        } else if (this.allDefenses[index].defenseName === 'invisible') {\r\n            defenseTable.defenseName = 'invisible';\r\n            defenseTable.interval = this.allDefenses[index].interval;\r\n            defenseTable.chance = this.allDefenses[index].chance;\r\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\r\n            defenseTable.duration = this.allDefenses[index].duration;\r\n        }\r\n\r\n        return defenseTable;\r\n    }\r\n\r\n    generateXMLdefense = (index, indentation = '\\t', firstIndentation = '') => {\r\n        var defenseData = this.getDefenseFromData(index);\r\n\r\n        var defense = '';\r\n\r\n        defense = defense + firstIndentation + '<defense name=\"' + defenseData.defenseName + '\" interval=\"' + defenseData.interval + '\" chance=\"' + defenseData.chance + '\"';\r\n        if (defenseData.defenseName === 'healing') {\r\n            defense = defense + ' min=\"' + defenseData.min + '\" max=\"' + defenseData.max + '\"';\r\n            if (defenseData.radius != null) {\r\n                defense = defense + ' radius=\"' + defenseData.radius + '\"';\r\n            }\r\n        } else if (defenseData.defenseName === 'speed') {\r\n            defense = defense + ' duration=\"' + defenseData.duration + '\" speedchange=\"' + defenseData.speedChange + '\"';\r\n        } else if (defenseData.defenseName === 'invisible') {\r\n            defense = defense + ' duration=\"' + defenseData.duration + '\"';\r\n        }\r\n        defense = defense + '>';\r\n\r\n        defense = defense + '\\n' + firstIndentation + indentation + '<attribute key=\"areaEffect\" value=\"' + defenseData.areaeffect + '\"/>';\r\n\r\n        defense = defense + '\\n' + firstIndentation + '</defense>';\r\n\r\n        return defense;\r\n    }\r\n\r\n    getAllXMLdefenses = (indentation = '\\t', firstIndentation = '') => {\r\n        var returnDefenses = [];\r\n\r\n        this.allDefenses.forEach((variable, index) => {\r\n            returnDefenses.push(this.generateXMLdefense(index, indentation, firstIndentation));\r\n        });\r\n\r\n        return returnDefenses;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t', firstIndentation = '') => {\r\n        var fileXMLString = '';\r\n        \r\n        var allXMLdefenses = this.getAllXMLdefenses(indentation, firstIndentation);\r\n\r\n        if (allXMLdefenses.length > 0) {\r\n            fileXMLString += '\\n' + indentation + '<defenses armor=\"' + this.getArmor() + '\" defense=\"' + this.getDefense() + '\">';\r\n            \r\n            allXMLdefenses.map((variable, index) => {\r\n                fileXMLString += '\\n' + variable;\r\n            });\r\n\r\n            fileXMLString += '\\n' + indentation + '</defenses>';\r\n        } else {\r\n            fileXMLString += '\\n' + indentation + '<defenses armor=\"' + this.getArmor() + '\" defense=\"' + this.getDefense() + '\"/>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setArmor(1);\r\n        this.setDefense(1);\r\n\r\n        this.allDefenses = [];\r\n        this.setTableToLocalStorage();\r\n\r\n        this.setDefenseName(\"healing\");\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setMin(1);\r\n        this.setMax(1);\r\n        this.setRadiusCheckbox(false);\r\n        this.setRadius(1);\r\n        this.setAreaeffect(\"redspark\");\r\n        this.setDuration(4000);\r\n        this.setSpeedChange(300);\r\n    }\r\n\r\n    setDefaultTableValue = () => {\r\n        this.setDefenseName(\"healing\");\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setMin(1);\r\n        this.setMax(1);\r\n        this.setRadiusCheckbox(false);\r\n        this.setRadius(1);\r\n        this.setAreaeffect(\"redspark\");\r\n        this.setDuration(4000);\r\n        this.setSpeedChange(300);\r\n    }\r\n\r\n    loadXMLVariableDefenses = (variableName, variableValue) => {\r\n        if (variableName === 'armor') {\r\n            this.setArmor(variableValue);\r\n        } else if (variableName === 'defense') {\r\n            this.setDefense(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableDefense = (variableName, variableValue) => {\r\n        if (variableName === 'name') {\r\n            this.setDefenseName(variableValue);\r\n        } else if (variableName === 'interval') {\r\n            this.setInterval(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setChance(variableValue);\r\n        } else if (variableName === 'min') {\r\n            //TODOCheck parse errors\r\n            this.setMin(variableValue);\r\n        } else if (variableName === 'max') {\r\n            //TODO Check parse errors\r\n            this.setMax(variableValue);\r\n        } else if (variableName === 'radius') {\r\n            //TODO Check parse errors\r\n            this.setRadiusCheckbox(true);\r\n            this.setRadius(variableValue);\r\n        } else if (variableName === 'duration') {\r\n            //TODO Check parse errors\r\n            this.setDuration(variableValue);\r\n        } else if (variableName === 'speedchange') {\r\n            //TODO Check parse errors\r\n            this.setSpeedChange(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableAttribute = (variableName, variableValue) => {\r\n        if (variableName === 'key') {\r\n            if (variableValue === 'areaEffect') {\r\n                this.setAreaeffectCheckbox(true);\r\n            }\r\n        } else if (variableName === 'value') {\r\n            if (this.getAreaeffectCheckbox()) {\r\n                this.setAreaeffect(variableValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    setTableToLocalStorage = () => {\r\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allDefenses));\r\n    }\r\n\r\n    getTableFromLocalStorage = () => {\r\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\r\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('armor') !== null) {\r\n            this.setArmor(this.getValueFromLocalStorage('armor'));\r\n        }\r\n        if (this.getValueFromLocalStorage('defense') !== null) {\r\n            this.setDefense(this.getValueFromLocalStorage('defense'));\r\n        }\r\n\r\n        this.allDefenses = this.getTableFromLocalStorage();\r\n\r\n        if (this.getValueFromLocalStorage('defenseName') !== null) {\r\n            this.setDefenseName(this.getValueFromLocalStorage('defenseName'));\r\n        }\r\n        if (this.getValueFromLocalStorage('interval') !== null) {\r\n            this.setInterval(this.getValueFromLocalStorage('interval'));\r\n        }\r\n        if (this.getValueFromLocalStorage('chance') !== null) {\r\n            this.setChance(this.getValueFromLocalStorage('chance'));\r\n        }\r\n        if (this.getValueFromLocalStorage('min') !== null) {\r\n            this.setMin(this.getValueFromLocalStorage('min'));\r\n        }\r\n        if (this.getValueFromLocalStorage('max') !== null) {\r\n            this.setMax(this.getValueFromLocalStorage('max'));\r\n        }\r\n        if (this.getValueFromLocalStorage('radiusCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('radiusCheckbox') === 'true') {\r\n                this.setRadiusCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('radiusCheckbox') === 'false') {\r\n                this.setRadiusCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('radius') !== null) {\r\n            this.setRadius(this.getValueFromLocalStorage('radius'));\r\n        }\r\n        if (this.getValueFromLocalStorage('areaeffect') !== null) {\r\n            this.setAreaeffect(this.getValueFromLocalStorage('areaeffect'));\r\n        }\r\n        if (this.getValueFromLocalStorage('duration') !== null) {\r\n            this.setDuration(this.getValueFromLocalStorage('duration'));\r\n        }\r\n        if (this.getValueFromLocalStorage('speedChange') !== null) {\r\n            this.setSpeedChange(this.getValueFromLocalStorage('speedChange'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default DefensesData;\r\n","class ElementsData {\r\n    constructor() {\r\n        this.holy = 0;\r\n        this.death = 0;\r\n        this.ice = 0;\r\n        this.fire = 0;\r\n        this.earth = 0;\r\n        this.energy = 0;\r\n        this.physical = 0;\r\n        this.lifeDrain = 0;\r\n        this.drown = 0;\r\n\r\n        this.dataIndex = \"ELEMENTS_\";\r\n    }\r\n\r\n    setHoly = (value) => {\r\n        this.holy = value;\r\n        this.setValueToLocalStorage('holy', value);\r\n    }\r\n\r\n    getHoly = () => {\r\n        return this.holy;\r\n    }\r\n\r\n    setDeath = (value) => {\r\n        this.death = value;\r\n        this.setValueToLocalStorage('death', value);\r\n    }\r\n\r\n    getDeath = () => {\r\n        return this.death;\r\n    }\r\n\r\n    setIce = (value) => {\r\n        this.ice = value;\r\n        this.setValueToLocalStorage('ice', value);\r\n    }\r\n\r\n    getIce = () => {\r\n        return this.ice;\r\n    }\r\n\r\n    setFire = (value) => {\r\n        this.fire = value;\r\n        this.setValueToLocalStorage('fire', value);\r\n    }\r\n\r\n    getFire = () => {\r\n        return this.fire;\r\n    }\r\n\r\n    setEarth = (value) => {\r\n        this.earth = value;\r\n        this.setValueToLocalStorage('earth', value);\r\n    }\r\n\r\n    getEarth = () => {\r\n        return this.earth;\r\n    }\r\n\r\n    setEnergy = (value) => {\r\n        this.energy = value;\r\n        this.setValueToLocalStorage('energy', value);\r\n    }\r\n\r\n    getEnergy = () => {\r\n        return this.energy;\r\n    }\r\n\r\n    setPhysical = (value) => {\r\n        this.physical = value;\r\n        this.setValueToLocalStorage('physical', value);\r\n    }\r\n\r\n    getPhysical = () => {\r\n        return this.physical;\r\n    }\r\n\r\n    setLifeDrain = (value) => {\r\n        this.lifeDrain = value;\r\n        this.setValueToLocalStorage('lifeDrain', value);\r\n    }\r\n\r\n    getLifeDrain = () => {\r\n        return this.lifeDrain;\r\n    }\r\n\r\n    setDrown = (value) => {\r\n        this.drown = value;\r\n        this.setValueToLocalStorage('drown', value);\r\n    }\r\n\r\n    getDrown = () => {\r\n        return this.drown;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t') => {\r\n        var fileXMLString = '';\r\n\r\n        fileXMLString += '\\n' + indentation + '<elements>';\r\n        if (this.getHoly() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element holyPercent=\"' + this.getHoly() + '\"/>';\r\n        }\r\n        if (this.getDeath() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element deathPercent=\"' + this.getDeath() + '\"/>';\r\n        }\r\n        if (this.getIce() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element icePercent=\"' + this.getIce() + '\"/>';\r\n        }\r\n        if (this.getFire() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element firePercent=\"' + this.getFire() + '\"/>';\r\n        }\r\n        if (this.getEarth() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element earthPercent=\"' + this.getEarth() + '\"/>';\r\n        }\r\n        if (this.getEnergy() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element energyPercent=\"' + this.getEnergy() + '\"/>';\r\n        }\r\n        if (this.getPhysical() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element physicalPercent=\"' + this.getPhysical() + '\"/>';\r\n        }\r\n        if (this.getLifeDrain() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element lifedrainPercent=\"' + this.getLifeDrain() + '\"/>';\r\n        }\r\n        if (this.getDrown() !== 0) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<element drownPercent=\"' + this.getDrown() + '\"/>';\r\n        }\r\n        fileXMLString += '\\n' + indentation + '</elements>';\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setHoly(0);\r\n        this.setDeath(0);\r\n        this.setIce(0);\r\n        this.setFire(0);\r\n        this.setEarth(0);\r\n        this.setEnergy(0);\r\n        this.setPhysical(0);\r\n        this.setLifeDrain(0);\r\n        this.setDrown(0);\r\n    }\r\n\r\n    loadXMLVariableElement = (variableName, variableValue) => {\r\n        if (variableName === 'holyPercent') {\r\n            this.setHoly(variableValue);\r\n        } else if (variableName === 'deathPercent') {\r\n            this.setDeath(variableValue);\r\n        } else if (variableName === 'icePercent') {\r\n            this.setIce(variableValue);\r\n        } else if (variableName === 'firePercent') {\r\n            this.setFire(variableValue);\r\n        } else if (variableName === 'earthPercent') {\r\n            this.setEarth(variableValue);\r\n        } else if (variableName === 'energyPercent') {\r\n            this.setEnergy(variableValue);\r\n        } else if (variableName === 'physicalPercent') {\r\n            this.setPhysical(variableValue);\r\n        } else if (variableName === 'lifedrainPercent') {\r\n            this.setLifeDrain(variableValue);\r\n        } else if (variableName === 'drownPercent') {\r\n            this.setDrown(variableValue);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('holy') !== null) {\r\n            this.setHoly(this.getValueFromLocalStorage('holy'));\r\n        }\r\n        if (this.getValueFromLocalStorage('death') !== null) {\r\n            this.setDeath(this.getValueFromLocalStorage('death'));\r\n        }\r\n        if (this.getValueFromLocalStorage('ice') !== null) {\r\n            this.setIce(this.getValueFromLocalStorage('ice'));\r\n        }\r\n        if (this.getValueFromLocalStorage('fire') !== null) {\r\n            this.setFire(this.getValueFromLocalStorage('fire'));\r\n        }\r\n        if (this.getValueFromLocalStorage('earth') !== null) {\r\n            this.setEarth(this.getValueFromLocalStorage('earth'));\r\n        }\r\n        if (this.getValueFromLocalStorage('energy') !== null) {\r\n            this.setEnergy(this.getValueFromLocalStorage('energy'));\r\n        }\r\n        if (this.getValueFromLocalStorage('physical') !== null) {\r\n            this.setPhysical(this.getValueFromLocalStorage('physical'));\r\n        }\r\n        if (this.getValueFromLocalStorage('lifeDrain') !== null) {\r\n            this.setLifeDrain(this.getValueFromLocalStorage('lifeDrain'));\r\n        }\r\n        if (this.getValueFromLocalStorage('drown') !== null) {\r\n            this.setDrown(this.getValueFromLocalStorage('drown'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default ElementsData;\r\n","class ImmunitiesData {\r\n    constructor() {\r\n        this.holy = false;\r\n        this.death = false;\r\n        this.ice = false;\r\n        this.fire = false;\r\n        this.earth = false;\r\n        this.energy = false;\r\n        this.physical = false;\r\n        this.lifeDrain = false;\r\n        this.drown = false;\r\n        this.paralyze = false;\r\n        this.drunk = false;\r\n        this.invisible = false;\r\n        this.outfit = false;\r\n\r\n        this.dataIndex = \"IMMUNITIES_\";\r\n    }\r\n\r\n    setHoly = (value) => {\r\n        this.holy = value;\r\n        this.setValueToLocalStorage('holy', value);\r\n    }\r\n\r\n    getHoly = () => {\r\n        return this.holy;\r\n    }\r\n\r\n    setDeath = (value) => {\r\n        this.death = value;\r\n        this.setValueToLocalStorage('death', value);\r\n    }\r\n\r\n    getDeath = () => {\r\n        return this.death;\r\n    }\r\n\r\n    setIce = (value) => {\r\n        this.ice = value;\r\n        this.setValueToLocalStorage('ice', value);\r\n    }\r\n\r\n    getIce = () => {\r\n        return this.ice;\r\n    }\r\n\r\n    setFire = (value) => {\r\n        this.fire = value;\r\n        this.setValueToLocalStorage('fire', value);\r\n    }\r\n\r\n    getFire = () => {\r\n        return this.fire;\r\n    }\r\n\r\n    setEarth = (value) => {\r\n        this.earth = value;\r\n        this.setValueToLocalStorage('earth', value);\r\n    }\r\n\r\n    getEarth = () => {\r\n        return this.earth;\r\n    }\r\n\r\n    setEnergy = (value) => {\r\n        this.energy = value;\r\n        this.setValueToLocalStorage('energy', value);\r\n    }\r\n\r\n    getEnergy = () => {\r\n        return this.energy;\r\n    }\r\n\r\n    setPhysical = (value) => {\r\n        this.physical = value;\r\n        this.setValueToLocalStorage('physical', value);\r\n    }\r\n\r\n    getPhysical = () => {\r\n        return this.physical;\r\n    }\r\n\r\n    setLifeDrain = (value) => {\r\n        this.lifeDrain = value;\r\n        this.setValueToLocalStorage('lifeDrain', value);\r\n    }\r\n\r\n    getLifeDrain = () => {\r\n        return this.lifeDrain;\r\n    }\r\n\r\n    setDrown = (value) => {\r\n        this.drown = value;\r\n        this.setValueToLocalStorage('drown', value);\r\n    }\r\n\r\n    getDrown = () => {\r\n        return this.drown;\r\n    }\r\n\r\n    setParalyze = (value) => {\r\n        this.paralyze = value;\r\n        this.setValueToLocalStorage('paralyze', value);\r\n    }\r\n\r\n    getParalyze = () => {\r\n        return this.paralyze;\r\n    }\r\n\r\n    setDrunk = (value) => {\r\n        this.drunk = value;\r\n        this.setValueToLocalStorage('drunk', value);\r\n    }\r\n\r\n    getDrunk = () => {\r\n        return this.drunk;\r\n    }\r\n\r\n    setInvisible = (value) => {\r\n        this.invisible = value;\r\n        this.setValueToLocalStorage('invisible', value);\r\n    }\r\n\r\n    getInvisible = () => {\r\n        return this.invisible;\r\n    }\r\n\r\n    setOutfit = (value) => {\r\n        this.outfit = value;\r\n        this.setValueToLocalStorage('outfit', value);\r\n    }\r\n\r\n    getOutfit = () => {\r\n        return this.outfit;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t') => {\r\n        var fileXMLString = '';\r\n\r\n        fileXMLString = fileXMLString + '\\n' + indentation + '<immunities>';\r\n        if (this.getHoly()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity holy=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity holy=\"0\"/>';\r\n        }\r\n        if (this.getDeath()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity death=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity death=\"0\"/>';\r\n        }\r\n        if (this.getIce()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity ice=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity ice=\"0\"/>';\r\n        }\r\n        if (this.getFire()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity fire=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity fire=\"0\"/>';\r\n        }\r\n        if (this.getEarth()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity earth=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity earth=\"0\"/>';\r\n        }\r\n        if (this.getEnergy()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity energy=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity energy=\"0\"/>';\r\n        }\r\n        if (this.getPhysical()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity physical=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity physical=\"0\"/>';\r\n        }\r\n        if (this.getLifeDrain()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity lifedrain=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity lifedrain=\"0\"/>';\r\n        }\r\n        if (this.getDrown()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity drown=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity drown=\"0\"/>';\r\n        }\r\n        if (this.getParalyze()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity paralyze=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity paralyze=\"0\"/>';\r\n        }\r\n        if (this.getDrunk()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity drunk=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity drunk=\"0\"/>';\r\n        }\r\n        if (this.getInvisible()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity invisible=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity invisible=\"0\"/>';\r\n        }\r\n        if (this.getOutfit()) {\r\n            fileXMLString += '\\n' + indentation + indentation + '<immunity outfit=\"1\"/>';\r\n        //} else {\r\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity outfit=\"0\"/>';\r\n        }\r\n        fileXMLString += '\\n' + indentation + '</immunities>';\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setHoly(false);\r\n        this.setDeath(false);\r\n        this.setIce(false);\r\n        this.setFire(false);\r\n        this.setEarth(false);\r\n        this.setEnergy(false);\r\n        this.setPhysical(false);\r\n        this.setLifeDrain(false);\r\n        this.setDrown(false);\r\n        this.setParalyze(false);\r\n        this.setDrunk(false);\r\n        this.setInvisible(false);\r\n        this.setOutfit(false);\r\n    }\r\n\r\n    loadXMLVariableImmunity = (variableName, variableValue) => {\r\n        if (variableName == 'holy') {\r\n            if (variableValue === '1') {\r\n                this.setHoly(true);\r\n            } else {\r\n                this.setHoly(false);\r\n            }\r\n        } else if (variableName == 'death') {\r\n            if (variableValue === '1') {\r\n                this.setDeath(true);\r\n            } else {\r\n                this.setDeath(false);\r\n            }\r\n        } else if (variableName == 'ice') {\r\n            if (variableValue === '1') {\r\n                this.setIce(true);\r\n            } else {\r\n                this.setIce(false);\r\n            }\r\n        } else if (variableName == 'fire') {\r\n            if (variableValue === '1') {\r\n                this.setFire(true);\r\n            } else {\r\n                this.setFire(false);\r\n            }\r\n        } else if (variableName == 'earth') {\r\n            if (variableValue === '1') {\r\n                this.setEarth(true);\r\n            } else {\r\n                this.setEarth(false);\r\n            }\r\n        } else if (variableName == 'energy') {\r\n            if (variableValue === '1') {\r\n                this.setEnergy(true);\r\n            } else {\r\n                this.setEnergy(false);\r\n            }\r\n        } else if (variableName == 'physical') {\r\n            if (variableValue === '1') {\r\n                this.setPhysical(true);\r\n            } else {\r\n                this.setPhysical(false);\r\n            }\r\n        } else if (variableName == 'lifedrain') {\r\n            if (variableValue === '1') {\r\n                this.setLifeDrain(true);\r\n            } else {\r\n                this.setLifeDrain(false);\r\n            }\r\n        } else if (variableName == 'drown') {\r\n            if (variableValue === '1') {\r\n                this.setDrown(true);\r\n            } else {\r\n                this.setDrown(false);\r\n            }\r\n        } else if (variableName == 'paralyze') {\r\n            if (variableValue === '1') {\r\n                this.setParalyze(true);\r\n            } else {\r\n                this.setParalyze(false);\r\n            }\r\n        } else if (variableName == 'drunk') {\r\n            if (variableValue === '1') {\r\n                this.setDrunk(true);\r\n            } else {\r\n                this.setDrunk(false);\r\n            }\r\n        } else if (variableName == 'invisible') {\r\n            if (variableValue === '1') {\r\n                this.setInvisible(true);\r\n            } else {\r\n                this.setInvisible(false);\r\n            }\r\n        } else if (variableName == 'outfit') {\r\n            if (variableValue === '1') {\r\n                this.setOutfit(true);\r\n            } else {\r\n                this.setOutfit(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('holy') !== null) {\r\n            if (this.getValueFromLocalStorage('holy') === 'true') {\r\n                this.setHoly(true);\r\n            } else if (this.getValueFromLocalStorage('holy') === 'false') {\r\n                this.setHoly(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('death') !== null) {\r\n            if (this.getValueFromLocalStorage('death') === 'true') {\r\n                this.setDeath(true);\r\n            } else if (this.getValueFromLocalStorage('death') === 'false') {\r\n                this.setDeath(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('ice') !== null) {\r\n            if (this.getValueFromLocalStorage('ice') === 'true') {\r\n                this.setIce(true);\r\n            } else if (this.getValueFromLocalStorage('ice') === 'false') {\r\n                this.setIce(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('fire') !== null) {\r\n            if (this.getValueFromLocalStorage('fire') === 'true') {\r\n                this.setFire(true);\r\n            } else if (this.getValueFromLocalStorage('fire') === 'false') {\r\n                this.setFire(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('earth') !== null) {\r\n            if (this.getValueFromLocalStorage('earth') === 'true') {\r\n                this.setEarth(true);\r\n            } else if (this.getValueFromLocalStorage('earth') === 'false') {\r\n                this.setEarth(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('energy') !== null) {\r\n            if (this.getValueFromLocalStorage('energy') === 'true') {\r\n                this.setEnergy(true);\r\n            } else if (this.getValueFromLocalStorage('energy') === 'false') {\r\n                this.setEnergy(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('physical') !== null) {\r\n            if (this.getValueFromLocalStorage('physical') === 'true') {\r\n                this.setPhysical(true);\r\n            } else if (this.getValueFromLocalStorage('physical') === 'false') {\r\n                this.setPhysical(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('lifeDrain') !== null) {\r\n            if (this.getValueFromLocalStorage('lifeDrain') === 'true') {\r\n                this.setLifeDrain(true);\r\n            } else if (this.getValueFromLocalStorage('lifeDrain') === 'false') {\r\n                this.setLifeDrain(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('drown') !== null) {\r\n            if (this.getValueFromLocalStorage('drown') === 'true') {\r\n                this.setDrown(true);\r\n            } else if (this.getValueFromLocalStorage('drown') === 'false') {\r\n                this.setDrown(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('paralyze') !== null) {\r\n            if (this.getValueFromLocalStorage('paralyze') === 'true') {\r\n                this.setParalyze(true);\r\n            } else if (this.getValueFromLocalStorage('paralyze') === 'false') {\r\n                this.setParalyze(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('drunk') !== null) {\r\n            if (this.getValueFromLocalStorage('drunk') === 'true') {\r\n                this.setDrunk(true);\r\n            } else if (this.getValueFromLocalStorage('drunk') === 'false') {\r\n                this.setDrunk(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('invisible') !== null) {\r\n            if (this.getValueFromLocalStorage('invisible') === 'true') {\r\n                this.setInvisible(true);\r\n            } else if (this.getValueFromLocalStorage('invisible') === 'false') {\r\n                this.setInvisible(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('outfit') !== null) {\r\n            if (this.getValueFromLocalStorage('outfit') === 'true') {\r\n                this.setOutfit(true);\r\n            } else if (this.getValueFromLocalStorage('outfit') === 'false') {\r\n                this.setOutfit(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ImmunitiesData;\r\n","class SummonsData {\r\n    constructor() {\r\n        this.maxSummons = 1;\r\n\r\n        this.allSummons = [];\r\n\r\n        this.summonName = '';\r\n        this.interval = 1000;\r\n        this.chance = 1;\r\n        this.max = 1;\r\n\r\n        this.dataIndex = \"SUMMONS_\";\r\n    }\r\n\r\n    setMaxSummons = (value) => {\r\n        this.maxSummons = value;\r\n        this.setValueToLocalStorage('maxSummons', value);\r\n    }\r\n\r\n    getMaxSummons = () => {\r\n        return this.maxSummons;\r\n    }\r\n\r\n    setSummonName = (value) => {\r\n        this.summonName = value;\r\n        this.setValueToLocalStorage('summonName', value);\r\n    }\r\n\r\n    setIndexSummonName = (index, value) => {\r\n        this.allSummons[index].summonName = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSummonName = () => {\r\n        return this.summonName;\r\n    }\r\n\r\n    setInterval = (value) => {\r\n        this.interval = value;\r\n        this.setValueToLocalStorage('interval', value);\r\n    }\r\n\r\n    setIndexInterval = (index, value) => {\r\n        this.allSummons[index].interval = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getInterval = () => {\r\n        return this.interval;\r\n    }\r\n\r\n    setChance = (value) => {\r\n        this.chance = value;\r\n        this.setValueToLocalStorage('chance', value);\r\n    }\r\n\r\n    setIndexChance = (index, value) => {\r\n        this.allSummons[index].chance = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getChance = () => {\r\n        return this.chance;\r\n    }\r\n\r\n    setMax = (value) => {\r\n        this.max = value;\r\n        this.setValueToLocalStorage('max', value);\r\n    }\r\n\r\n    setIndexMax = (index, value) => {\r\n        this.allSummons[index].max = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getMax = () => {\r\n        return this.max;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Actions\r\n\r\n    addToSummons = () => {\r\n        var allItems = {\r\n            summonName: this.summonName,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            max: this.max\r\n        }\r\n\r\n        this.allSummons.push(allItems);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    deleteFromSummons = (index) => {\r\n        this.allSummons.splice(index, 1);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFromSummons = (index) => {\r\n        return this.allSummons[index];\r\n    }\r\n\r\n    showSummons = (index) => {\r\n        this.summonName = this.allSummons[index].summonName;\r\n        this.interval = this.allSummons[index].interval;\r\n        this.chance = this.allSummons[index].chance;\r\n        this.max = this.allSummons[index].max;\r\n    }\r\n\r\n    updateSummons = (index) => {\r\n        this.allSummons[index] = {\r\n            summonName: this.summonName,\r\n            interval: this.interval,\r\n            chance: this.chance,\r\n            max: this.max\r\n        }\r\n    }\r\n\r\n    getSummonFromData = (index) => {\r\n        var summonTable = [];\r\n\r\n        summonTable.summonName = this.allSummons[index].summonName;\r\n        summonTable.interval = this.allSummons[index].interval;\r\n        summonTable.chance = this.allSummons[index].chance;\r\n        summonTable.max = this.allSummons[index].max;\r\n\r\n        return summonTable;\r\n    }\r\n\r\n    generateXMLSummon = (index, indentation = '\\t', firstIndentation = '') => {\r\n        var summonData = this.getSummonFromData(index);\r\n\r\n        var summon = '';\r\n        \r\n        summon += firstIndentation + '<summon name=\"' + summonData.summonName + '\" interval=\"' + summonData.interval + '\" chance=\"' + summonData.chance + '\" max=\"' + summonData.max + '\"/>';\r\n\r\n        return summon;\r\n    }\r\n\r\n    getAllXMLSummons = (indentation = '\\t', firstIndentation = '') => {\r\n        var returnSummons = [];\r\n\r\n        this.allSummons.forEach((variable, index) => {\r\n            returnSummons.push(this.generateXMLSummon(index, indentation, firstIndentation));\r\n        });\r\n\r\n        return returnSummons;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t', firstIndentation = '') => {\r\n        var fileXMLString = '';\r\n\r\n        var allXMLsummons = this.getAllXMLSummons(indentation, firstIndentation);\r\n\r\n        if (allXMLsummons.length > 0) {\r\n            fileXMLString += '\\n' + indentation + '<summons maxSummons=\"' + this.getMaxSummons() + '\">';\r\n            allXMLsummons.map((variable, index) => {\r\n                fileXMLString += '\\n' + variable;\r\n            });\r\n            fileXMLString += '\\n' + indentation + '</summons>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setMaxSummons(1);\r\n\r\n        this.allSummons = [];\r\n        this.setTableToLocalStorage();\r\n\r\n        this.setSummonName('');\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setMax(1);\r\n    }\r\n\r\n    setDefaultTableValue = () => {\r\n        this.setSummonName('');\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n        this.setMax(1);\r\n    }\r\n\r\n    loadXMLVariableSummons = (variableName, variableValue) => {\r\n        if (variableName === 'maxSummons') {\r\n            this.setMaxSummons(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableSummon = (variableName, variableValue) => {\r\n        if (variableName === 'name') {\r\n            this.setSummonName(variableValue);\r\n        } else if (variableName === 'interval') {\r\n            this.setInterval(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setChance(variableValue);\r\n        } else if (variableName === 'max') {\r\n            this.setMax(variableValue);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    setTableToLocalStorage = () => {\r\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allSummons));\r\n    }\r\n\r\n    getTableFromLocalStorage = () => {\r\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\r\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('maxSummons') !== null) {\r\n            this.setMaxSummons(this.getValueFromLocalStorage('maxSummons'));\r\n        }\r\n\r\n        this.allSummons = this.getTableFromLocalStorage();\r\n\r\n        if (this.getValueFromLocalStorage('summonName') !== null) {\r\n            this.setSummonName(this.getValueFromLocalStorage('summonName'));\r\n        }\r\n        if (this.getValueFromLocalStorage('interval') !== null) {\r\n            this.setInterval(this.getValueFromLocalStorage('interval'));\r\n        }\r\n        if (this.getValueFromLocalStorage('chance') !== null) {\r\n            this.setChance(this.getValueFromLocalStorage('chance'));\r\n        }\r\n        if (this.getValueFromLocalStorage('max') !== null) {\r\n            this.setMax(this.getValueFromLocalStorage('max'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default SummonsData;\r\n","class VoicesData {\r\n    constructor() {\r\n        this.interval = 1000;\r\n        this.chance = 1;\r\n\r\n        this.allVoices = [];\r\n\r\n        this.sentence = \"\";\r\n        this.yell = false;\r\n\r\n        this.dataIndex = \"VOICES_\";\r\n    }\r\n\r\n    setInterval = (value) => {\r\n        this.interval = value;\r\n        this.setValueToLocalStorage('interval', value);\r\n    }\r\n\r\n    getInterval = () => {\r\n        return this.interval;\r\n    }\r\n\r\n    setChance = (value) => {\r\n        this.chance = value;\r\n        this.setValueToLocalStorage('chance', value);\r\n    }\r\n\r\n    getChance = () => {\r\n        return this.chance;\r\n    }\r\n\r\n    setSentence = (value) => {\r\n        this.sentence = value;\r\n        this.setValueToLocalStorage('sentence', value);\r\n    }\r\n\r\n    setIndexSentence = (index, value) => {\r\n        this.allVoices[index].sentence = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSentence = () => {\r\n        return this.sentence;\r\n    }\r\n\r\n    setYell = (value) => {\r\n        this.yell = value;\r\n        this.setValueToLocalStorage('yell', value);\r\n    }\r\n\r\n    setIndexYell = (index, value) => {\r\n        this.allVoices[index].yell = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getYell = () => {\r\n        return this.yell;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    //Actions\r\n\r\n    addToVoices = () => {\r\n        var allItems = {\r\n            sentence: this.sentence,\r\n            yell: this.yell\r\n        }\r\n\r\n        this.allVoices.push(allItems);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    deleteFromVoices = (index) => {\r\n        this.allVoices.splice(index, 1);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFromVoices = (index) => {\r\n        return this.allVoices[index];\r\n    }\r\n\r\n    showVoices = (index) => {\r\n        this.sentence = this.allVoices[index].sentence;\r\n        this.yell = this.allVoices[index].yell;\r\n    }\r\n\r\n    updateVoices = (index) => {\r\n        this.allVoices[index] = {\r\n            sentence: this.sentence,\r\n            yell: this.yell\r\n        }\r\n    }\r\n\r\n    getVoiceFromData = (index) => {\r\n        var voiceTable = {}\r\n\r\n        voiceTable.sentence = this.allVoices[index].sentence;\r\n        voiceTable.yell = this.allVoices[index].yell;\r\n\r\n        return voiceTable\r\n    }\r\n\r\n    generateXMLVoice = (index, indentation = '\\t', firstIndentation = '') => {\r\n        var voiceData = this.getVoiceFromData(index);\r\n\r\n        var voice = '';\r\n\r\n        voice = voice + firstIndentation + '<voice sentence=\"' + voiceData.sentence + '\"';\r\n        if (voiceData.yell) {\r\n            voice = voice + ' yell=\"1\"/>'\r\n        } else {\r\n            voice = voice + '/>'\r\n        }\r\n\r\n        return voice;\r\n    }\r\n\r\n    getAllXMLVoices = (indentation = '\\t', firstIndentation = '') => {\r\n        var returnVoices = [];\r\n\r\n        this.allVoices.forEach((variable, index) => {\r\n            returnVoices.push(this.generateXMLVoice(index, indentation, firstIndentation));\r\n        });\r\n\r\n        return returnVoices;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t', firstIndentation = '') => {\r\n        var fileXMLString = '';\r\n\r\n        var allXMLvoices = this.getAllXMLVoices(indentation, firstIndentation);\r\n\r\n        if (allXMLvoices.length > 0) {\r\n            fileXMLString += '\\n' + indentation + '<voices interval=\"' + this.getInterval() + '\" chance=\"' + this.getChance() + '\">';\r\n            allXMLvoices.map((variable, index) => {\r\n                fileXMLString += '\\n' + variable;\r\n            });\r\n            fileXMLString += '\\n' + indentation + '</voices>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setInterval(1000);\r\n        this.setChance(1);\r\n\r\n        this.allVoices = [];\r\n        this.setTableToLocalStorage();\r\n\r\n        this.setSentence(\"\");\r\n        this.setYell(false);\r\n    }\r\n\r\n    setDefaultTableValue = () => {\r\n        this.setSentence(\"\");\r\n        this.setYell(false);\r\n    }\r\n\r\n    loadXMLVariableVoices = (variableName, variableValue) => {\r\n        if (variableName === 'interval') {\r\n            this.setInterval(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setChance(variableValue);\r\n        }\r\n    }\r\n\r\n    loadXMLVariableVoice = (variableName, variableValue) => {\r\n        if (variableName === 'sentence') {\r\n            this.setSentence(variableValue);\r\n        } else if (variableName === 'yell') {\r\n            this.setYell(true);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    setTableToLocalStorage = () => {\r\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allVoices));\r\n    }\r\n\r\n    getTableFromLocalStorage = () => {\r\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\r\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('interval') !== null) {\r\n            this.setInterval(this.getValueFromLocalStorage('interval'));\r\n        }\r\n        if (this.getValueFromLocalStorage('chance') !== null) {\r\n            this.setChance(this.getValueFromLocalStorage('chance'));\r\n        }\r\n\r\n        this.allVoices = this.getTableFromLocalStorage();\r\n\r\n        if (this.getValueFromLocalStorage('sentence') !== null) {\r\n            this.setSentence(this.getValueFromLocalStorage('sentence'));\r\n        }\r\n        if (this.getValueFromLocalStorage('yell') !== null) {\r\n            if (this.getValueFromLocalStorage('yell') === 'true') {\r\n                this.setYell(true);\r\n            } else if (this.getValueFromLocalStorage('yell') === 'false') {\r\n                this.setYell(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default VoicesData;\r\n","class LootData {\r\n    constructor() {\r\n        this.allLoot = [];\r\n\r\n        this.id = 1;\r\n        this.nameCheckbox = false;\r\n        this.name = '';\r\n        this.chance = 1;\r\n        this.countMaxCheckbox = false;\r\n        this.countMax = 1;\r\n        this.subtypeCheckbox = false;\r\n        this.subtype = 'water';\r\n        this.actionIdCheckbox = false;\r\n        this.actionId = 1;\r\n        this.uniqueIdCheckbox = false;\r\n        this.uniqueId = 1;\r\n        this.textCheckbox = false;\r\n        this.text = '';\r\n        this.commentCheckbox = false;\r\n        this.comment = '';\r\n\r\n        this.dataIndex = \"LOOT_\";\r\n    }\r\n\r\n    setId = (value) => {\r\n        this.id = value;\r\n        this.setValueToLocalStorage('id', value);\r\n    }\r\n\r\n    setIndexId = (index, value) => {\r\n        this.allLoot[index].id = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getId = () => {\r\n        return this.id;\r\n    }\r\n\r\n    setNameCheckbox = (value) => {\r\n        this.nameCheckbox = value;\r\n        this.setValueToLocalStorage('nameCheckbox', value);\r\n    }\r\n\r\n    setIndexNameCheckbox = (index, value) => {\r\n        this.allLoot[index].nameCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getNameCheckbox = () => {\r\n        return this.nameCheckbox;\r\n    }\r\n\r\n    setName = (value) => {\r\n        this.name = value;\r\n        this.setValueToLocalStorage('name', value);\r\n    }\r\n\r\n    setIndexName = (index, value) => {\r\n        this.allLoot[index].name = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getName = () => {\r\n        return this.name;\r\n    }\r\n\r\n    setChance = (value) => {\r\n        this.chance = value;\r\n        this.setValueToLocalStorage('chance', value);\r\n    }\r\n\r\n    setIndexChance = (index, value) => {\r\n        this.allLoot[index].chance = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getChance = () => {\r\n        return this.chance;\r\n    }\r\n\r\n    setCountMaxCheckbox = (value) => {\r\n        this.countMaxCheckbox = value;\r\n        this.setValueToLocalStorage('countMaxCheckbox', value);\r\n    }\r\n\r\n    setIndexCountMaxCheckbox = (index, value) => {\r\n        this.allLoot[index].countMaxCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getCountMaxCheckbox = () => {\r\n        return this.countMaxCheckbox;\r\n    }\r\n\r\n    setCountMax = (value) => {\r\n        this.countMax = value;\r\n        this.setValueToLocalStorage('countMax', value);\r\n    }\r\n\r\n    setIndexCountMax = (index, value) => {\r\n        this.allLoot[index].countMax = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getCountMax = () => {\r\n        return this.countMax;\r\n    }\r\n\r\n    setSubtypeCheckbox = (value) => {\r\n        this.subtypeCheckbox = value;\r\n        this.setValueToLocalStorage('subtypeCheckbox', value);\r\n    }\r\n\r\n    setIndexSubtypeCheckbox = (index, value) => {\r\n        this.allLoot[index].subtypeCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSubtypeCheckbox = () => {\r\n        return this.subtypeCheckbox;\r\n    }\r\n\r\n    setSubtype = (value) => {\r\n        this.subtype = value;\r\n        this.setValueToLocalStorage('subtype', value);\r\n    }\r\n\r\n    setIndexSubtype = (index, value) => {\r\n        this.allLoot[index].subtype = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getSubtype = () => {\r\n        return this.subtype;\r\n    }\r\n\r\n    setActionIdCheckbox = (value) => {\r\n        this.actionIdCheckbox = value;\r\n        this.setValueToLocalStorage('actionIdCheckbox', value);\r\n    }\r\n\r\n    setIndexActionIdCheckbox = (index, value) => {\r\n        this.allLoot[index].actionIdCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getActionIdCheckbox = () => {\r\n        return this.actionIdCheckbox;\r\n    }\r\n\r\n    setActionId = (value) => {\r\n        this.actionId = value;\r\n        this.setValueToLocalStorage('actionId', value);\r\n    }\r\n\r\n    setIndexActionId = (index, value) => {\r\n        this.allLoot[index].actionId = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getActionId = () => {\r\n        return this.actionId;\r\n    }\r\n\r\n    setUniqueIdCheckbox = (value) => {\r\n        this.uniqueIdCheckbox = value;\r\n        this.setValueToLocalStorage('uniqueIdCheckbox', value);\r\n    }\r\n\r\n    setIndexUniqueIdCheckbox = (index, value) => {\r\n        this.allLoot[index].uniqueIdCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getUniqueIdCheckbox = () => {\r\n        return this.uniqueIdCheckbox;\r\n    }\r\n\r\n    setUniqueId = (value) => {\r\n        this.uniqueId = value;\r\n        this.setValueToLocalStorage('uniqueId', value);\r\n    }\r\n\r\n    setIndexUniqueId = (index, value) => {\r\n        this.allLoot[index].uniqueId = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getUniqueId = () => {\r\n        return this.uniqueId;\r\n    }\r\n\r\n    setTextCheckbox = (value) => {\r\n        this.textCheckbox = value;\r\n        this.setValueToLocalStorage('textCheckbox', value);\r\n    }\r\n\r\n    setIndexTextCheckbox = (index, value) => {\r\n        this.allLoot[index].textCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getTextCheckbox = () => {\r\n        return this.textCheckbox;\r\n    }\r\n\r\n    setText = (value) => {\r\n        this.text = value;\r\n        this.setValueToLocalStorage('text', value);\r\n    }\r\n\r\n    setIndexText = (index, value) => {\r\n        this.allLoot[index].text = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getText = () => {\r\n        return this.text;\r\n    }\r\n\r\n    setCommentCheckbox = (value) => {\r\n        this.commentCheckbox = value;\r\n        this.setValueToLocalStorage('commentCheckbox', value);\r\n    }\r\n\r\n    setIndexCommentCheckbox = (index, value) => {\r\n        this.allLoot[index].commentCheckbox = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getCommentCheckbox = () => {\r\n        return this.commentCheckbox;\r\n    }\r\n\r\n    setComment = (value) => {\r\n        this.comment = value;\r\n        this.setValueToLocalStorage('comment', value);\r\n    }\r\n\r\n    setIndexComment = (index, value) => {\r\n        this.allLoot[index].comment = value;\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getComment = () => {\r\n        return this.comment;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    addToLoot = () => {\r\n        var allItems = {\r\n            id: this.id,\r\n            nameCheckbox: this.nameCheckbox,\r\n            name: this.name,\r\n            chance: this.chance,\r\n            countMaxCheckbox: this.countMaxCheckbox,\r\n            countMax: this.countMax,\r\n            subtypeCheckbox: this.subtypeCheckbox,\r\n            subtype: this.subtype,\r\n            actionIdCheckbox: this.actionIdCheckbox,\r\n            actionId: this.actionId,\r\n            uniqueIdCheckbox: this.uniqueIdCheckbox,\r\n            uniqueId: this.uniqueId,\r\n            textCheckbox: this.textCheckbox,\r\n            text: this.text,\r\n            commentCheckbox: this.commentCheckbox,\r\n            comment: this.comment\r\n        }\r\n\r\n        this.allLoot.push(allItems);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    deleteFromLoot = (index) => {\r\n        this.allLoot.splice(index, 1);\r\n        this.setTableToLocalStorage();\r\n    }\r\n\r\n    getFromLoot = (index) => {\r\n        return this.allLoot[index];\r\n    }\r\n\r\n    showLoot = (index) => {\r\n        this.id = this.allLoot[index].id;\r\n        this.nameCheckbox = this.allLoot[index].nameCheckbox;\r\n        this.name = this.allLoot[index].name;\r\n        this.chance = this.allLoot[index].chance;\r\n        this.countMaxCheckbox = this.allLoot[index].countMaxCheckbox;\r\n        this.countMax = this.allLoot[index].countMax;\r\n        this.subtypeCheckbox = this.allLoot[index].subtypeCheckbox;\r\n        this.subtype = this.allLoot[index].subtype;\r\n        this.actionIdCheckbox = this.allLoot[index].actionIdCheckbox;\r\n        this.actionId = this.allLoot[index].actionId;\r\n        this.uniqueIdCheckbox = this.allLoot[index].uniqueIdCheckbox;\r\n        this.uniqueId = this.allLoot[index].uniqueId;\r\n        this.textCheckbox = this.allLoot[index].textCheckbox;\r\n        this.text = this.allLoot[index].text;\r\n        this.commentCheckbox = this.allLoot[index].commentCheckbox;\r\n        this.comment = this.allLoot[index].comment;\r\n    }\r\n\r\n    updateLoot = (index) => {\r\n        this.allLoot[index] = {\r\n            id: this.id,\r\n            nameCheckbox: this.nameCheckbox,\r\n            name: this.name,\r\n            chance: this.chance,\r\n            countMaxCheckbox: this.countMaxCheckbox,\r\n            countMax: this.countMax,\r\n            subtypeCheckbox: this.subtypeCheckbox,\r\n            subtype: this.subtype,\r\n            actionIdCheckbox: this.actionIdCheckbox,\r\n            actionId: this.actionId,\r\n            uniqueIdCheckbox: this.uniqueIdCheckbox,\r\n            uniqueId: this.uniqueId,\r\n            textCheckbox: this.textCheckbox,\r\n            text: this.text,\r\n            commentCheckbox: this.commentCheckbox,\r\n            comment: this.comment\r\n        }\r\n    }\r\n\r\n    getLootFromData = (index) => {\r\n        var lootTable = {}\r\n\r\n        if (!this.allLoot[index].nameCheckbox) {\r\n            lootTable.id = this.allLoot[index].id;\r\n        } else {\r\n            lootTable.name = this.allLoot[index].name;\r\n        }\r\n        lootTable.chance = this.allLoot[index].chance;\r\n        if (this.allLoot[index].countMaxCheckbox) {\r\n            lootTable.countmax = this.allLoot[index].countMax;\r\n        }\r\n        if (this.allLoot[index].subtypeCheckbox) {\r\n            lootTable.subtype = this.allLoot[index].subtype;\r\n        }\r\n        if (this.allLoot[index].actionIdCheckbox) {\r\n            lootTable.actionid = this.allLoot[index].actionId;\r\n        }\r\n        if (this.allLoot[index].uniqueIdCheckbox) {\r\n            lootTable.uniqueid = this.allLoot[index].uniqueId;\r\n        }\r\n        if (this.allLoot[index].textCheckbox) {\r\n            lootTable.text = this.allLoot[index].text;\r\n        }\r\n        if (this.allLoot[index].commentCheckbox) {\r\n            lootTable.comment = this.allLoot[index].comment;\r\n        }\r\n\r\n        return lootTable\r\n    }\r\n\r\n    getLootSubtype = () => {\r\n        var lootSubtype = {\r\n            'water': 1,\r\n            'blood': 2,\r\n            'beer': 3,\r\n            'slime': 4,\r\n            'lemonade': 5,\r\n            'milk': 6,\r\n            'manafluid': 7,\r\n            'lifefluid': 10,\r\n            'oil': 11,\r\n            'urine': 13,\r\n            'coconut milk': 14,\r\n            'wine': 15,\r\n            'mud': 19,\r\n            'fruit juice': 21,\r\n            'lava': 26,\r\n            'rum': 27,\r\n            'swamp': 28,\r\n            'tea': 35,\r\n            'mead': 43\r\n        };\r\n\r\n        return lootSubtype;\r\n    }\r\n\r\n    getLootSubtypeId = () => {\r\n        var lootSubtypeId = {\r\n            '1': 'water',\r\n            '2': 'blood',\r\n            '3': 'beer',\r\n            '4': 'slime',\r\n            '5': 'lemonade',\r\n            '6': 'milk',\r\n            '7': 'manafluid',\r\n            '10': 'lifefluid',\r\n            '11': 'oil',\r\n            '13': 'urine',\r\n            '14': 'coconut milk',\r\n            '15': 'wine',\r\n            '19': 'mud',\r\n            '21': 'fruit juice',\r\n            '26': 'lava',\r\n            '27': 'rum',\r\n            '28': 'swamp',\r\n            '35': 'tea',\r\n            '43': 'mead'\r\n        };\r\n\r\n        return lootSubtypeId;\r\n    }\r\n\r\n    translateLootSubtype = (subType) => {\r\n        var lootSubtype = this.getLootSubtype();\r\n\r\n        if (lootSubtype.subType != null) {\r\n            return lootSubtype[subType];\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    translateLootSubtypeIdToText = (subType) => {\r\n        var lootSubtypeId = this.getLootSubtypeId();\r\n        \r\n        if (lootSubtypeId.subType != null) {\r\n            return lootSubtypeId[subType];\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    generateXMLLoot = (index, indentation = '\\t', firstIndentation = '') => {\r\n        var lootData = this.getLootFromData(index);\r\n\r\n        var loot = '';\r\n\r\n        if (lootData.id != null) {\r\n            loot = loot + firstIndentation + '<item id=\"' + lootData.id + '\"';\r\n        } else if (lootData.name != null) {\r\n            loot = loot + firstIndentation + '<item name=\"' + lootData.name + '\"';\r\n        }\r\n        if (lootData.countmax != null) {\r\n            loot = loot + ' countmax=\"' + lootData.countmax + '\"';\r\n        }\r\n        if (lootData.subtype != null) {\r\n            loot = loot + ' subtype=\"' + this.translateLootSubtype(lootData.subtype) + '\"';\r\n        }\r\n        if (lootData.actionid != null) {\r\n            loot = loot + ' actionId=\"' + lootData.actionId + '\"';\r\n        }\r\n        if (lootData.uniqueid != null) {\r\n            loot = loot + ' uniqueId=\"' + lootData.uniqueId + '\"';\r\n        }\r\n        if (lootData.text != null) {\r\n            loot = loot + ' text=\"' + lootData.text + '\"';\r\n        }\r\n        loot = loot + ' chance=\"' + lootData.chance + '\"' + '/>';\r\n        if (lootData.comment != null) {\r\n            loot = loot + ' <!--' + lootData.comment + '-->';\r\n        }\r\n\r\n        return loot;\r\n    }\r\n\r\n    getAllXMLLoot = (indentation = '\\t', firstIndentation = '') => {\r\n        var returnLoot = [];\r\n\r\n        this.allLoot.forEach((variable, index) => {\r\n            returnLoot.push(this.generateXMLLoot(index, indentation, firstIndentation));\r\n        });\r\n\r\n        return returnLoot;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (indentation = '\\t', firstIndentation = '') => {\r\n        var fileXMLString = '';\r\n\r\n        var allXMLloot = this.getAllXMLLoot(indentation, firstIndentation);\r\n\r\n        if (allXMLloot.length > 0) {\r\n            fileXMLString += '\\n' + indentation + '<loot>';\r\n            allXMLloot.map((variable, index) => {\r\n                fileXMLString += '\\n' + variable;\r\n            });\r\n            fileXMLString += '\\n' + indentation + '</loot>';\r\n        }\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.allLoot = [];\r\n        this.setTableToLocalStorage();\r\n\r\n        this.setId(1);\r\n        this.setNameCheckbox(false);\r\n        this.setName('');\r\n        this.setChance(1);\r\n        this.setCountMaxCheckbox(false);\r\n        this.setCountMax(1);\r\n        this.setSubtypeCheckbox(false);\r\n        this.setSubtype('water');\r\n        this.setActionIdCheckbox(false);\r\n        this.setActionId(1);\r\n        this.setUniqueIdCheckbox(false);\r\n        this.setUniqueId(1);\r\n        this.setTextCheckbox(false);\r\n        this.setText('');\r\n        this.setCommentCheckbox(false);\r\n        this.setComment('');\r\n    }\r\n\r\n    setDefaultTableValue = () => {\r\n        this.setId(1);\r\n        this.setNameCheckbox(false);\r\n        this.setName('');\r\n        this.setChance(1);\r\n        this.setCountMaxCheckbox(false);\r\n        this.setCountMax(1);\r\n        this.setSubtypeCheckbox(false);\r\n        this.setSubtype('water');\r\n        this.setActionIdCheckbox(false);\r\n        this.setActionId(1);\r\n        this.setUniqueIdCheckbox(false);\r\n        this.setUniqueId(1);\r\n        this.setTextCheckbox(false);\r\n        this.setText('');\r\n        this.setCommentCheckbox(false);\r\n        this.setComment('');\r\n    }\r\n\r\n    loadXMLVariableItem = (variableName, variableValue) => {\r\n        if (variableName === 'id') {\r\n            this.setNameCheckbox(false);\r\n            this.setId(variableValue);\r\n        } else if (variableName === 'name') {\r\n            this.setNameCheckbox(true);\r\n            this.setName(variableValue);\r\n        } else if (variableName === 'countmax') {\r\n            this.setCountMaxCheckbox(true);\r\n            this.setCountMax(variableValue);\r\n        } else if (variableName === 'subtype') {\r\n            this.setSubtypeCheckbox(true)\r\n            this.setSubtype(this.translateLootSubtypeIdToText(variableValue));\r\n        } else if (variableName === 'actionId') {\r\n            this.setActionIdCheckbox(true);\r\n            this.setActionId(variableValue);\r\n        } else if (variableName === 'uniqueId') {\r\n            this.setUniqueIdCheckbox(true);\r\n            this.setUniqueId(variableValue);\r\n        } else if (variableName === 'text') {\r\n            this.setTextCheckbox(true);\r\n            this.setText(variableValue);\r\n        } else if (variableName === 'chance') {\r\n            this.setChance(variableValue);\r\n        }\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    setTableToLocalStorage = () => {\r\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allLoot));\r\n    }\r\n\r\n    getTableFromLocalStorage = () => {\r\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\r\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        this.allLoot = this.getTableFromLocalStorage();\r\n\r\n        if (this.getValueFromLocalStorage('id') !== null) {\r\n            this.setId(this.getValueFromLocalStorage('id'));\r\n        }\r\n        if (this.getValueFromLocalStorage('nameCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('nameCheckbox') === 'true') {\r\n                this.setNameCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('nameCheckbox') === 'false') {\r\n                this.setNameCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('name') !== null) {\r\n            this.setName(this.getValueFromLocalStorage('name'));\r\n        }\r\n        if (this.getValueFromLocalStorage('chance') !== null) {\r\n            this.setChance(this.getValueFromLocalStorage('chance'));\r\n        }\r\n        if (this.getValueFromLocalStorage('countMaxCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('countMaxCheckbox') === 'true') {\r\n                this.setCountMaxCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('countMaxCheckbox') === 'false') {\r\n                this.setCountMaxCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('countMax') !== null) {\r\n            this.setCountMax(this.getValueFromLocalStorage('countMax'));\r\n        }\r\n        if (this.getValueFromLocalStorage('subtypeCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('subtypeCheckbox') === 'true') {\r\n                this.setSubtypeCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('subtypeCheckbox') === 'false') {\r\n                this.setSubtypeCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('subtype') !== null) {\r\n            this.setSubtype(this.getValueFromLocalStorage('subtype'));\r\n        }\r\n        if (this.getValueFromLocalStorage('actionIdCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('actionIdCheckbox') === 'true') {\r\n                this.setActionIdCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('actionIdCheckbox') === 'false') {\r\n                this.setActionIdCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('actionId') !== null) {\r\n            this.setActionId(this.getValueFromLocalStorage('actionId'));\r\n        }\r\n        if (this.getValueFromLocalStorage('uniqueIdCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('uniqueIdCheckbox') === 'true') {\r\n                this.setUniqueIdCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('uniqueIdCheckbox') === 'false') {\r\n                this.setUniqueIdCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('uniqueId') !== null) {\r\n            this.setUniqueId(this.getValueFromLocalStorage('uniqueId'));\r\n        }\r\n        if (this.getValueFromLocalStorage('textCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('textCheckbox') === 'true') {\r\n                this.setTextCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('textCheckbox') === 'false') {\r\n                this.setTextCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('text') !== null) {\r\n            this.setText(this.getValueFromLocalStorage('text'));\r\n        }\r\n        if (this.getValueFromLocalStorage('commentCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('commentCheckbox') === 'true') {\r\n                this.setCommentCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('commentCheckbox') === 'false') {\r\n                this.setCommentCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('comment') !== null) {\r\n            this.setComment(this.getValueFromLocalStorage('comment'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default LootData;\r\n","class IOData {\r\n    constructor() {\r\n        this.ownNameCheckbox = false;\r\n        this.ownName = '';\r\n\r\n        this.name = '';\r\n        this.fileText = '';\r\n\r\n        this.dataIndex = \"IO_\";\r\n    }\r\n\r\n    setOwnNameCheckbox = (value) => {\r\n        this.ownNameCheckbox = value;\r\n        this.setValueToLocalStorage('ownNameCheckbox', value);\r\n    }\r\n\r\n    getOwnNameCheckbox = () => {\r\n        return this.ownNameCheckbox;\r\n    }\r\n\r\n    setOwnName = (value) => {\r\n        this.ownName = value;\r\n        this.setValueToLocalStorage('ownName', value);\r\n        if (this.getOwnNameCheckbox()) {\r\n            this.setName(value);\r\n        }\r\n    }\r\n\r\n    getOwnName = () => {\r\n        return this.ownName;\r\n    }\r\n\r\n    setName = (value) => {\r\n        this.name = value;\r\n    }\r\n\r\n    getName = () => {\r\n        return this.name;\r\n    }\r\n\r\n    setFileText = (value) => {\r\n        this.fileText = value;\r\n    }\r\n\r\n    getFileText = () => {\r\n        return this.fileText;\r\n    }\r\n\r\n    getDataIndex = () => {\r\n        return this.dataIndex;\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.setOwnNameCheckbox(false);\r\n        this.setOwnName('');\r\n\r\n        this.setName(null);\r\n    }\r\n\r\n    loadFile = (file) => {\r\n        var reader = new FileReader();\r\n\r\n        reader.addEventListener('load', (e) => {\r\n            this.setFileText(e.target.result);\r\n        });\r\n        \r\n        reader.readAsBinaryString(file);\r\n    }\r\n\r\n    setValueToLocalStorage = (key, value) => {\r\n        localStorage.setItem(this.getDataIndex() + key, value);\r\n    }\r\n\r\n    getValueFromLocalStorage = (key) => {\r\n        return localStorage.getItem(this.getDataIndex() + key);\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        if (this.getValueFromLocalStorage('ownNameCheckbox') !== null) {\r\n            if (this.getValueFromLocalStorage('ownNameCheckbox') === 'true') {\r\n                this.setOwnNameCheckbox(true);\r\n            } else if (this.getValueFromLocalStorage('ownNameCheckbox') === 'false') {\r\n                this.setOwnNameCheckbox(false);\r\n            }\r\n        }\r\n        if (this.getValueFromLocalStorage('ownName') !== null) {\r\n            this.setOwnName(this.getValueFromLocalStorage('ownName'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default IOData;\r\n","import MonsterData from './MonsterData.js'\r\nimport FlagsData from './FlagsData.js'\r\nimport ScriptData from './ScriptData.js'\r\nimport AttacksData from './AttacksData.js'\r\nimport DefensesData from './DefensesData.js'\r\nimport ElementsData from './ElementsData.js'\r\nimport ImmunitiesData from './ImmunitiesData.js'\r\nimport SummonsData from './SummonsData.js'\r\nimport VoicesData from './VoicesData.js'\r\nimport LootData from './LootData.js'\r\nimport IOData from './IOData.js'\r\n\r\nclass AppData {\r\n    constructor() {\r\n        this.monsterData = new MonsterData();\r\n        this.flagsData = new FlagsData();\r\n        this.scriptData = new ScriptData();\r\n        this.attacksData = new AttacksData();\r\n        this.defensesData = new DefensesData();\r\n        this.elementsData = new ElementsData();\r\n        this.immunitiesData = new ImmunitiesData();\r\n        this.summonsData = new SummonsData();\r\n        this.voicesData = new VoicesData();\r\n        this.lootData = new LootData();\r\n        this.ioData = new IOData();\r\n    }\r\n\r\n    getMonster = () => {\r\n        return this.monsterData;\r\n    }\r\n\r\n    getFlags = () => {\r\n        return this.flagsData;\r\n    }\r\n\r\n    getScript = () => {\r\n        return this.scriptData;\r\n    }\r\n\r\n    getAttacks = () => {\r\n        return this.attacksData;\r\n    }\r\n\r\n    getDefenses = () => {\r\n        return this.defensesData;\r\n    }\r\n\r\n    getElements = () => {\r\n        return this.elementsData;\r\n    }\r\n\r\n    getImmunities = () => {\r\n        return this.immunitiesData;\r\n    }\r\n\r\n    getSummons = () => {\r\n        return this.summonsData;\r\n    }\r\n\r\n    getVoices = () => {\r\n        return this.voicesData;\r\n    }\r\n\r\n    getLoot = () => {\r\n        return this.lootData;\r\n    }\r\n\r\n    getIO = () => {\r\n        return this.ioData;\r\n    }\r\n\r\n    //Generate XML\r\n\r\n    getXML = (/*indentation*/) => {\r\n        var indentation = '\\t';\r\n        var fileXMLString = '';\r\n\r\n        fileXMLString += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n        fileXMLString += this.getMonster().getXML();\r\n        fileXMLString += this.getFlags().getXML();\r\n        fileXMLString += this.getScript().getXML();\r\n        fileXMLString += this.getAttacks().getXML('\\t', '\\t\\t');\r\n        fileXMLString += this.getDefenses().getXML('\\t', '\\t\\t');\r\n        fileXMLString += this.getElements().getXML();\r\n        fileXMLString += this.getImmunities().getXML();\r\n        fileXMLString += this.getSummons().getXML('\\t', '\\t\\t');\r\n        fileXMLString += this.getVoices().getXML('\\t', '\\t\\t');\r\n        fileXMLString += this.getLoot().getXML('\\t', '\\t\\t');\r\n        fileXMLString += '\\n' + '</monster>';\r\n\r\n        return fileXMLString;\r\n    }\r\n\r\n    //Download\r\n\r\n    downloadFile = () => {\r\n        var a = document.createElement('a');\r\n        a.href = 'data:text/plain;base64,' + btoa(this.getXML());\r\n        a.textContent = 'download';\r\n        a.download = this.getIO().getName() + \".xml\";\r\n        a.click();\r\n    }\r\n\r\n    setDefaultValue = () => {\r\n        this.getMonster().setDefaultValue();\r\n        this.getFlags().setDefaultValue();\r\n        this.getScript().setDefaultValue();\r\n        this.getAttacks().setDefaultValue();\r\n        this.getDefenses().setDefaultValue();\r\n        this.getElements().setDefaultValue();\r\n        this.getImmunities().setDefaultValue();\r\n        this.getSummons().setDefaultValue();\r\n        this.getVoices().setDefaultValue();\r\n        this.getLoot().setDefaultValue();\r\n        this.getIO().setDefaultValue();\r\n    }\r\n\r\n    loadDataFromXMLToTable = (sector, variableName, variableValue, preSector) => {\r\n        if (sector === 'monster') {\r\n            this.getMonster().loadXMLVariableMonster(variableName, variableValue);\r\n        } else if (sector === 'health') {\r\n            this.getMonster().loadXMLVariableHealth(variableName, variableValue);\r\n        } else if (sector === 'look') {\r\n            this.getMonster().loadXMLVariableLook(variableName, variableValue);\r\n        } else if (sector === 'targetchange') {\r\n            this.getMonster().loadXMLVariableTargetchange(variableName, variableValue);\r\n        } else if (sector === 'strategy') {\r\n            this.getMonster().loadXMLVariableStrategy(variableName, variableValue);\r\n        } else if (sector === 'flag') {\r\n            this.getFlags().loadXMLVariableFlag(variableName, variableValue);\r\n        } else if (sector === 'event') {\r\n            this.getScript().loadXMLVariableEvent(variableName, variableValue);\r\n        } else if (sector === 'attack') {\r\n            this.getAttacks().loadXMLVariableAttack(variableName, variableValue);\r\n        } else if (sector === 'defenses') {\r\n            this.getDefenses().loadXMLVariableDefenses(variableName, variableValue);\r\n        } else if (sector === 'defense') {\r\n            this.getDefenses().loadXMLVariableDefense(variableName, variableValue);\r\n        } else if (sector === 'element') {\r\n            this.getElements().loadXMLVariableElement(variableName, variableValue);\r\n        } else if (sector === 'immunity') {\r\n            this.getImmunities().loadXMLVariableImmunity(variableName, variableValue);\r\n        } else if (sector === 'summons') {\r\n            this.getSummons().loadXMLVariableSummons(variableName, variableValue);\r\n        } else if (sector === 'summon') {\r\n            this.getSummons().loadXMLVariableSummon(variableName, variableValue);\r\n        } else if (sector === 'voices') {\r\n            this.getVoices().loadXMLVariableVoices(variableName, variableValue);\r\n        } else if (sector === 'voice') {\r\n            this.getVoices().loadXMLVariableVoice(variableName, variableValue);\r\n        } else if (sector === 'item') {\r\n            this.getLoot().loadXMLVariableItem(variableName, variableValue);\r\n        } else if (sector === 'attribute') {\r\n            if (preSector === 'attack') {\r\n                this.getAttacks().loadXMLVariableAttribute(variableName, variableValue);\r\n            } else if (preSector === 'defense') {\r\n                this.getDefenses().loadXMLVariableAttribute(variableName, variableValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseXMLFile = () => {\r\n        var itemsXMLString = [];\r\n\r\n        this.getIO().getFileText().split('\\n').map(line => {\r\n            itemsXMLString.push(line.replace(/\\t/g, ''));\r\n        });\r\n\r\n        var parseSectors = [];\r\n        itemsXMLString.map(line => {\r\n            let startSign = line.search('<');\r\n            if (startSign >= 0) {\r\n                if (line.substring(startSign + 1, startSign + 2) === '/') {\r\n                    let endSign = (startSign + 1) + line.substring(startSign + 1, line.length).search('>');\r\n                    if (endSign >= 0) {\r\n                        if (parseSectors[parseSectors.length - 1] === line.substring(startSign + 2, endSign - 1)) {\r\n                            if (parseSectors[parseSectors.length - 1] === 'attack') {\r\n                                this.getAttacks().addToAttacks();\r\n                                this.getAttacks().setDefaultTableValue();\r\n                            } else if (parseSectors[parseSectors.length - 1] === 'defense') {\r\n                                this.getDefenses().addToDefenses();\r\n                                this.getDefenses().setDefaultTableValue();\r\n                            } else if (parseSectors[parseSectors.length - 1] === 'summon') {\r\n                                this.getSummons().addToSummons();\r\n                                this.getSummons().setDefaultTableValue();\r\n                            } else if (parseSectors[parseSectors.length - 1] === 'voice') {\r\n                                this.getVoices().addToVoices();\r\n                                this.getVoices().setDefaultTableValue();\r\n                            } else if (parseSectors[parseSectors.length - 1] === 'item') {\r\n                                this.getLoot().addToLoot();\r\n                                this.getLoot().setDefaultTableValue();\r\n                            }\r\n                            parseSectors = parseSectors.splice(0, parseSectors.length - 1);\r\n                        }\r\n                    }\r\n                } else if (line.substring(startSign + 1, startSign + 2) === '?') {\r\n                    //ignore\r\n                } else if (line.substring(startSign + 1, startSign + 2) === '!') {\r\n                    //ignore\r\n                } else {\r\n                    let nextSign = line.substring(startSign + 1, line.length - 1).search(' ');\r\n                    let endSign = line.substring(startSign + 1, line.length - 1).search('>');\r\n                    if (nextSign && nextSign < endSign) {\r\n                        parseSectors.push(line.substring(startSign + 1, (startSign + 1) + line.substring(startSign, line.length - 1).search(' ') - 1));\r\n                        let isStartComment = line.search('<!--');\r\n                        let isEndComment = line.search('-->');\r\n                        //let commentText = '';\r\n                        let prePreparedText = '';\r\n                        if (isStartComment !== -1 && parseSectors[parseSectors.length - 1] === 'item') {\r\n                            prePreparedText = line.substring(line.substring(startSign, line.length - 1).search(' '), isStartComment - 2);\r\n                            this.getLoot().setCommentCheckbox(true);\r\n                            this.getLoot().setComment(line.substring(isStartComment + 4, isEndComment - 2));\r\n                        } else {\r\n                            prePreparedText = line.substring(line.substring(startSign, line.length - 1).search(' '), line.length - 1);\r\n                        }\r\n                        let preparedText = '';\r\n                        let startNewString = false;\r\n                        for (let i = 1; i < prePreparedText.length; i++) {\r\n                            if (prePreparedText.substring(i, i + 1) === '\"') {\r\n                                if (!startNewString) {\r\n                                    startNewString = true;\r\n                                    preparedText += prePreparedText.substring(i, i + 1);\r\n                                } else {\r\n                                    startNewString = false;\r\n                                    preparedText += prePreparedText.substring(i, i + 1);\r\n                                }\r\n                            } else if (prePreparedText.substring(i, i + 1) === ' ' && !startNewString) {\r\n                                //ignore\r\n                            } else {\r\n                                preparedText += prePreparedText.substring(i, i + 1);\r\n                            }\r\n                        }\r\n                        while (preparedText !== '') {\r\n                            let findNextValue = preparedText.search('=');\r\n                            if (findNextValue !== -1) {\r\n                                let variableName = preparedText.substring(0, findNextValue);\r\n                                let firstQuote = preparedText.search('\"');\r\n                                let secondQuote = (firstQuote + 1) + preparedText.substring(firstQuote + 1, preparedText.length).search('\"');\r\n                                let variableValue = preparedText.substring(firstQuote + 1, secondQuote);\r\n\r\n                                this.loadDataFromXMLToTable(parseSectors[parseSectors.length - 1], variableName, variableValue, parseSectors[parseSectors.length - 1]);\r\n\r\n                                preparedText = preparedText.substring(secondQuote + 1, preparedText.length);\r\n                            } else if (preparedText.search('/>') !== -1) {\r\n                                if (parseSectors[parseSectors.length - 1] === 'attack') {\r\n                                    this.getAttacks().addToAttacks();\r\n                                    this.getAttacks().setDefaultTableValue();\r\n                                } else if (parseSectors[parseSectors.length - 1] === 'defense') {\r\n                                    this.getDefenses().addToDefenses();\r\n                                    this.getDefenses().setDefaultTableValue();\r\n                                } else if (parseSectors[parseSectors.length - 1] === 'summon') {\r\n                                    this.getSummons().addToSummons();\r\n                                    this.getSummons().setDefaultTableValue();\r\n                                } else if (parseSectors[parseSectors.length - 1] === 'voice') {\r\n                                    this.getVoices().addToVoices();\r\n                                    this.getVoices().setDefaultTableValue();\r\n                                } else if (parseSectors[parseSectors.length - 1] === 'item') {\r\n                                    this.getLoot().addToLoot();\r\n                                    this.getLoot().setDefaultTableValue();\r\n                                }\r\n                                parseSectors = parseSectors.splice(0, parseSectors.length - 1);\r\n                                break;\r\n                            } else if (preparedText.search('>') !== -1) {\r\n                                break;\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (endSign) {\r\n                            parseSectors.push(line.substring(startSign + 1, endSign - 1));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    getLineMonstersXML = () => {\r\n        return '<monster name=\"' + this.getMonster().getName() + '\"  file=\"' + this.getIO().getName() + '.xml' + '\"  />';\r\n    }\r\n\r\n    loadValuesFromLocalStorage = () => {\r\n        this.getMonster().loadValuesFromLocalStorage();\r\n        this.getFlags().loadValuesFromLocalStorage();\r\n        this.getScript().loadValuesFromLocalStorage();\r\n        this.getAttacks().loadValuesFromLocalStorage();\r\n        this.getDefenses().loadValuesFromLocalStorage();\r\n        this.getElements().loadValuesFromLocalStorage();\r\n        this.getImmunities().loadValuesFromLocalStorage();\r\n        this.getSummons().loadValuesFromLocalStorage();\r\n        this.getVoices().loadValuesFromLocalStorage();\r\n        this.getLoot().loadValuesFromLocalStorage();\r\n        this.getIO().loadValuesFromLocalStorage();\r\n        //Update file name\r\n        if (!this.getIO().getOwnNameCheckbox()) {\r\n            this.getIO().setName(this.getMonster().getName());\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppData;\r\n","import React from 'react';\n\nconst monsterMakerMenuItemStyleLiDis = {\n  float: 'left',\n  marginTop: \"6px\",\n  marginBottom: \"6px\",\n  marginLeft: \"6px\"\n};\n\nconst monsterMakerMenuItemStyleLiAct = {\n  float: 'left',\n  marginTop: \"6px\",\n  marginBottom: \"6px\",\n  marginLeft: \"6px\"\n};\n\nconst monsterMakerMenuItemStyleSpanDis = {\n  textAlign: 'center',\n  padding: '5px 5px',\n  align: 'center'\n};\n\nconst monsterMakerMenuItemStyleSpanAct = {\n  textAlign: 'center',\n  boxShadow: '0 0 0 2px #38B0DE',\n  borderRadius: \"20px\",\n  padding: '5px 5px',\n  align: 'center'\n};\n\nconst monsterMakerMenuItemStyleUl = {\n  listStyleType: 'none',\n  paddingInlineStart: '0px',\n  textAlign: 'center',\n  padding: '0px 10px'\n}\n\nclass MonsterMakerMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {hover: false};\n  }\n\n  toggleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  }\n\n  changeClick = () => {\n    this.props.onClick(this.props.name);\n  }\n\n  render() {\n    var myclassName = this.props.active ? 'active' : '';\n    \n    var menuItemColorHover;\n    if (!this.state.hover) {\n      menuItemColorHover = {color: \"#a1a1a1\"};\n    } else {\n      menuItemColorHover = {color: \"#FFFFFF\"};\n    }\n\n    return (\n      <li style={this.props.active ? monsterMakerMenuItemStyleLiAct : monsterMakerMenuItemStyleLiDis} onClick={this.changeClick} className={myclassName}>\n        <ul style={monsterMakerMenuItemStyleUl} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} >\n          <li>\n            <span className=\"ra-stack ra-lg\" style={this.props.active ? monsterMakerMenuItemStyleSpanAct : monsterMakerMenuItemStyleSpanDis} >\n              <i className={\"ra \" + this.props.icon + \" ra-stack-2x\"} style={menuItemColorHover} ></i>\n            </span>\n          </li>\n          <li style={menuItemColorHover} >\n            {this.props.name}\n          </li>\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default MonsterMakerMenuItem;\n","import React from 'react';\n\nconst MonsterMakerLabelStyle = {\n  fontSize: '20px'\n};\n\nclass MonsterMakerLabel extends React.Component {\n  render() {\n    return (\n      <div style={{...MonsterMakerLabelStyle, ...this.props.style}}>\n        <label style={this.props.disabled ? {opacity: 0.5} : null}>\n          {this.props.text}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerLabel;\n","import React from 'react';\n\n/*const MonsterMakerInputStyle = {\n  fontSize: '20px'\n};*/\n\nclass MonsterMakerInput extends React.Component {\n  render() {\n    const style = this.props.disabled ? {...this.props.style, ...{opacity: 0.5}} : this.props.style;\n\n    return (\n      <div>\n        <input\n          type={this.props.type}\n          name=\"name\"\n          defaultValue={this.props.defaultValue}\n          defaultChecked={this.props.defaultChecked}\n          style={style}\n          onChange={this.props.onChange}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          value={this.props.value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerInput;\n","import React from 'react';\n\nclass MonsterMakerInputSelect extends React.Component {\n  render() {\n    var rows = [];\n\n    this.props.selectItems.forEach(function (item, i) {\n      rows.push(<option value={item} key={i}>{item}</option>);\n    });\n    \n\n    return (\n      <div>\n        <select\n          style={ this.props.style }\n          defaultValue={ this.props.defaultValue }\n          value={ this.props.value }\n          onChange={ this.props.onChange }\n          disabled={ this.props.disabled }\n        >\n          {rows}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerInputSelect;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerInputSelect from './MonsterMakerInputSelect.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nvar raceSelect = [\"blood\", \"venom\", \"undead\", \"fire\", \"energy\"];\nvar skullSelect = [\"none\", \"yellow\", \"black\", \"red\", \"white\", \"orange\", \"green\"];\n\nclass MonsterMakerTabMonster extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      strategyValue: this.props.appData.getMonster().getAttack(),\n      radioLookType: \"0\",\n      strategyCheckbox: false\n    };\n  }\n\n  onChangeName = (event) => {\n    this.props.appData.getMonster().setName(event.target.value);\n  }\n  \n  onChangeNameDescription = (event) => {\n    this.props.appData.getMonster().setNameDescription(event.target.value);\n  }\n\n  onChangeRace = (event) => {\n    this.props.appData.getMonster().setRace(event.target.value);\n  }\n\n  onChangeExperience = (event) => {\n    this.props.appData.getMonster().setExperience(event.target.value);\n  }\n\n  onChangeSkull = (event) => {\n    this.props.appData.getMonster().setSkull(event.target.value);\n  }\n\n  onChangeSpeed = (event) => {\n    this.props.appData.getMonster().setSpeed(event.target.value);\n  }\n\n  onChangeManaCost = (event) => {\n    this.props.appData.getMonster().setManaCost(event.target.value);\n  }\n\n  onChangeHealthMin = (event) => {\n    this.props.appData.getMonster().setHealthMin(event.target.value);\n  }\n\n  onChangeHealthMax = (event) => {\n    this.props.appData.getMonster().setHealthMax(event.target.value);\n  }\n\n  onChangeLookTypeValue = (event) => {\n    this.props.appData.getMonster().setLookTypeValue(event.target.value);\n  }\n\n  onChangeHead = (event) => {\n    this.props.appData.getMonster().setHead(event.target.value);\n  }\n\n  onChangeBody = (event) => {\n    this.props.appData.getMonster().setBody(event.target.value);\n  }\n\n  onChangeLegs = (event) => {\n    this.props.appData.getMonster().setLegs(event.target.value);\n  }\n\n  onChangeFeet = (event) => {\n    this.props.appData.getMonster().setFeet(event.target.value);\n  }\n\n  onChangeAddons = (event) => {\n    this.props.appData.getMonster().setAddons(event.target.value);\n  }\n\n  onChangeMount = (event) => {\n    this.props.appData.getMonster().setMount(event.target.value);\n  }\n\n  onChangeCorpse = (event) => {\n    this.props.appData.getMonster().setCorpse(event.target.value);\n  }\n\n  onChangeTargetchangeInterval = (event) => {\n    this.props.appData.getMonster().setTargetchangeInterval(event.target.value);\n  }\n\n  onChangeTargetchangeChance = (event) => {\n    this.props.appData.getMonster().setTargetchangeChance(event.target.value);\n  }\n\n  onChangeStrategy = (event) => {\n    this.props.appData.getMonster().setStrategy(!this.props.appData.getMonster().getStrategy());\n    this.setState({ strategyCheckbox: this.props.appData.getMonster().getStrategy() });\n  }\n\n  onChangeStrategyValue = (event) => {\n    this.setState({ strategyValue: event.target.value });\n    this.props.appData.getMonster().setAttack(event.target.value);\n    this.props.appData.getMonster().setDefense(100 - event.target.value);\n  }\n\n  onChangeLookType = (event) => {\n    this.setState({ radioLookType: event.currentTarget.value });\n    this.props.appData.getMonster().setLookType(event.currentTarget.value);\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Monster name:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  defaultValue={this.props.appData.getMonster().getName()}\n                  onChange={this.onChangeName}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Name description:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  defaultValue={this.props.appData.getMonster().getNameDescription()}\n                  onChange={this.onChangeNameDescription}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Race:\" />\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={raceSelect}\n                  defaultValue={this.props.appData.getMonster().getRace()}\n                  onChange={this.onChangeRace}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Experience:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getExperience()}\n                  onChange={this.onChangeExperience}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Skull:\" />\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={skullSelect}\n                  defaultValue={this.props.appData.getMonster().getSkull()}\n                  onChange={this.onChangeSkull}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Speed:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getSpeed()}\n                  onChange={this.onChangeSpeed}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Mana cost:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getManaCost()}\n                  onChange={this.onChangeManaCost}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n                <td>\n                  <MonsterMakerLabel text=\"Health:\" />\n                </td>\n                <td>\n                  <MonsterMakerLabel text=\"Now:\" />\n                </td>\n                <td>\n                  <MonsterMakerInput\n                    type=\"number\"\n                    min=\"0\"\n                    defaultValue={this.props.appData.getMonster().getHealthNow()}\n                    onChange={this.onChangeHealthNow}\n                  />\n                </td>\n                <td>\n                  <MonsterMakerLabel text=\"Max:\" />\n                </td>\n                <td>\n                  <MonsterMakerInput\n                    type=\"number\"\n                    min=\"0\"\n                    defaultValue={this.props.appData.getMonster().getHealthMax()}\n                    onChange={this.onChangeHealthMax}\n                  />\n                </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"radio\"\n                  onChange={this.onChangeLookType}\n                  value=\"0\"\n                  checked={this.props.appData.getMonster().getLookType() === \"0\"}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Look Type\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"radio\"\n                  onChange={this.onChangeLookType}\n                  value=\"1\"\n                  checked={this.props.appData.getMonster().getLookType() === \"1\"}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Look TypeEx\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  defaultValue={this.props.appData.getMonster().getLookTypeValue()}\n                  onChange={this.onChangeLookTypeValue}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Head:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"132\"\n                  defaultValue={this.props.appData.getMonster().getHead()}\n                  onChange={this.onChangeHead}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Body:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"132\"\n                  defaultValue={this.props.appData.getMonster().getBody()}\n                  onChange={this.onChangeBody}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Legs:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"132\"\n                  defaultValue={this.props.appData.getMonster().getLegs()}\n                  onChange={this.onChangeLegs}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Feet:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"132\"\n                  defaultValue={this.props.appData.getMonster().getFeet()}\n                  onChange={this.onChangeFeet}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Addons:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"3\"\n                  defaultValue={this.props.appData.getMonster().getAddons()}\n                  onChange={this.onChangeAddons}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Mount:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getMount()}\n                  onChange={this.onChangeMount}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Corpse:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getCorpse()}\n                  onChange={this.onChangeCorpse}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Targetchange:\" />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Interval:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getTargetchangeInterval()}\n                  onChange={this.onChangeTargetchangeInterval}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Chance:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  defaultValue={this.props.appData.getMonster().getTargetchangeChance()}\n                  onChange={this.onChangeTargetchangeChance}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeStrategy}\n                  defaultChecked={this.props.appData.getMonster().getStrategy()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Strategy\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table style={{width: \"100%\", padding: 10}}>\n          <tbody>\n            <tr>\n              <td style={{display: \"initial\"}}>\n                <MonsterMakerLabel\n                  text={\"Attack: \" + this.state.strategyValue}\n                  style={{float: \"left\"}}\n                  disabled={!this.props.appData.getMonster().getStrategy()}\n                />\n                <MonsterMakerLabel\n                  text={\"Defense: \" + (100 - this.state.strategyValue)}\n                  style={{float: \"right\"}}\n                  disabled={!this.props.appData.getMonster().getStrategy()}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{width: \"100%\"}}\n                  defaultValue={this.props.appData.getMonster().getAttack()}\n                  onChange={this.onChangeStrategyValue}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  disabled={!this.state.strategyCheckbox}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabMonster;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabFlags extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      staticattack: this.props.appData.getFlags().getStaticattack(),\n      runonhealth: this.props.appData.getFlags().getRunonhealth(),\n      lightcolorChange: this.props.appData.getFlags().getLightcolor() === \"0\" ? false : true\n    };\n  }\n\n  onChangeSummonable = (event) => {\n    this.props.appData.getFlags().setSummonable(!this.props.appData.getFlags().getSummonable());\n  }\n\n  onChangeAttackable = (event) => {\n    this.props.appData.getFlags().setAttackable(!this.props.appData.getFlags().getAttackable());\n  }\n\n  onChangeHostile = (event) => {\n    this.props.appData.getFlags().setHostile(!this.props.appData.getFlags().getHostile());\n  }\n\n  onChangeIllusionable = (event) => {\n    this.props.appData.getFlags().setIllusionable(!this.props.appData.getFlags().getIllusionable());\n  }\n\n  onChangeConvinceable = (event) => {\n    this.props.appData.getFlags().setConvinceable(!this.props.appData.getFlags().getConvinceable());\n  }\n\n  onChangePushable = (event) => {\n    this.props.appData.getFlags().setPushable(!this.props.appData.getFlags().getPushable());\n  }\n\n  onChangeCanpushitems = (event) => {\n    this.props.appData.getFlags().setCanpushitems(!this.props.appData.getFlags().getCanpushitems());\n  }\n\n  onChangeCanpushcreatures = (event) => {\n    this.props.appData.getFlags().setCanpushcreatures(!this.props.appData.getFlags().getCanpushcreatures());\n  }\n\n  onChangeTargetdistance = (event) => {\n    this.props.appData.getFlags().setTargetdistance(event.target.value);\n  }\n\n  onChangeStaticattack = (event) => {\n    this.setState({ staticattack: event.target.value });\n    this.props.appData.getFlags().setStaticattack(event.target.value);\n  }\n\n  onChangeHidehealth = (event) => {\n    this.props.appData.getFlags().setHidehealth(!this.props.appData.getFlags().getHidehealth());\n  }\n\n  onChangeLightcolor = (event) => {\n    if (event.target.value === \"0\") {\n      this.setState({ lightcolorChange: false });\n    } else {\n      this.setState({ lightcolorChange: true });\n    }\n    this.props.appData.getFlags().setLightcolor(event.target.value);\n  }\n\n  onChangeLightlevel = (event) => {\n    this.props.appData.getFlags().setLightlevel(event.target.value);\n  }\n\n  onChangeRunonhealth = (event) => {\n    this.setState({ runonhealth: event.target.value });\n    this.props.appData.getFlags().setRunonhealth(event.target.value);\n  }\n\n  render() {\n    return (\n      <div style={tabStyle}>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeSummonable}\n                  defaultChecked={this.props.appData.getFlags().getSummonable()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Summonable\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeAttackable}\n                  defaultChecked={this.props.appData.getFlags().getAttackable()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Attackable\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeHostile}\n                  defaultChecked={this.props.appData.getFlags().getHostile()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Hostile\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeIllusionable}\n                  defaultChecked={this.props.appData.getFlags().getIllusionable()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Illusionable\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeConvinceable}\n                  defaultChecked={this.props.appData.getFlags().getConvinceable()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Convinceable\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangePushable}\n                  defaultChecked={this.props.appData.getFlags().getPushable()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Pushable\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeCanpushitems}\n                  defaultChecked={this.props.appData.getFlags().getCanpushitems()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Canpushitems\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeCanpushcreatures}\n                  defaultChecked={this.props.appData.getFlags().getCanpushcreatures()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Canpushcreatures\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Targetdistance:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"20\"\n                  defaultValue={this.props.appData.getFlags().getTargetdistance()}\n                  onChange={this.onChangeTargetdistance}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text={\"Staticattack: \" + this.state.staticattack}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table style={{width: \"100%\", padding: 10}}>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{width: \"100%\"}}\n                  defaultValue={this.props.appData.getFlags().getStaticattack()}\n                  onChange={this.onChangeStaticattack}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeHidehealth}\n                  defaultChecked={this.props.appData.getFlags().getHidehealth()}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Hidehealth\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Lightcolor:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={this.props.appData.getFlags().getLightcolor()}\n                  onChange={this.onChangeLightcolor}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Lightlevel:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"100\"\n                  defaultValue={this.props.appData.getFlags().getLightlevel()}\n                  onChange={this.onChangeLightlevel}\n                  disabled={!this.state.lightcolorChange}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table style={{width: \"100%\", padding: 10}}>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text={\"Runonhealth: \" + this.state.runonhealth}\n                  //style={{float: \"right\"}}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{width: \"100%\"}}\n                  defaultValue={this.props.appData.getFlags().getRunonhealth()}\n                  onChange={this.onChangeRunonhealth}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabFlags;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabScript extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      check: this.props.appData.getScript().getChecked(),\n    };\n  }\n\n  onChangeChecked = (event) => {\n    this.props.appData.getScript().setChecked(!this.props.appData.getScript().getChecked());\n    this.setState({ check: this.props.appData.getScript().getChecked() });\n  }\n\n  onChangeScript = (event) => {\n    this.props.appData.getScript().setScript(event.target.value);\n  }\n\n  render() {\n    return (\n      <div style={tabStyle}>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  defaultChecked={this.props.appData.getScript().getChecked()}\n                  onChange={this.onChangeChecked}\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Script\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Script\"\n                  disabled={!this.props.appData.getScript().getChecked()}\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  defaultValue={this.props.appData.getScript().getScript()}\n                  onChange={this.onChangeScript}\n                  disabled={!this.props.appData.getScript().getChecked()}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabScript;\n","import React from 'react';\r\n\r\nconst trStyle = {\r\n  backgroundColor: '#262626',\r\n  whiteSpace: 'pre'\r\n  //backgroundColor: '#555555'\r\n}\r\n\r\nconst trStyleHover = {\r\n  backgroundColor: '#555555',\r\n  whiteSpace: 'pre'\r\n}\r\n\r\nconst selectedItem = {\r\n  color: 'gold'\r\n}\r\n\r\nclass MonsterMakerItemsTableTr extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = { hover: false };\r\n  }\r\n  \r\n  onMouseEnter = () => {\r\n    this.setState({ hover: true });\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({ hover: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr style = { !this.state.hover ? trStyle : trStyleHover } onMouseEnter = { this.onMouseEnter } onMouseLeave = { this.onMouseLeave } onClick = { this.props.changeActiveItem } >\r\n        <td key = { this.props.index } id = { this.props.index } style = { this.props.activeItem !== null && Number(this.props.activeItem) === this.props.index ? selectedItem : null }>\r\n          { this.props.variable }\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MonsterMakerItemsTableTr;\r\n","import React from 'react';\r\n\r\nimport MonsterMakerItemsTableTr from './MonsterMakerItemsTableTr.js';\r\n\r\nconst containerStyle = {\r\n  maxHeight: 250,\r\n  width: '100%',\r\n  padding: 5,\r\n  overflow: 'auto'\r\n}\r\n\r\nconst tableStyle = {\r\n  width: '100%',\r\n  textAlign: 'center',\r\n  backgroundColor: '#000000',\r\n  color: '#FFFFFF'\r\n}\r\n\r\nclass MonsterMakerItemsTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={ containerStyle } >\r\n        <table style={ tableStyle } >\r\n          <tbody>\r\n            {\r\n              this.props.data.map((variable, index) => {\r\n                return (\r\n                  <MonsterMakerItemsTableTr\r\n                    variable = { variable }\r\n                    index = { index }\r\n                    changeActiveItem = { this.props.changeActiveItem }\r\n                    activeItem = { this.props.activeItem }\r\n                  />\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonsterMakerItemsTable;\r\n","import React from 'react';\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nconst buttonStyle = {\r\n  width: 40,\r\n  height: 40,\r\n  padding: 0,\r\n  backgroundColor: '#000000',\r\n  borderColor: 'rgba(119, 111, 111, 1)',\r\n  borderRadius: 10,\r\n  display: 'inherit',\r\n  marginRight: 2,\r\n  outline: 'none'\r\n}\r\n\r\nconst buttonStyleHover = {\r\n  width: 40,\r\n  height: 40,\r\n  padding: 0,\r\n  backgroundColor: 'rgb(90, 85, 85)',\r\n  borderColor: 'rgba(119, 111, 111, 1)',\r\n  borderRadius: 10,\r\n  display: 'inherit',\r\n  marginRight: 2,\r\n  outline: 'none'\r\n}\r\n\r\nconst iconStyle = {\r\n  color: '#FFFFFF',\r\n  fontSize: 20,\r\n  width: 40,\r\n  height: 40\r\n}\r\n\r\nclass MonsterMakerButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { hover: false };\r\n  }\r\n\r\n  toggleHover = () => {\r\n    this.setState({ hover: !this.state.hover });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <button style={ !this.state.hover ? buttonStyle : buttonStyleHover } onMouseEnter={ this.toggleHover } onMouseLeave={ this.toggleHover } onClick={ this.props.onClick } data-tip={ this.props.tooltip } >\r\n        <i className={ \"ra \" + this.props.icon } style={ iconStyle } ></i>\r\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\"/>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonsterMakerButton;\r\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerInputSelect from './MonsterMakerInputSelect.js';\nimport MonsterMakerItemsTable from './MonsterMakerItemsTable.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nconst areaEffect = [\"redspark\", \"bluebubble\", \"poff\", \"yellowspark\", \"explosionarea\", \"explosion\", \"firearea\", \"yellowbubble\", \"greenbubble\",\n\"blackspark\", \"teleport\", \"energy\", \"blueshimmer\", \"redshimmer\", \"greenshimmer\", \"fire\", \"greenspark\", \"mortarea\", \"greennote\", \"rednote\",\n\"poison\", \"yellownote\", \"purplenote\", \"bluenote\", \"whitenote\", \"bubbles\", \"dice\", \"giftwraps\", \"yellowfirework\", \"redfirework\", \"bluefirework\",\n\"stun\", \"sleep\", \"watercreature\", \"groundshaker\", \"hearts\", \"fireattack\", \"energyarea\", \"smallclouds\", \"holydamage\", \"bigclouds\", \"icearea\",\n\"icetornado\", \"iceattack\", \"stones\", \"smallplants\", \"carniphila\", \"purpleenergy\", \"yellowenergy\", \"holyarea\", \"bigplants\", \"cake\", \"giantice\",\n\"watersplash\", \"plantattack\", \"tutorialarrow\", \"tutorialsquare\", \"mirrorhorizontal\", \"mirrorvertical\", \"skullhorizontal\", \"skullvertical\",\n\"assassin\", \"stepshorizontal\", \"bloodysteps\", \"stepsvertical\", \"yalaharighost\", \"bats\", \"smoke\", \"insects\", \"dragonhead\", \"orcshaman\",\n\"orcshamanfire\", \"thunder\", \"ferumbras\", \"confettihorizontal\", \"confettivertical\", \"blacksmoke\", \"redsmoke\", \"yellowsmoke\", \"greensmoke\",\n\"purplesmoke\"];\n\nconst shootEffect = [\"spear\", \"bolt\", \"arrow\", \"fire\", \"energy\", \"poisonarrow\", \"burstarrow\", \"throwingstar\", \"throwingknife\", \"smallstone\",\n\"death\", \"largerock\", \"snowball\", \"powerbolt\", \"poison\", \"infernalbolt\", \"huntingspear\", \"enchantedspear\", \"redstar\", \"greenstar\", \"royalspear\",\n\"sniperarrow\", \"onyxarrow\", \"piercingbolt\", \"whirlwindsword\", \"whirlwindaxe\", \"whirlwindclub\", \"etherealspear\", \"ice\", \"earth\", \"holy\",\n\"suddendeath\", \"flasharrow\", \"flammingarrow\", \"shiverarrow\", \"energyball\", \"smallice\", \"smallholy\", \"smallearth\", \"eartharrow\", \"explosion\",\n\"cake\", \"tarsalarrow\", \"vortexbolt\", \"prismaticbolt\", \"crystallinearrow\", \"drillbolt\", \"envenomedarrow\", \"gloothspear\", \"simplearrow\"];\n\nclass MonsterMakerTabAttacks extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      attackType: this.props.appData.getAttacks().getType(),\n      elementalType: this.props.appData.getAttacks().getElementalType(),\n      conditionsType: this.props.appData.getAttacks().getConditionsType(),\n      fieldsType: this.props.appData.getAttacks().getFieldsType(),\n      runesType: this.props.appData.getAttacks().getRunesType(),\n      spellsType: this.props.appData.getAttacks().getSpellsType(),\n      otherType: this.props.appData.getAttacks().getOtherType(),\n      min: this.props.appData.getAttacks().getMin(),\n      max: this.props.appData.getAttacks().getMax(),\n      skillChange: this.props.appData.getAttacks().getSkillCheckbox(),\n      skill: this.props.appData.getAttacks().getSkill(),\n      attack: this.props.appData.getAttacks().getAttack(),\n      interval: this.props.appData.getAttacks().getInterval(),\n      chance: this.props.appData.getAttacks().getChance(),\n      lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox(),\n      length: this.props.appData.getAttacks().getLength(),\n      spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox(),\n      spread: this.props.appData.getAttacks().getSpread(),\n      radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox(),\n      radius: this.props.appData.getAttacks().getRadius(),\n      poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox(),\n      poison: this.props.appData.getAttacks().getPoison(),\n      target: this.props.appData.getAttacks().getTarget(),\n      range: this.props.appData.getAttacks().getRange(),\n      areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox(),\n      areaeffect: this.props.appData.getAttacks().getAreaeffect(),\n      shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox(),\n      shooteffect: this.props.appData.getAttacks().getShooteffect(),\n\n      activeItem: this.props.activeItem\n    };\n  }\n\n  //On change states\n\n  onChangeAttackType = (event) => {\n    this.props.appData.getAttacks().setType(event.target.value);\n    this.setState({ attackType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeElementalType = (event) => {\n    this.props.appData.getAttacks().setElementalType(event.target.value);\n    this.setState({ elementalType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexElementalType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeConditionsType = (event) => {\n    this.props.appData.getAttacks().setConditionsType(event.target.value);\n    this.setState({ conditionsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexConditionsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeFieldsType = (event) => {\n    this.props.appData.getAttacks().setFieldsType(event.target.value);\n    this.setState({ fieldsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexFieldsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRunesType = (event) => {\n    this.props.appData.getAttacks().setRunesType(event.target.value);\n    this.setState({ runesType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRunesType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpellsType = (event) => {\n    this.props.appData.getAttacks().setSpellsType(event.target.value);\n    this.setState({ spellsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpellsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeOtherType = (event) => {\n    this.props.appData.getAttacks().setOtherType(event.target.value);\n    this.setState({ otherType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexOtherType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMin = (event) => {\n    this.props.appData.getAttacks().setMin(event.target.value);\n    this.setState({ min: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexMin(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getAttacks().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSkillCheckbox = (event) => {\n    this.props.appData.getAttacks().setSkillCheckbox(!this.props.appData.getAttacks().getSkillCheckbox());\n    this.setState({ skillChange: this.props.appData.getAttacks().getSkillCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSkillCheckbox(this.state.activeItem, this.props.appData.getAttacks().getSkillCheckbox());\n    }\n  }\n\n  onChangeSkill = (event) => {\n    this.props.appData.getAttacks().setSkill(event.target.value);\n    this.setState({ skill: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSkill(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAttack = (event) => {\n    this.props.appData.getAttacks().setAttack(event.target.value);\n    this.setState({ attack: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAttack(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getAttacks().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getAttacks().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeLengthCheckbox = (event) => {\n    this.props.appData.getAttacks().setLengthCheckbox(!this.props.appData.getAttacks().getLengthCheckbox());\n    this.setState({ lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexLengthCheckbox(this.state.activeItem, this.props.appData.getAttacks().getLengthCheckbox());\n    }\n  }\n\n  onChangeLength = (event) => {\n    this.props.appData.getAttacks().setLength(event.target.value);\n    this.setState({ length: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexLength(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpreadCheckbox = (event) => {\n    this.props.appData.getAttacks().setSpreadCheckbox(!this.props.appData.getAttacks().getSpreadCheckbox());\n    this.setState({ spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpreadCheckbox(this.state.activeItem, this.props.appData.getAttacks().getSpreadCheckbox());\n    }\n  }\n\n  onChangeSpread = (event) => {\n    this.props.appData.getAttacks().setSpread(event.target.value);\n    this.setState({ spread: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpread(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRadiusCheckbox = (event) => {\n    this.props.appData.getAttacks().setRadiusCheckbox(!this.props.appData.getAttacks().getRadiusCheckbox());\n    this.setState({ radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRadiusCheckbox(this.state.activeItem, this.props.appData.getAttacks().getRadiusCheckbox());\n    }\n  }\n\n  onChangeRadius = (event) => {\n    this.props.appData.getAttacks().setRadius(event.target.value);\n    this.setState({ radius: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRadius(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangePoisonCheckbox = (event) => {\n    this.props.appData.getAttacks().setPoisonCheckbox(!this.props.appData.getAttacks().getPoisonCheckbox());\n    this.setState({ poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexPoisonCheckbox(this.state.activeItem, this.props.appData.getAttacks().getPoisonCheckbox());\n    }\n  }\n\n  onChangePoison = (event) => {\n    this.props.appData.getAttacks().setPoison(event.target.value);\n    this.setState({ poison: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexPoison(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeTarget = (event) => {\n    this.props.appData.getAttacks().setTarget(!this.props.appData.getAttacks().getTarget());\n    this.setState({ target: this.props.appData.getAttacks().getTarget() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexTarget(this.state.activeItem, this.props.appData.getAttacks().getTarget());\n    }\n  }\n\n  onChangeRange = (event) => {\n    this.props.appData.getAttacks().setRange(event.target.value);\n    this.setState({ range: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRange(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAreaeffectCheckbox = (event) => {\n    this.props.appData.getAttacks().setAreaeffectCheckbox(!this.props.appData.getAttacks().getAreaeffectCheckbox());\n    this.setState({ areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAreaeffectCheckbox(this.state.activeItem, this.props.appData.getAttacks().getAreaeffectCheckbox());\n    }\n  }\n\n  onChangeAreaeffect = (event) => {\n    this.props.appData.getAttacks().setAreaeffect(event.target.value);\n    this.setState({ areaeffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAreaeffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeShooteffectCheckbox = (event) => {\n    this.props.appData.getAttacks().setShooteffectCheckbox(!this.props.appData.getAttacks().getShooteffectCheckbox());\n    this.setState({ shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexShooteffectCheckbox(this.state.activeItem, this.props.appData.getAttacks().getShooteffectCheckbox());\n    }\n  }\n\n  onChangeShooteffect = (event) => {\n    this.props.appData.getAttacks().setShooteffect(event.target.value);\n    this.setState({ shooteffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexShooteffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getAttacks().addToAttacks();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().deleteFromAttacks(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n\n  refreshItems = () => {\n    this.setState({\n      attackType: this.props.appData.getAttacks().getType(),\n      elementalType: this.props.appData.getAttacks().getElementalType(),\n      conditionsType: this.props.appData.getAttacks().getConditionsType(),\n      fieldsType: this.props.appData.getAttacks().getFieldsType(),\n      runesType: this.props.appData.getAttacks().getRunesType(),\n      spellsType: this.props.appData.getAttacks().getSpellsType(),\n      otherType: this.props.appData.getAttacks().getOtherType(),\n      min: this.props.appData.getAttacks().getMin(),\n      max: this.props.appData.getAttacks().getMax(),\n      skillChange: this.props.appData.getAttacks().getSkillCheckbox(),\n      skill: this.props.appData.getAttacks().getSkill(),\n      attack: this.props.appData.getAttacks().getAttack(),\n      interval: this.props.appData.getAttacks().getInterval(),\n      chance: this.props.appData.getAttacks().getChance(),\n      lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox(),\n      length: this.props.appData.getAttacks().getLength(),\n      spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox(),\n      spread: this.props.appData.getAttacks().getSpread(),\n      radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox(),\n      radius: this.props.appData.getAttacks().getRadius(),\n      poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox(),\n      poison: this.props.appData.getAttacks().getPoison(),\n      target: this.props.appData.getAttacks().getTarget(),\n      range: this.props.appData.getAttacks().getRange(),\n      areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox(),\n      areaeffect: this.props.appData.getAttacks().getAreaeffect(),\n      shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox(),\n      shooteffect: this.props.appData.getAttacks().getShooteffect()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getAttacks().showAttacks(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getAttacks().getAllXMLattacks() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Name\" />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Type:\" />\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={ this.props.appData.getAttacks().getAttackTypeArray() }\n                  value={ this.state.attackType }\n                  onChange={ this.onChangeAttackType }\n                />\n              </td>\n              <td>\n                {\n                  this.state.attackType === \"elemental\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getElementalTypeArray() }\n                    value={ this.state.elementalType }\n                    onChange={ this.onChangeElementalType }\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"conditions\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getConditionsTypeArray() }\n                    value={ this.state.conditionsType }\n                    onChange={ this.onChangeConditionsType }\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"fields\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getFieldsTypeArray() }\n                    value={ this.state.fieldsType }\n                    onChange={ this.onChangeFieldsType }\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"runes\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getRunesTypeArray() }\n                    value={ this.state.runesType }\n                    onChange={ this.onChangeRunesType }\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"spells\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getSpellsTypeArray() }\n                    value={ this.state.spellsType }\n                    onChange={ this.onChangeSpellsType }\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"other\" ?\n                  <MonsterMakerInput\n                    type=\"text\"\n                    value={ this.state.otherType }\n                    onChange={ this.onChangeOtherType }\n                  /> : null\n                }\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Min\"\n                  disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.min }\n                  onChange={ this.onChangeMin }\n                  disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Max\"\n                  disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.max }\n                  onChange={ this.onChangeMax }\n                  disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                />\n              </td>\n              {\n                this.state.attackType === \"melee\" ?\n                <td>\n                  <MonsterMakerInput\n                    type=\"checkbox\"\n                    value={ this.state.skillChange }\n                    onChange={ this.onChangeSkillCheckbox }\n                  />\n                </td> : null\n              }\n              {\n                this.state.attackType === \"melee\" ?\n                <td>\n                  <MonsterMakerLabel\n                    text=\"Skill\"\n                  />\n                </td> : null\n              }\n              {\n                this.state.attackType === \"melee\" ?\n                <td>\n                  <MonsterMakerInput\n                    type=\"number\"\n                    value={ this.state.skill }\n                    onChange={ this.onChangeSkill }\n                    disabled={ !this.state.skillChange }\n                  />\n                </td> : null\n              }\n              {\n                this.state.attackType === \"melee\" ?\n                <td>\n                  <MonsterMakerLabel\n                    text=\"Attack\"\n                    disabled={ !this.state.skillChange }\n                  />\n                </td> : null\n              }\n              {\n                this.state.attackType === \"melee\" ?\n                <td>\n                  <MonsterMakerInput\n                    type=\"number\"\n                    value={ this.state.attack }\n                    onChange={ this.onChangeAttack }\n                    disabled={ !this.state.skillChange }\n                  />\n                </td> : null\n              }\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Interval\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.interval }\n                  min=\"1000\"\n                  onChange={ this.onChangeInterval }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Chance\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.chance }\n                  min=\"1\"\n                  onChange={ this.onChangeChance }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.lengthCheckbox }\n                          onChange={ this.onChangeLengthCheckbox }\n                          disabled={ this.state.radiusCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel\n                          text=\"Length\"\n                          disabled={ this.state.radiusCheckbox }\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.length }\n                  min=\"0\"\n                  max=\"11\"\n                  onChange={ this.onChangeLength }\n                  disabled={ !this.state.lengthCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.spreadCheckbox }\n                          onChange={ this.onChangeSpreadCheckbox }\n                          disabled={ this.state.radiusCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel\n                          text=\"Spread\"\n                          disabled={ this.state.radiusCheckbox }\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.spread }\n                  min=\"0\"\n                  max=\"3\"\n                  onChange={ this.onChangeSpread }\n                  disabled={ !this.state.spreadCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.radiusCheckbox }\n                          onChange={ this.onChangeRadiusCheckbox }\n                          disabled={ this.state.lengthCheckbox || this.state.spreadCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel\n                          text=\"Radius\"\n                          disabled={ this.state.lengthCheckbox || this.state.spreadCheckbox}\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.radius }\n                  min=\"1\"\n                  max=\"9\"\n                  onChange={ this.onChangeRadius }\n                  disabled={ !this.state.radiusCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.poisonCheckbox }\n                          onChange={ this.onChangePoisonCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Poison\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.poison }\n                  min=\"1\"\n                  onChange={ this.onChangePoison }\n                  disabled={ !this.state.poisonCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.target }\n                          onChange={ this.onChangeTarget }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Target\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Range\"\n                  disabled={ !this.state.target }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.range }\n                  min=\"1\"\n                  max=\"12\"\n                  onChange={ this.onChangeRange }\n                  disabled={ !this.state.target }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.areaeffectCheckbox }\n                          onChange={ this.onChangeAreaeffectCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Area Effect\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                    selectItems={ areaEffect }\n                    value={ this.state.areaeffect }\n                    onChange={ this.onChangeAreaeffect }\n                    disabled={ !this.state.areaeffectCheckbox }\n                  />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.shooteffectCheckbox }\n                          onChange={ this.onChangeShooteffectCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Shoot Effect\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                    selectItems={ shootEffect }\n                    value={ this.state.shooteffect }\n                    onChange={ this.onChangeShooteffect }\n                    disabled={ !this.state.shooteffectCheckbox }\n                  />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabAttacks;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerInputSelect from './MonsterMakerInputSelect.js';\nimport MonsterMakerItemsTable from './MonsterMakerItemsTable.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nconst defenseName = [\"healing\", \"speed\", \"invisible\"];\nconst areaEffect = [\"redspark\", \"bluebubble\", \"poff\", \"yellowspark\", \"explosionarea\", \"explosion\", \"firearea\", \"yellowbubble\", \"greenbubble\",\n\"blackspark\", \"teleport\", \"energy\", \"blueshimmer\", \"redshimmer\", \"greenshimmer\", \"fire\", \"greenspark\", \"mortarea\", \"greennote\", \"rednote\",\n\"poison\", \"yellownote\", \"purplenote\", \"bluenote\", \"whitenote\", \"bubbles\", \"dice\", \"giftwraps\", \"yellowfirework\", \"redfirework\", \"bluefirework\",\n\"stun\", \"sleep\", \"watercreature\", \"groundshaker\", \"hearts\", \"fireattack\", \"energyarea\", \"smallclouds\", \"holydamage\", \"bigclouds\", \"icearea\",\n\"icetornado\", \"iceattack\", \"stones\", \"smallplants\", \"carniphila\", \"purpleenergy\", \"yellowenergy\", \"holyarea\", \"bigplants\", \"cake\", \"giantice\",\n\"watersplash\", \"plantattack\", \"tutorialarrow\", \"tutorialsquare\", \"mirrorhorizontal\", \"mirrorvertical\", \"skullhorizontal\", \"skullvertical\",\n\"assassin\", \"stepshorizontal\", \"bloodysteps\", \"stepsvertical\", \"yalaharighost\", \"bats\", \"smoke\", \"insects\", \"dragonhead\", \"orcshaman\",\n\"orcshamanfire\", \"thunder\", \"ferumbras\", \"confettihorizontal\", \"confettivertical\", \"blacksmoke\", \"redsmoke\", \"yellowsmoke\", \"greensmoke\",\n\"purplesmoke\"];\n\nclass MonsterMakerTabDefenses extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      armor: this.props.appData.getDefenses().getArmor(),\n      defense: this.props.appData.getDefenses().getDefense(),\n\n      defenseName: this.props.appData.getDefenses().getDefenseName(),\n      interval: this.props.appData.getDefenses().getInterval(),\n      chance: this.props.appData.getDefenses().getChance(),\n      min: this.props.appData.getDefenses().getMin(),\n      max: this.props.appData.getDefenses().getMax(),\n      radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox(),\n      radius: this.props.appData.getDefenses().getRadius(),\n      areaeffect: this.props.appData.getDefenses().getAreaeffect(),\n      duration: this.props.appData.getDefenses().getDuration(),\n      speedChange: this.props.appData.getDefenses().getSpeedChange(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeArmor = (event) => {\n    this.props.appData.getDefenses().setArmor(event.target.value);\n    this.setState({ armor: event.target.value });\n  }\n\n  onChangeDefense = (event) => {\n    this.props.appData.getDefenses().setDefense(event.target.value);\n    this.setState({ defense: event.target.value });\n  }\n\n  onChangeDefenseName = (event) => {\n    this.props.appData.getDefenses().setDefenseName(event.target.value);\n    this.setState({ defenseName: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexDefenseName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getDefenses().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getDefenses().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMin = (event) => {\n    this.props.appData.getDefenses().setMin(event.target.value);\n    this.setState({ min: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexMin(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getDefenses().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRadiusCheckbox = (event) => {\n    this.props.appData.getDefenses().setRadiusCheckbox(!this.props.appData.getDefenses().getRadiusCheckbox());\n    this.setState({ radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexRadiusCheckbox(this.state.activeItem, this.props.appData.getDefenses().getRadiusCheckbox());\n    }\n  }\n\n  onChangeRadius = (event) => {\n    this.props.appData.getDefenses().setRadius(event.target.value);\n    this.setState({ radius: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexRadius(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAreaeffect = (event) => {\n    this.props.appData.getDefenses().setAreaeffect(event.target.value);\n    this.setState({ areaeffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexAreaeffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeDuration = (event) => {\n    this.props.appData.getDefenses().setDuration(event.target.value);\n    this.setState({ duration: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexDuration(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpeedChange = (event) => {\n    this.props.appData.getDefenses().setSpeedChange(event.target.value);\n    this.setState({ speedChange: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexSpeedChange(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getDefenses().addToDefenses();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().deleteFromDefenses(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      defenseName: this.props.appData.getDefenses().getDefenseName(),\n      interval: this.props.appData.getDefenses().getInterval(),\n      chance: this.props.appData.getDefenses().getChance(),\n      min: this.props.appData.getDefenses().getMin(),\n      max: this.props.appData.getDefenses().getMax(),\n      radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox(),\n      radius: this.props.appData.getDefenses().getRadius(),\n      areaeffect: this.props.appData.getDefenses().getAreaeffect(),\n      duration: this.props.appData.getDefenses().getDuration(),\n      speedChange: this.props.appData.getDefenses().getSpeedChange()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getDefenses().showDefenses(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Armor:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  value={ this.state.armor }\n                  onChange={ this.onChangeArmor }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Defense:\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  value={ this.state.defense }\n                  onChange={ this.onChangeDefense }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getDefenses().getAllXMLdefenses() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Defense name\" />\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={ defenseName }\n                  value={ this.state.defenseName }\n                  onChange={ this.onChangeDefenseName }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Interval\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.interval }\n                  min=\"1000\"\n                  onChange={ this.onChangeInterval }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Chance\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.chance }\n                  min=\"1\"\n                  onChange={ this.onChangeChance }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Min\"\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  value={ this.state.min }\n                  onChange={ this.onChangeMin }\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Max\"\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  min=\"1\"\n                  value={ this.state.max }\n                  onChange={ this.onChangeMax }\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  checked={ this.state.radiusCheckbox }\n                  onChange={ this.onChangeRadiusCheckbox }\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Radius\"\n                  disabled={ this.state.defenseName !== 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.radius }\n                  min=\"1\"\n                  max=\"9\"\n                  onChange={ this.onChangeRadius }\n                  disabled={ this.state.defenseName !== 'healing' || !this.state.radiusCheckbox }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Area Effect\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={ areaEffect }\n                  value={ this.state.areaeffect }\n                  onChange={ this.onChangeAreaeffect }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Duration\"\n                  disabled={ this.state.defenseName === 'healing' }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.duration }\n                  min=\"1\"\n                  onChange={ this.onChangeDuration }\n                  disabled={ this.state.defenseName === 'healing' }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Speed change\"\n                  disabled={ this.state.defenseName !== 'speed' }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.speedChange }\n                  min=\"1\"\n                  onChange={ this.onChangeSpeedChange }\n                  disabled={ this.state.defenseName !== 'speed' }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabDefenses;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabElements extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      holy: this.props.appData.getElements().getHoly(),\n      death: this.props.appData.getElements().getDeath(),\n      ice: this.props.appData.getElements().getIce(),\n      fire: this.props.appData.getElements().getFire(),\n      earth: this.props.appData.getElements().getEarth(),\n      energy: this.props.appData.getElements().getEnergy(),\n      physical: this.props.appData.getElements().getPhysical(),\n      lifeDrain: this.props.appData.getElements().getLifeDrain(),\n      drown: this.props.appData.getElements().getDrown()\n    };\n  }\n\n  onChangeHoly = (event) => {\n    this.setState({ holy: event.target.value });\n    this.props.appData.getElements().setHoly(event.target.value);\n  }\n  \n  onChangeDeath = (event) => {\n    this.setState({ death: event.target.value });\n    this.props.appData.getElements().setDeath(event.target.value);\n  }\n  \n  onChangeIce = (event) => {\n    this.setState({ ice: event.target.value });\n    this.props.appData.getElements().setIce(event.target.value);\n  }\n  \n  onChangeFire = (event) => {\n    this.setState({ fire: event.target.value });\n    this.props.appData.getElements().setFire(event.target.value);\n  }\n  \n  onChangeEarth = (event) => {\n    this.setState({ earth: event.target.value });\n    this.props.appData.getElements().setEarth(event.target.value);\n  }\n  \n  onChangeEnergy = (event) => {\n    this.setState({ energy: event.target.value });\n    this.props.appData.getElements().setEnergy(event.target.value);\n  }\n  \n  onChangePhysical = (event) => {\n    this.setState({ physical: event.target.value });\n    this.props.appData.getElements().setPhysical(event.target.value);\n  }\n  \n  onChangeLifeDrain = (event) => {\n    this.setState({ lifeDrain: event.target.value });\n    this.props.appData.getElements().setLifeDrain(event.target.value);\n  }\n  \n  onChangeDrown = (event) => {\n    this.setState({ drown: event.target.value });\n    this.props.appData.getElements().setDrown(event.target.value);\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Elements\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Holy\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.holy }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeHoly }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.holy }\n                  onChange={ this.onChangeHoly }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Death\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.death }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeDeath }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.death }\n                  onChange={ this.onChangeDeath }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Ice\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.ice }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeIce }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.ice }\n                  onChange={ this.onChangeIce }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Fire\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.fire }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeFire }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.fire }\n                  onChange={this.onChangeFire}\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Earth\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.earth }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeEarth }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.earth }\n                  onChange={ this.onChangeEarth }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Energy\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.energy }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeEnergy }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.energy }\n                  onChange={ this.onChangeEnergy }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Physical\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.physical }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangePhysical }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.physical }\n                  onChange={ this.onChangePhysical }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Life Drain\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.lifeDrain }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeLifeDrain }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.lifeDrain }\n                  onChange={ this.onChangeLifeDrain }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Drown\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.drown }\n                  min=\"-100\"\n                  max=\"100\"\n                  onChange={ this.onChangeDrown }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{ width: \"100%\" }}\n                  value={ this.state.drown }\n                  onChange={ this.onChangeDrown }\n                  min=\"-100\"\n                  max=\"100\"\n                  step=\"1\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabElements;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabImmunities extends React.Component {\n  onChangeHoly = (event) => {\n    this.props.appData.getImmunities().setHoly(!this.props.appData.getImmunities().getHoly());\n  }\n\n  onChangeDeath = (event) => {\n    this.props.appData.getImmunities().setDeath(!this.props.appData.getImmunities().getDeath());\n  }\n\n  onChangeIce = (event) => {\n    this.props.appData.getImmunities().setIce(!this.props.appData.getImmunities().getIce());\n  }\n\n  onChangeFire = (event) => {\n    this.props.appData.getImmunities().setFire(!this.props.appData.getImmunities().getFire());\n  }\n\n  onChangeEarth = (event) => {\n    this.props.appData.getImmunities().setEarth(!this.props.appData.getImmunities().getEarth());\n  }\n\n  onChangeEnergy = (event) => {\n    this.props.appData.getImmunities().setEnergy(!this.props.appData.getImmunities().getEnergy());\n  }\n\n  onChangePhysical = (event) => {\n    this.props.appData.getImmunities().setPhysical(!this.props.appData.getImmunities().getPhysical());\n  }\n\n  onChangeLifeDrain = (event) => {\n    this.props.appData.getImmunities().setLifeDrain(!this.props.appData.getImmunities().getLifeDrain());\n  }\n\n  onChangeDrown = (event) => {\n    this.props.appData.getImmunities().setDrown(!this.props.appData.getImmunities().getDrown());\n  }\n\n  onChangeParalyze = (event) => {\n    this.props.appData.getImmunities().setParalyze(!this.props.appData.getImmunities().getParalyze());\n  }\n\n  onChangeDrunk = (event) => {\n    this.props.appData.getImmunities().setDrunk(!this.props.appData.getImmunities().getDrunk());\n  }\n\n  onChangeInvisible = (event) => {\n    this.props.appData.getImmunities().setInvisible(!this.props.appData.getImmunities().getInvisible());\n  }\n\n  onChangeOutfit = (event) => {\n    this.props.appData.getImmunities().setOutfit(!this.props.appData.getImmunities().getOutfit());\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <MonsterMakerLabel text=\"Immunities\" />\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeHoly}\n                  defaultChecked={ this.props.appData.getImmunities().getHoly() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Holy\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeDeath }\n                  defaultChecked={ this.props.appData.getImmunities().getDeath() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Death\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeIce }\n                  defaultChecked={ this.props.appData.getImmunities().getIce() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Ice\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeFire }\n                  defaultChecked={ this.props.appData.getImmunities().getFire() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Fire\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeEarth }\n                  defaultChecked={ this.props.appData.getImmunities().getEarth() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Earth\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeEnergy }\n                  defaultChecked={ this.props.appData.getImmunities().getEnergy() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Energy\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangePhysical }\n                  defaultChecked={ this.props.appData.getImmunities().getPhysical() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Physical\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeLifeDrain }\n                  defaultChecked={ this.props.appData.getImmunities().getLifeDrain() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Life Drain\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeDrown }\n                  defaultChecked={ this.props.appData.getImmunities().getDrown() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Drown\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeParalyze }\n                  defaultChecked={ this.props.appData.getImmunities().getParalyze() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Paralyze\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeDrunk }\n                  defaultChecked={ this.props.appData.getImmunities().getDrunk() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Drunk\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeInvisible }\n                  defaultChecked={ this.props.appData.getImmunities().getInvisible() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Invisible\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={ this.onChangeOutfit }\n                  defaultChecked={ this.props.appData.getImmunities().getOutfit() }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Outfit\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabImmunities;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerItemsTable from './MonsterMakerItemsTable.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabSummons extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      maxSummons: this.props.appData.getSummons().getMaxSummons(),\n\n      summonName: this.props.appData.getSummons().getSummonName(),\n      interval: this.props.appData.getSummons().getInterval(),\n      chance: this.props.appData.getSummons().getChance(),\n      max: this.props.appData.getSummons().getMax(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeMaxSummons = (event) => {\n    this.props.appData.getSummons().setMaxSummons(event.target.value);\n    this.setState({ maxSummons: event.target.value });\n  }\n\n  onChangeSummonName = (event) => {\n    this.props.appData.getSummons().setSummonName(event.target.value);\n    this.setState({ summonName: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexSummonName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getSummons().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getSummons().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getSummons().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getSummons().addToSummons();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().deleteFromSummons(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      summonName: this.props.appData.getSummons().getSummonName(),\n      interval: this.props.appData.getSummons().getInterval(),\n      chance: this.props.appData.getSummons().getChance(),\n      max: this.props.appData.getSummons().getMax()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getSummons().showSummons(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Max summons\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.maxSummons }\n                  min=\"0\"\n                  max=\"100\"\n                  onChange={ this.onChangeMaxSummons }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getSummons().getAllXMLSummons() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Summon name\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  value={ this.state.summonName }\n                  onChange={ this.onChangeSummonName }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Interval\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.interval }\n                  min=\"1000\"\n                  onChange={ this.onChangeInterval }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Chance\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.chance }\n                  min=\"1\"\n                  max=\"100\"\n                  onChange={ this.onChangeChance }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Max\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.max }\n                  min=\"1\"\n                  max=\"100\"\n                  onChange={ this.onChangeMax }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabSummons;\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerItemsTable from './MonsterMakerItemsTable.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabVoices extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      interval: this.props.appData.getVoices().getInterval(),\n      chance: this.props.appData.getVoices().getChance(),\n\n      sentence: this.props.appData.getVoices().getSentence(),\n      yell: this.props.appData.getVoices().getYell(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getVoices().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getVoices().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n  }\n\n  onChangeSentence = (event) => {\n    this.props.appData.getVoices().setSentence(event.target.value);\n    this.setState({ sentence: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().setIndexSentence(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeYell = (event) => {\n    this.props.appData.getVoices().setYell(!this.props.appData.getVoices().getYell());\n    this.setState({ yell: this.props.appData.getVoices().getYell() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().setIndexYell(this.state.activeItem, this.props.appData.getVoices().getYell());\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getVoices().addToVoices();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().deleteFromVoices(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      sentence: this.props.appData.getVoices().getSentence(),\n      yell: this.props.appData.getVoices().getYell()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getVoices().showVoices(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Interval\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.interval }\n                  min=\"1000\"\n                  onChange={ this.onChangeInterval }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel text=\"Chance\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.chance }\n                  min=\"1\"\n                  max=\"100\"\n                  onChange={ this.onChangeChance }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getVoices().getAllXMLVoices() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n        <MonsterMakerLabel text=\"Sentence\" />\n        <MonsterMakerInput\n          type=\"text\"\n          value={ this.state.sentence }\n          onChange={ this.onChangeSentence }\n        />\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  checked={ this.state.yell }\n                  onChange={ this.onChangeYell }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Yell\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabVoices;","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerInputSelect from './MonsterMakerInputSelect.js';\nimport MonsterMakerItemsTable from './MonsterMakerItemsTable.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nconst subtype = ['water', 'blood', 'beer', 'slime', 'lemonade', 'milk', 'manafluid', 'lifefluid', 'oil',\n'urine', 'coconut milk', 'wine', 'mud', 'fruit juice', 'lava', 'rum', 'swamp', 'tea', 'mead'];\n\nclass MonsterMakerTabLoot extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      id: this.props.appData.getLoot().getId(),\n      nameCheckbox: this.props.appData.getLoot().getNameCheckbox(),\n      name: this.props.appData.getLoot().getName(),\n      chance: this.props.appData.getLoot().getChance(),\n      countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox(),\n      countMax: this.props.appData.getLoot().getCountMax(),\n      subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox(),\n      subtype: this.props.appData.getLoot().getSubtype(),\n      actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox(),\n      actionId: this.props.appData.getLoot().getActionId(),\n      uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox(),\n      uniqueId: this.props.appData.getLoot().getUniqueId(),\n      textCheckbox: this.props.appData.getLoot().getTextCheckbox(),\n      text: this.props.appData.getLoot().getText(),\n      commentCheckbox: this.props.appData.getLoot().getCommentCheckbox(),\n      comment: this.props.appData.getLoot().getComment(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeId = (event) => {\n    this.props.appData.getLoot().setId(event.target.value);\n    this.setState({ id: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeNameCheckbox = (event) => {\n    this.props.appData.getLoot().setNameCheckbox(!this.props.appData.getLoot().getNameCheckbox());\n    this.setState({ nameCheckbox: this.props.appData.getLoot().getNameCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexNameCheckbox(this.state.activeItem, this.props.appData.getLoot().getNameCheckbox());\n    }\n  }\n\n  onChangeName = (event) => {\n    this.props.appData.getLoot().setName(event.target.value);\n    this.setState({ name: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getLoot().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeCountMaxCheckbox = (event) => {\n    this.props.appData.getLoot().setCountMaxCheckbox(!this.props.appData.getLoot().getCountMaxCheckbox());\n    this.setState({ countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCountMaxCheckbox(this.state.activeItem, this.props.appData.getLoot().getCountMaxCheckbox());\n    }\n  }\n\n  onChangeCountMax = (event) => {\n    this.props.appData.getLoot().setCountMax(event.target.value);\n    this.setState({ countMax: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCountMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSubtypeCheckbox = (event) => {\n    this.props.appData.getLoot().setSubtypeCheckbox(!this.props.appData.getLoot().getSubtypeCheckbox());\n    this.setState({ subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexSubtypeCheckbox(this.state.activeItem, this.props.appData.getLoot().getSubtypeCheckbox());\n    }\n  }\n\n  onChangeSubtype = (event) => {\n    this.props.appData.getLoot().setSubtype(event.target.value);\n    this.setState({ subtype: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexSubtype(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeActionIdCheckbox = (event) => {\n    this.props.appData.getLoot().setActionIdCheckbox(!this.props.appData.getLoot().getActionIdCheckbox());\n    this.setState({ actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexActionIdCheckbox(this.state.activeItem, this.props.appData.getLoot().getActionIdCheckbox());\n    }\n  }\n\n  onChangeActionId = (event) => {\n    this.props.appData.getLoot().setActionId(event.target.value);\n    this.setState({ actionId: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexActionId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeUniqueIdCheckbox = (event) => {\n    this.props.appData.getLoot().setUniqueIdCheckbox(!this.props.appData.getLoot().getUniqueIdCheckbox());\n    this.setState({ uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexUniqueIdCheckbox(this.state.activeItem, this.props.appData.getLoot().getUniqueIdCheckbox());\n    }\n  }\n\n  onChangeUniqueId = (event) => {\n    this.props.appData.getLoot().setUniqueId(event.target.value);\n    this.setState({ uniqueId: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexUniqueId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeTextCheckbox = (event) => {\n    this.props.appData.getLoot().setTextCheckbox(!this.props.appData.getLoot().getTextCheckbox());\n    this.setState({ textCheckbox: this.props.appData.getLoot().getTextCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexTextCheckbox(this.state.activeItem, this.props.appData.getLoot().getTextCheckbox());\n    }\n  }\n\n  onChangeText = (event) => {\n    this.props.appData.getLoot().setText(event.target.value);\n    this.setState({ text: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexText(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeCommentCheckbox = (event) => {\n    this.props.appData.getLoot().setCommentCheckbox(!this.props.appData.getLoot().getCommentCheckbox());\n    this.setState({ commentCheckbox: this.props.appData.getLoot().getCommentCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCommentCheckbox(this.state.activeItem, this.props.appData.getLoot().getCommentCheckbox());\n    }\n  }\n\n  onChangeComment = (event) => {\n    this.props.appData.getLoot().setComment(event.target.value);\n    this.setState({ comment: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexComment(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getLoot().addToLoot();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().deleteFromLoot(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      id: this.props.appData.getLoot().getId(),\n      nameCheckbox: this.props.appData.getLoot().getNameCheckbox(),\n      name: this.props.appData.getLoot().getName(),\n      chance: this.props.appData.getLoot().getChance(),\n      countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox(),\n      countMax: this.props.appData.getLoot().getCountMax(),\n      subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox(),\n      subtype: this.props.appData.getLoot().getSubtype(),\n      actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox(),\n      actionId: this.props.appData.getLoot().getActionId(),\n      uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox(),\n      uniqueId: this.props.appData.getLoot().getUniqueId(),\n      textCheckbox: this.props.appData.getLoot().getTextCheckbox(),\n      text: this.props.appData.getLoot().getText(),\n      commentCheckbox: this.props.appData.getLoot().getCommentCheckbox(),\n      comment: this.props.appData.getLoot().getComment(),\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getLoot().showLoot(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getLoot().getAllXMLLoot() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Id\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.id }\n                  min=\"1\"\n                  max=\"100000\"\n                  onChange={ this.onChangeId }\n                  disabled={ this.state.nameCheckbox }\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  checked={ this.state.nameCheckbox }\n                  onChange={ this.onChangeNameCheckbox }\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Name\"\n                />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  value={ this.state.name }\n                  onChange={ this.onChangeName }\n                  disabled={ !this.state.nameCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"Chance\" />\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.chance }\n                  min=\"1\"\n                  onChange={ this.onChangeChance }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.countMaxCheckbox }\n                          onChange={ this.onChangeCountMaxCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Count Max\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.countMax }\n                  min=\"1\"\n                  max=\"10000000\"\n                  onChange={ this.onChangeCountMax }\n                  disabled={ !this.state.countMaxCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.subtypeCheckbox }\n                          onChange={ this.onChangeSubtypeCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Subtype\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInputSelect\n                  selectItems={ subtype }\n                  value={ this.state.subtype }\n                  onChange={ this.onChangeSubtype }\n                  disabled={ !this.state.subtypeCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.actionIdCheckbox }\n                          onChange={ this.onChangeActionIdCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Action Id\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.actionId }\n                  min=\"0\"\n                  max=\"10000000\"\n                  onChange={ this.onChangeActionId }\n                  disabled={ !this.state.actionIdCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.uniqueIdCheckbox }\n                          onChange={ this.onChangeUniqueIdCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Unique Id\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"number\"\n                  value={ this.state.uniqueId }\n                  min=\"0\"\n                  max=\"10000000\"\n                  onChange={ this.onChangeUniqueId }\n                  disabled={ !this.state.uniqueIdCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.textCheckbox }\n                          onChange={ this.onChangeTextCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Text\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  value={ this.state.text }\n                  onChange={ this.onChangeText }\n                  disabled={ !this.state.textCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.commentCheckbox }\n                          onChange={ this.onChangeCommentCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Comment\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  value={ this.state.comment }\n                  onChange={ this.onChangeComment }\n                  disabled={ !this.state.commentCheckbox }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabLoot;\n","import React from 'react';\r\n\r\nconst containerStyle = {\r\n    maxHeight: 250,\r\n    width: '100%',\r\n    margin: 5,\r\n    overflow: 'auto',\r\n\r\n    //textAlign: 'center',\r\n    backgroundColor: '#000000',\r\n    color: '#FFFFFF',\r\n\r\n    whiteSpace: 'pre'\r\n}\r\n\r\nconst textContainerStyle = {\r\n    margin: 'auto',\r\n    display: 'table'\r\n}\r\n\r\nclass MonsterMakerCode extends React.Component {\r\n    render() {\r\n        return(\r\n            <div style={ containerStyle } >\r\n                <div style={ textContainerStyle } >\r\n                    { this.props.text }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonsterMakerCode;\r\n","import React from 'react';\n\nimport MonsterMakerLabel from './MonsterMakerLabel.js';\nimport MonsterMakerInput from './MonsterMakerInput.js';\nimport MonsterMakerButton from './MonsterMakerButton.js';\nimport MonsterMakerCode from './MonsterMakerCode.js';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nclass MonsterMakerTabIO extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox(),\n      ownName: this.props.appData.getIO().getOwnName(),\n\n      name: this.props.appData.getIO().getName(),\n      fileOwnName: ''\n    }\n  }\n\n  onChangeOwnNameCheckbox = (event) => {\n    this.props.appData.getIO().setOwnNameCheckbox(!this.props.appData.getIO().getOwnNameCheckbox());\n    this.setState({ ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox() });\n    if (this.props.appData.getIO().getOwnNameCheckbox()) {\n      this.setState({ name: this.state.ownName });\n      this.props.appData.getIO().setName(this.state.ownName);\n    } else {\n      this.setState({ name: this.props.appData.getMonster().getName() });\n      this.props.appData.getIO().setName(this.props.appData.getMonster().getName());\n    }\n  }\n\n  onChangeOwnName = (event) => {\n    this.props.appData.getIO().setOwnName(event.target.value);\n    this.setState({ ownName: event.target.value });\n    this.setState({ name: event.target.value });\n    this.props.appData.getIO().setName(event.target.value);\n  }\n\n  onChangePath = (event) => {\n    this.props.appData.getIO().loadFile(event.target.files[0]);\n    \n    let newName = event.target.files[0].name;\n    if (newName.substring(newName.length - 4, newName.length) === '.xml') {\n      newName = newName.substring(0, newName.length - 4);\n    }\n    this.state.fileOwnName = newName;\n  }\n\n  downloadFile = () => {\n    this.props.appData.downloadFile();\n  }\n\n  uploadFile = () => {\n    if (window.confirm('Are you sure you wish to load a file and lost current data?')) {\n      this.props.appData.parseXMLFile();\n\n      if (this.state.fileOwnName !== '') {\n        this.props.appData.getIO().setOwnNameCheckbox(true);\n        this.props.appData.getIO().setOwnName(this.state.fileOwnName);\n        this.props.appData.getIO().setName(this.state.fileOwnName);\n        this.setState({\n          ownName: this.props.appData.getIO().getOwnName(),\n          name: this.props.appData.getIO().getName(),\n          ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox()\n        });\n      } else {\n        this.props.appData.getIO().setOwnNameCheckbox(false);\n        this.setState({ name: this.props.appData.getMonster().getName() });\n      }\n    }\n  }\n\n  setDefaultValue = () => {\n    if (window.confirm('Are you sure you wish to clear all this items?')) {\n      this.props.appData.setDefaultValue();\n      this.setState({\n        ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox(),\n        ownName: this.props.appData.getIO().getOwnName(),\n        name: this.props.appData.getMonster().getName()\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <MonsterMakerLabel text=\"Export\" />\n        <hr/>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerLabel text=\"File name: \" />\n              </td>\n              <td>\n                <MonsterMakerLabel text={ this.state.name + \".xml\" } style={{ minWidth: 100, color: 'green' }} />\n              </td>\n              <td>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <MonsterMakerInput\n                          type=\"checkbox\"\n                          checked={ this.state.ownNameCheckbox }\n                          onChange={ this.onChangeOwnNameCheckbox }\n                        />\n                      </td>\n                      <td>\n                        <MonsterMakerLabel text=\"Own name\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <MonsterMakerInput\n                  type=\"text\"\n                  value={ this.state.ownName }\n                  onChange={ this.onChangeOwnName }\n                  disabled={ !this.state.ownNameCheckbox }\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerButton\n                  icon = \"ra-load\"\n                  onClick = { this.downloadFile }\n                  tooltip = \"Download file\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <MonsterMakerLabel text=\"Import\" />\n        <hr/>\n        <MonsterMakerInput\n          type=\"file\"\n          style={{ margin: 5 }}\n          onChange={ this.onChangePath }\n        />\n        <MonsterMakerButton\n          icon = \"ra-save\"\n          onClick = { this.uploadFile }\n          tooltip = \"Load file\"\n        />\n        <MonsterMakerLabel text=\"Other\" />\n        <hr/>\n        <MonsterMakerButton\n          icon = \"ra-recycle\"\n          onClick = { this.setDefaultValue }\n          tooltip = \"Clear all data\"\n        />\n        <MonsterMakerCode text={ this.props.appData.getLineMonstersXML() } />\n        <MonsterMakerCode text={ this.props.appData.getXML() } />\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabIO;\n","import React from 'react';\n\nconst tabStyle = {\n  padding: '15px 15px 10px 15px',\n  width: 'fit-content',\n  margin: '0px auto 0px auto',\n  backgroundColor: 'rgba(255, 255, 255, 0.6)',\n  borderRadius: 25\n}\n\nconst monsterMakerDefaultH1 = {\n  textAlign: 'center',\n};\n\nclass MonsterMakerTabDefault extends React.Component {\n  render() {\n    return (\n      <div style={ tabStyle }>\n        <h1 style={monsterMakerDefaultH1} >Monster maker tool prepared for TFS 1.3</h1>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabDefault;\n","import React from 'react';\n\nimport MonsterMakerMenuItem from './MonsterMakerMenuItem';\n\nimport MonsterMakerTabMonster from './MonsterMakerTabMonster';\nimport MonsterMakerTabFlags from './MonsterMakerTabFlags';\nimport MonsterMakerTabScript from './MonsterMakerTabScript';\nimport MonsterMakerTabAttacks from './MonsterMakerTabAttacks';\nimport MonsterMakerTabDefenses from './MonsterMakerTabDefenses';\nimport MonsterMakerTabElements from './MonsterMakerTabElements';\nimport MonsterMakerTabImmunities from './MonsterMakerTabImmunities';\nimport MonsterMakerTabSummons from './MonsterMakerTabSummons';\nimport MonsterMakerTabVoices from './MonsterMakerTabVoices';\nimport MonsterMakerTabLoot from './MonsterMakerTabLoot';\nimport MonsterMakerTabIO from './MonsterMakerTabIO';\nimport MonsterMakerTabDefault from './MonsterMakerTabDefault';\n\nconst monsterMakerMenuStyle = {\n  backgroundColor: '#333',\n  listStyleType: 'none',\n  margin: 0,\n  padding: 0,\n  overflow: 'auto'\n};\n\nconst mainWindowStyle = {\n  height: 'auto',\n  minHeight: '100%',\n  backgroundImage: 'linear-gradient( 107deg,  rgba(2,108,223,1) 27.4%, rgba(0,255,255,1) 92.7% )'\n}\n\nclass MonsterMakerMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeItem: '',\n      attacksActiveItem: null,\n      defensesActiveItem: null,\n      summonsActiveItem: null,\n      voicesActiveItem: null,\n      lootActiveItem: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.appData.loadValuesFromLocalStorage();\n  }\n\n  handleItemClick = (state) => {\n    this.setState({ activeItem: state });\n  }\n\n  changeState = (item) => {\n    if (item !== this.state.activeItem) {\n      this.setState({ activeItem: item });\n    }\n  }\n\n  changeAttacksActiveItem = (state) => {\n    this.setState({ attacksActiveItem: state });\n  }\n\n  changeDefensesActiveItem = (state) => {\n    this.setState({ defensesActiveItem: state });\n  }\n\n  changeSummonsActiveItem = (state) => {\n    this.setState({ summonsActiveItem: state });\n  }\n\n  changeVoicesActiveItem = (state) => {\n    this.setState({ voicesActiveItem: state });\n  }\n\n  changeLootActiveItem = (state) => {\n    this.setState({ lootActiveItem: state });\n  }\n\n  render() {\n    const activeItem = this.state.activeItem\n\n    return (\n      <div style={ mainWindowStyle }>\n        <ul style={ monsterMakerMenuStyle }>\n          <MonsterMakerMenuItem\n            name=\"Monster\"\n            active={activeItem === \"Monster\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-dragon\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Flags\"\n            active={activeItem === \"Flags\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-castle-flag\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Script\"\n            active={activeItem === \"Script\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-book\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Attacks\"\n            active={activeItem === \"Attacks\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-lightning-sword\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Defenses\"\n            active={activeItem === \"Defenses\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-broken-shield\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Elements\"\n            active={activeItem === \"Elements\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-doubled\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Immunities\"\n            active={activeItem === \"Immunities\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-player-thunder-struck\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Summons\"\n            active={activeItem === \"Summons\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-pawprint\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Voices\"\n            active={activeItem === \"Voices\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-aware\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Loot\"\n            active={activeItem === \"Loot\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-vase\"\n          />\n          <MonsterMakerMenuItem\n            name=\"I/O\"\n            active={activeItem === \"I/O\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-cycle\"\n          />\n        </ul>\n        <div>\n          { this.state.activeItem === \"Monster\" ? <MonsterMakerTabMonster appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Flags\" ? <MonsterMakerTabFlags appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Script\" ? <MonsterMakerTabScript appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Attacks\" ? <MonsterMakerTabAttacks appData={this.props.appData} activeItem={this.state.attacksActiveItem} changeActiveItem={this.changeAttacksActiveItem} /> : null }\n          { this.state.activeItem === \"Defenses\" ? <MonsterMakerTabDefenses appData={this.props.appData} activeItem={this.state.defensesActiveItem} changeActiveItem={this.changeDefensesActiveItem} /> : null }\n          { this.state.activeItem === \"Elements\" ? <MonsterMakerTabElements appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Immunities\" ? <MonsterMakerTabImmunities appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Summons\" ? <MonsterMakerTabSummons appData={this.props.appData} activeItem={this.state.summonsActiveItem} changeActiveItem={this.changeSummonsActiveItem} /> : null }\n          { this.state.activeItem === \"Voices\" ? <MonsterMakerTabVoices appData={this.props.appData} activeItem={this.state.voicesActiveItem} changeActiveItem={this.changeVoicesActiveItem} /> : null }\n          { this.state.activeItem === \"Loot\" ? <MonsterMakerTabLoot appData={this.props.appData} activeItem={this.state.lootActiveItem} changeActiveItem={this.changeLootActiveItem} /> : null }\n          { this.state.activeItem === \"I/O\" ? <MonsterMakerTabIO appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"\" ? <MonsterMakerTabDefault /> : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerMenu;\n","import React from 'react';\n\nimport AppData from './js/AppData.js';\n\nimport './App.css';\n\nimport MonsterMakerMenu from './components/MonsterMakerMenu.js';\n\nfunction App() {\n  var appData = new AppData();\n\n  return (\n    <MonsterMakerMenu appData={appData} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}